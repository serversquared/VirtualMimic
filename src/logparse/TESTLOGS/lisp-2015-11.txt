2015-11-01T00:00:34Z varjagg quit (Ping timeout: 244 seconds)
2015-11-01T00:03:56Z Petit_Dejeuner`: I write CL code that can automates a process that causes the other person's server to do things its owner thought and hoped were impossible.
2015-11-01T00:05:26Z Dynamicmetaflow quit (Ping timeout: 240 seconds)
2015-11-01T00:10:59Z pjb: Sounds good.  CL, Common Magic.
2015-11-01T00:15:00Z phoe_krk: "I write CL code that can automates a process that causes the other person's server to do things its owner thought and hoped were impossible."
2015-11-01T00:15:26Z phoe_krk: sounds like a proper testimony of Lisp used by the Lisp preachers
2015-11-01T00:16:18Z znpy quit (Ping timeout: 268 seconds)
2015-11-01T00:16:24Z phoe_krk: also, #twitchinstalls is about to spend more time logging in than installing and setting their base system.
2015-11-01T00:19:07Z tharu quit (Quit: WeeChat 1.3)
2015-11-01T00:19:18Z vydd joined #lisp
2015-11-01T00:20:54Z pt1 quit (Remote host closed the connection)
2015-11-01T00:21:08Z samssammerz quit (Remote host closed the connection)
2015-11-01T00:22:55Z vydd quit (Read error: No route to host)
2015-11-01T00:23:29Z vydd joined #lisp
2015-11-01T00:23:29Z vydd quit (Changing host)
2015-11-01T00:23:29Z vydd joined #lisp
2015-11-01T00:28:49Z znpy joined #lisp
2015-11-01T00:41:37Z grouzen quit (Ping timeout: 250 seconds)
2015-11-01T00:42:20Z _leb quit (Quit: Computer has gone to sleep.)
2015-11-01T00:43:01Z leb joined #lisp
2015-11-01T00:45:49Z keen___________2 joined #lisp
2015-11-01T00:46:26Z keen___________1 quit (Ping timeout: 240 seconds)
2015-11-01T00:48:51Z badkins joined #lisp
2015-11-01T00:51:51Z smokeink joined #lisp
2015-11-01T00:52:40Z kristof quit (Ping timeout: 272 seconds)
2015-11-01T00:52:40Z loadsdow` quit (Ping timeout: 272 seconds)
2015-11-01T00:55:46Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-01T00:55:58Z james__ joined #lisp
2015-11-01T00:58:15Z theethicalegoist quit (Ping timeout: 256 seconds)
2015-11-01T01:01:45Z futpib quit (Ping timeout: 255 seconds)
2015-11-01T01:03:45Z Shinmera quit (Quit: しつれいしなければならないんです。)
2015-11-01T01:04:14Z znpy quit (Ping timeout: 260 seconds)
2015-11-01T01:05:03Z cmoney joined #lisp
2015-11-01T01:11:21Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-01T01:18:51Z znpy joined #lisp
2015-11-01T01:20:26Z ekinmur joined #lisp
2015-11-01T01:20:58Z znpy quit (Remote host closed the connection)
2015-11-01T01:23:31Z cmoney quit (Remote host closed the connection)
2015-11-01T01:23:47Z jason_m quit (Ping timeout: 252 seconds)
2015-11-01T01:24:39Z pjb: Sounds good.  CL, Common Magic.
2015-11-01T01:29:22Z ryouma` joined #lisp
2015-11-01T01:29:39Z ryouma`: pjb: couldn't find the code at http://www.informatimago.com/develop/lisp/doc/com.informatimago.common-lisp.cesarum.sequence.html
2015-11-01T01:30:31Z ryouma`: oic git
2015-11-01T01:34:48Z phoe_krk: pjb: you already said that
2015-11-01T01:36:05Z raphaelss joined #lisp
2015-11-01T01:36:13Z stardiviner joined #lisp
2015-11-01T01:41:28Z cmoney joined #lisp
2015-11-01T01:45:48Z keen_ joined #lisp
2015-11-01T01:46:30Z keen___________2 quit (Ping timeout: 240 seconds)
2015-11-01T01:47:43Z lispyone_ joined #lisp
2015-11-01T01:51:38Z Dynamicmetaflow joined #lisp
2015-11-01T01:52:34Z lispyone_ quit (Ping timeout: 265 seconds)
2015-11-01T01:52:54Z sjl quit (Ping timeout: 260 seconds)
2015-11-01T01:53:00Z Dynamicmetaflow left #lisp
2015-11-01T01:58:27Z sjl joined #lisp
2015-11-01T02:00:39Z IRLRaceCondition joined #lisp
2015-11-01T02:04:31Z papachan is now known as papachan_
2015-11-01T02:05:02Z raphaelss quit (Ping timeout: 260 seconds)
2015-11-01T02:05:26Z pjb: phoe_krk: yes, sometimes I use M-p to get the previous command, and type RET too fast :-(
2015-11-01T02:05:37Z cmoney quit (Remote host closed the connection)
2015-11-01T02:05:49Z thalassa joined #lisp
2015-11-01T02:06:20Z raphaelss joined #lisp
2015-11-01T02:06:32Z pjb: ryouma`: it's also in quicklisp.
2015-11-01T02:06:54Z wailord joined #lisp
2015-11-01T02:07:20Z snv joined #lisp
2015-11-01T02:12:21Z IRLRaceCondition is now known as MetaSexual
2015-11-01T02:15:13Z snv quit (Quit: Leaving.)
2015-11-01T02:15:33Z phoe_krk: good night, #parens
2015-11-01T02:15:45Z snv joined #lisp
2015-11-01T02:17:15Z snv quit (Client Quit)
2015-11-01T02:32:26Z raphaelss quit (Read error: Connection reset by peer)
2015-11-01T02:32:44Z scymtym_ quit (Ping timeout: 272 seconds)
2015-11-01T02:40:58Z SamSkulls quit (Ping timeout: 272 seconds)
2015-11-01T02:42:00Z Beetny joined #lisp
2015-11-01T02:42:14Z Petit_Dejeuner` quit (Ping timeout: 272 seconds)
2015-11-01T02:44:58Z Whymind joined #lisp
2015-11-01T02:48:31Z tmtwd joined #lisp
2015-11-01T02:50:07Z james__ quit (Ping timeout: 246 seconds)
2015-11-01T02:56:42Z znpy joined #lisp
2015-11-01T03:00:28Z Petit_Dejeuner` joined #lisp
2015-11-01T03:02:52Z wailord quit (Changing host)
2015-11-01T03:02:52Z wailord joined #lisp
2015-11-01T03:03:44Z mike-1-2-3 joined #lisp
2015-11-01T03:07:07Z quasus quit (Ping timeout: 268 seconds)
2015-11-01T03:12:42Z TDT quit (Quit: TDT)
2015-11-01T03:14:59Z segmond quit (Ping timeout: 240 seconds)
2015-11-01T03:24:02Z raphaelss joined #lisp
2015-11-01T03:24:10Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-01T03:28:26Z sjl quit (Ping timeout: 240 seconds)
2015-11-01T03:28:52Z CEnnis91 quit (Quit: Connection closed for inactivity)
2015-11-01T03:28:53Z segmond joined #lisp
2015-11-01T03:34:14Z quazimodo joined #lisp
2015-11-01T03:36:36Z Karl_Dscc joined #lisp
2015-11-01T03:36:42Z NeverDie joined #lisp
2015-11-01T03:37:03Z lispyone_ joined #lisp
2015-11-01T03:39:34Z Bike quit (Remote host closed the connection)
2015-11-01T03:40:06Z MetaSexual is now known as MetaBolism
2015-11-01T03:41:38Z lispyone_ quit (Ping timeout: 260 seconds)
2015-11-01T03:47:02Z leafybasil quit (Remote host closed the connection)
2015-11-01T03:49:08Z raphaelss quit (Read error: Connection reset by peer)
2015-11-01T03:51:28Z Karl_Dscc quit (Remote host closed the connection)
2015-11-01T03:53:06Z sjl joined #lisp
2015-11-01T03:53:21Z quazimodo quit (Ping timeout: 256 seconds)
2015-11-01T03:54:03Z Oladon quit (Read error: Connection reset by peer)
2015-11-01T03:56:51Z wailord quit (Quit: bye - znc)
2015-11-01T03:58:55Z sjl quit (Ping timeout: 268 seconds)
2015-11-01T04:01:10Z mike-1-2-3 quit (Quit: Lost terminal)
2015-11-01T04:22:52Z sjl joined #lisp
2015-11-01T04:26:29Z defaultxr quit (Quit: gnight)
2015-11-01T04:32:38Z sdothum quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-11-01T04:37:25Z beach joined #lisp
2015-11-01T04:37:43Z beach: Good morning everyone!
2015-11-01T04:38:19Z FreeBirdLjj joined #lisp
2015-11-01T04:41:33Z nyef: Hello beach.
2015-11-01T04:42:57Z OrangeShark quit (Quit: Leaving)
2015-11-01T04:43:25Z guicho joined #lisp
2015-11-01T04:45:28Z Petit_Dejeuner`: good morning
2015-11-01T04:45:30Z quazimodo joined #lisp
2015-11-01T04:46:22Z smokeink quit (Ping timeout: 260 seconds)
2015-11-01T04:47:50Z sjl quit (Ping timeout: 240 seconds)
2015-11-01T04:51:06Z wizzo is now known as bitchimightbe
2015-11-01T04:52:22Z bitchimightbe is now known as wizzo
2015-11-01T04:55:49Z nyef: Ooh. Clock change tonight, isn't it?
2015-11-01T04:55:57Z beach: For you, yes.
2015-11-01T04:56:01Z beach: Here it was last week.
2015-11-01T04:56:18Z nyef: Might let me catch up on the sleep that I'm missing trying to get one last test run done.
2015-11-01T04:57:09Z beach: Better get that test run done before the clocks change to daylight savings time again.
2015-11-01T04:57:32Z nyef: I think I can manage to get it done before next spring, yes.
2015-11-01T04:57:44Z beach: Good, good. :)
2015-11-01T04:58:13Z nyef: Might even be able to fix some of the bugs it points out by then as well. (-:
2015-11-01T04:58:29Z beach: Even better.
2015-11-01T04:58:34Z beach: What system is this?
2015-11-01T04:58:39Z nyef: MIPS.
2015-11-01T04:58:49Z nyef: SBCL.
2015-11-01T04:58:53Z beach: Ah, OK.
2015-11-01T04:59:21Z Jesin quit (Quit: Leaving)
2015-11-01T04:59:40Z nyef: Already fixed a few doozies.
2015-11-01T05:00:10Z beach: Fewer eyeballs on MIPS I guess.
2015-11-01T05:00:14Z quazimodo quit (Ping timeout: 244 seconds)
2015-11-01T05:00:41Z leafybasil joined #lisp
2015-11-01T05:00:47Z leb quit (Quit: Computer has gone to sleep.)
2015-11-01T05:00:51Z guicho: |3b|: I and at least another guy (gos-k) is interested in implementing opencl interface for CL. We started individually and I started my lib as a fork of your cl-opencl-3b, but gos-k complains its license is ambiguous. could you add one to yours?
2015-11-01T05:01:13Z nyef: Mmm. Finding a MIPS system fast enough to do a build on in less than half a day has been an issue, historically.
2015-11-01T05:01:36Z pjb: emulators?
2015-11-01T05:01:42Z nyef: Even emulators are slow.
2015-11-01T05:01:59Z nyef: Also, emulators aren't as trustworthy as real hardware.
2015-11-01T05:02:21Z White_Flame: nyef: nobody offering some SiCortex time?
2015-11-01T05:04:24Z nyef: Hunh. They were based out of Maynard, MA. I used to live in that town.
2015-11-01T05:05:15Z leafybasil quit (Ping timeout: 252 seconds)
2015-11-01T05:05:45Z nyef: beach: Here's a fun one, also floating-point related: HPPA and MIPS have the opposite scheme for distinguishing SNaN and QNaN as compared with every other backend in SBCL.
2015-11-01T05:06:45Z nyef: And so, of course, SB-EXT:FLOAT-NAN-P and SB-EXT:FLOAT-TRAPPING-NAN-P were a horrible, horrible mess, leading to quite a bit of general badness.
2015-11-01T05:07:07Z quazimodo joined #lisp
2015-11-01T05:07:49Z beach: Sounds bad.
2015-11-01T05:07:56Z beach: Can the schemes be unified?
2015-11-01T05:08:23Z nyef: It's a single bit that's interpreted differently at the FPU level.
2015-11-01T05:08:43Z beach: Oh, I thought it was well defined at the hardware level.  Not so?
2015-11-01T05:09:04Z Subfusc quit (Ping timeout: 246 seconds)
2015-11-01T05:09:20Z nyef: In a way, we're lucky that the, what, nine different backends that we have all use the same general convention, even if two of them swap SNaN and QNaN.
2015-11-01T05:10:10Z nyef: I'm given to understand that the IEEE spec requires that there be at least one SNaN and at least one QNaN, but leaves the precise details up to the implementation.
2015-11-01T05:10:25Z beach: That explains the difference.  I had no idea.
2015-11-01T05:10:33Z nyef: Oh, and there has to be at least one (or two?) infinities.
2015-11-01T05:11:04Z Takumo quit (Ping timeout: 272 seconds)
2015-11-01T05:11:04Z micro_ quit (Ping timeout: 268 seconds)
2015-11-01T05:11:09Z ecraven quit (Ping timeout: 250 seconds)
2015-11-01T05:11:33Z pchrist quit (Ping timeout: 256 seconds)
2015-11-01T05:12:08Z nyef: Okay, last test for tonight, I hope: Was that sb-gmp build failure a transient failure, or does it somehow depend on getting a 64-bit result for integer register values?
2015-11-01T05:12:10Z Subfusc joined #lisp
2015-11-01T05:12:11Z Quadrescence: is there a portability library for hash tables which allow defining ones own equality function?
2015-11-01T05:12:50Z micro__ joined #lisp
2015-11-01T05:13:14Z micro__ is now known as Guest99686
2015-11-01T05:13:17Z blubjr: whats wrong with the standard
2015-11-01T05:14:17Z kobain quit (Quit: KVIrc 4.1.3 Equilibrium http://www.kvirc.net/)
2015-11-01T05:14:25Z Quadrescence: blubjr, you mean with respect to hash tables?
2015-11-01T05:15:01Z keen_ quit (Ping timeout: 246 seconds)
2015-11-01T05:15:14Z keen_ joined #lisp
2015-11-01T05:15:38Z blubjr: what do you want
2015-11-01T05:15:52Z nyef sighs.
2015-11-01T05:16:00Z Quadrescence: blubjr, I have a special data type that I want as hash keys that doesn't compare with any of the equality functions
2015-11-01T05:16:01Z nyef: Okay, I must have broken something somewhere, somehow.
2015-11-01T05:16:12Z ecraven joined #lisp
2015-11-01T05:16:22Z White_Flame: Quadrescence: on quicklisp, https://github.com/metawilm/cl-custom-hash-table
2015-11-01T05:17:07Z Quadrescence: White_Flame, great!
2015-11-01T05:17:17Z White_Flame: that one isn't transparent to use, though
2015-11-01T05:17:49Z White_Flame: what I would actually desire, and isn't easy to work with in standard means, is the ability to provide a hash value directly to gethash, along with the key object
2015-11-01T05:17:50Z Takumo joined #lisp
2015-11-01T05:17:50Z Takumo quit (Changing host)
2015-11-01T05:17:50Z Takumo joined #lisp
2015-11-01T05:18:00Z White_Flame: useful if the hash is expensive to calculate, and should be cached on the object
2015-11-01T05:18:20Z Quadrescence: White_Flame, what about making the hash function look at the cache first?
2015-11-01T05:18:24Z Quadrescence: and otherwise calculating it
2015-11-01T05:18:25Z White_Flame: though a custom hash function could in theory solve that problem, it has a lot of contextual differences
2015-11-01T05:18:35Z pchrist joined #lisp
2015-11-01T05:18:47Z Quadrescence: What do you mean
2015-11-01T05:19:35Z White_Flame: one of the issues we were dealing with is that the keys were immutable, meaning you couldn't actually store the hash directly on it, if it didn't exist first
2015-11-01T05:20:00Z Quadrescence: so then how would you cache the hash otherwise?
2015-11-01T05:20:14Z Quadrescence: all I can think is upon creation, but if that's the case, then just make the hash function an access function
2015-11-01T05:20:15Z White_Flame: so depending on how keys were made, or how gethash was called, and with whatever info available to it, it'd be better to expose the hash (for our cases we were looking at years ago) as a separate optional parameter
2015-11-01T05:20:19Z k-stz quit (Remote host closed the connection)
2015-11-01T05:22:58Z antonv quit (Ping timeout: 244 seconds)
2015-11-01T05:24:30Z SkullGreymon quit (Remote host closed the connection)
2015-11-01T05:25:56Z White_Flame: oh, as far as storage/association of the hash values to the complex keys, this was all being held in a knowledge base, with extra slots on facts for such info
2015-11-01T05:26:45Z quazimodo quit (Ping timeout: 250 seconds)
2015-11-01T05:27:06Z shookees quit (Ping timeout: 244 seconds)
2015-11-01T05:27:31Z Uptime joined #lisp
2015-11-01T05:27:45Z jleija quit (Quit: leaving)
2015-11-01T05:30:32Z mac_ified quit
2015-11-01T05:30:49Z znpy quit (Ping timeout: 256 seconds)
2015-11-01T05:33:13Z keen_ quit (Quit: Tiarra 0.1+svn-39209: SIGTERM received; exit)
2015-11-01T05:33:55Z thalassa quit (Remote host closed the connection)
2015-11-01T05:35:18Z sjl joined #lisp
2015-11-01T05:42:38Z sjl quit (Ping timeout: 265 seconds)
2015-11-01T05:57:44Z Draz quit (Quit: Leaving)
2015-11-01T05:59:11Z MetaBolism quit (Quit: Connection closed for inactivity)
2015-11-01T06:01:20Z leafybasil joined #lisp
2015-11-01T06:06:07Z leafybasil quit (Ping timeout: 246 seconds)
2015-11-01T06:06:31Z blubjr quit (Read error: Connection reset by peer)
2015-11-01T06:07:11Z blubjr joined #lisp
2015-11-01T06:10:22Z Bike joined #lisp
2015-11-01T06:14:34Z smokeink joined #lisp
2015-11-01T06:18:55Z shka joined #lisp
2015-11-01T06:20:32Z NeverDie_ joined #lisp
2015-11-01T06:20:47Z NeverDie quit (Ping timeout: 252 seconds)
2015-11-01T06:23:39Z pyon quit (Quit: Angels fall, all for you, heretic! Demon heart, bleed for us! (My soul is yours, Dark Master. I will fight for you.))
2015-11-01T06:27:02Z shka quit (Remote host closed the connection)
2015-11-01T06:28:27Z solyd joined #lisp
2015-11-01T06:28:59Z shka joined #lisp
2015-11-01T06:29:16Z snv joined #lisp
2015-11-01T06:29:23Z zadock joined #lisp
2015-11-01T06:30:50Z zadock quit (Remote host closed the connection)
2015-11-01T06:38:08Z edgar-rft joined #lisp
2015-11-01T06:43:52Z guicho: minion: memo for |3b|: I and at least one guy (gos-k) is interested in implementing opencl interface for CL. We started individually but we decided to cooperate. I started my lib as a fork of your cl-opencl-3b, but gos-k complains its license is ambiguous. could you add one to yours?
2015-11-01T06:43:52Z minion: Remembered. I'll tell |3b| when he/she/it next speaks.
2015-11-01T06:44:25Z guicho quit (Quit: さようなら)
2015-11-01T06:52:16Z native_killer joined #lisp
2015-11-01T06:56:07Z resttime quit (Quit: Bye bye!)
2015-11-01T06:57:11Z shka quit (Quit: Konversation terminated!)
2015-11-01T06:57:18Z shka_ joined #lisp
2015-11-01T06:57:21Z vlatkoB joined #lisp
2015-11-01T07:02:18Z solyd quit (Ping timeout: 260 seconds)
2015-11-01T07:04:45Z Bike quit (Quit: Lost terminal)
2015-11-01T07:05:10Z Bike joined #lisp
2015-11-01T07:11:20Z xrash joined #lisp
2015-11-01T07:11:36Z shookees joined #lisp
2015-11-01T07:14:39Z lispyone_ joined #lisp
2015-11-01T07:19:26Z lispyone_ quit (Ping timeout: 260 seconds)
2015-11-01T07:30:42Z shka_ quit (Remote host closed the connection)
2015-11-01T07:31:30Z shka_ joined #lisp
2015-11-01T07:31:40Z happy-dude quit (Quit: Connection closed for inactivity)
2015-11-01T07:32:16Z sjl joined #lisp
2015-11-01T07:35:11Z cadadar joined #lisp
2015-11-01T07:41:02Z sjl quit (Ping timeout: 260 seconds)
2015-11-01T07:43:12Z earl-ducaine_ joined #lisp
2015-11-01T07:43:23Z earl-ducaine quit (Ping timeout: 264 seconds)
2015-11-01T07:43:30Z sjl joined #lisp
2015-11-01T07:44:05Z ggole joined #lisp
2015-11-01T07:48:10Z sword```` joined #lisp
2015-11-01T07:50:37Z sword``` quit (Ping timeout: 250 seconds)
2015-11-01T07:53:34Z ogamita quit (Ping timeout: 246 seconds)
2015-11-01T07:56:27Z pt1 joined #lisp
2015-11-01T07:59:33Z solyd joined #lisp
2015-11-01T08:03:43Z hydan joined #lisp
2015-11-01T08:07:55Z solyd quit (Ping timeout: 246 seconds)
2015-11-01T08:10:07Z bb010g quit (Quit: Connection closed for inactivity)
2015-11-01T08:10:33Z cadadar1 joined #lisp
2015-11-01T08:11:14Z cadadar quit (Ping timeout: 260 seconds)
2015-11-01T08:12:02Z sjl quit (Read error: Connection reset by peer)
2015-11-01T08:12:17Z hydan quit (Remote host closed the connection)
2015-11-01T08:16:03Z mrSpec joined #lisp
2015-11-01T08:25:02Z cadadar1 quit (Ping timeout: 265 seconds)
2015-11-01T08:25:21Z tmtwd quit (Ping timeout: 244 seconds)
2015-11-01T08:26:30Z sjl joined #lisp
2015-11-01T08:27:06Z tmtwd joined #lisp
2015-11-01T08:28:06Z cadadar joined #lisp
2015-11-01T08:37:15Z tsoutseki joined #lisp
2015-11-01T08:37:19Z earl-ducaine_ quit (Ping timeout: 246 seconds)
2015-11-01T08:38:30Z sjl quit (Ping timeout: 240 seconds)
2015-11-01T08:38:31Z beach prepares his "LispOS" talk that will take place in a week and a half.
2015-11-01T08:38:34Z beach: Well, the talk is not advertised as such, but that is essentially what it is about.
2015-11-01T08:41:30Z sjl joined #lisp
2015-11-01T08:47:23Z smokeink quit (Ping timeout: 250 seconds)
2015-11-01T08:47:35Z nzambe quit (Ping timeout: 264 seconds)
2015-11-01T08:49:21Z smokeink joined #lisp
2015-11-01T08:55:08Z malbertife joined #lisp
2015-11-01T08:55:10Z Shinmera joined #lisp
2015-11-01T08:56:28Z ogamita joined #lisp
2015-11-01T08:59:27Z rtaylor joined #lisp
2015-11-01T09:00:11Z treaki_ joined #lisp
2015-11-01T09:03:11Z scymtym_ joined #lisp
2015-11-01T09:06:22Z abbe quit (Ping timeout: 246 seconds)
2015-11-01T09:06:41Z rtaylor quit (Quit: Lost terminal)
2015-11-01T09:08:53Z abbe joined #lisp
2015-11-01T09:14:09Z pt1 quit (Remote host closed the connection)
2015-11-01T09:14:41Z sjl quit (Ping timeout: 250 seconds)
2015-11-01T09:17:26Z leafybasil joined #lisp
2015-11-01T09:20:02Z grouzen joined #lisp
2015-11-01T09:21:52Z stardiviner quit (Quit: Code, Sex, Just fucking world.)
2015-11-01T09:22:23Z leafybasil quit (Ping timeout: 264 seconds)
2015-11-01T09:23:06Z ASau quit (Ping timeout: 260 seconds)
2015-11-01T09:28:55Z stepnem joined #lisp
2015-11-01T09:35:35Z mishoo joined #lisp
2015-11-01T09:40:26Z mishoo quit (Ping timeout: 240 seconds)
2015-11-01T09:41:30Z treaki_ quit (Ping timeout: 255 seconds)
2015-11-01T09:41:42Z Davidbrcz joined #lisp
2015-11-01T09:42:03Z schaueho joined #lisp
2015-11-01T09:44:40Z treaki joined #lisp
2015-11-01T09:44:41Z snv quit (Quit: Leaving.)
2015-11-01T09:46:53Z mishoo joined #lisp
2015-11-01T09:51:21Z shka_: beach: will you record that?
2015-11-01T09:51:22Z snv joined #lisp
2015-11-01T09:53:38Z beach: shka_: Probably not.  I am giving it to a private company and it is not up to me.
2015-11-01T09:53:47Z shka_: oh
2015-11-01T09:53:51Z shka_: what a shame
2015-11-01T09:54:03Z beach: I'll post the slides.
2015-11-01T09:54:08Z shka_: can we at least know what is this company?
2015-11-01T09:54:17Z shka_: or that is secret as well?
2015-11-01T09:54:33Z pjb: Usually it is :-)
2015-11-01T09:54:51Z beach: http://hiq.se/en/#/
2015-11-01T09:55:29Z beach: They didn't ask me to talk about this.  I am giving my talk for free so I could choose the subject. :)
2015-11-01T09:56:01Z shka_: :D
2015-11-01T09:56:35Z shka_: well, company seems to do cool things
2015-11-01T09:56:56Z beach: Good.  I haven't really looked into the details.
2015-11-01T09:56:58Z shka_: like automatic cars
2015-11-01T09:58:13Z beach: That seems to be fashionable right now.
2015-11-01T09:59:02Z shka_: yeah, pentagon put large ammount of money into that
2015-11-01T09:59:17Z beach: Hmm.
2015-11-01T09:59:17Z shka_: and that jump started whole thing
2015-11-01T10:01:36Z sjl joined #lisp
2015-11-01T10:02:21Z pjb: Now, I used to say that if the taxes weren't so high, the people would have their money to choose into what research to invest it into (and would probably not choose military technology first).  BUT we see a lot of corporations in the USA with so much money on their hand they don't know what to do with it, and apart from Google, they definitely do not invest it into any research project, but rather into buybacks (not even dividends!).
2015-11-01T10:03:39Z beach: I have a very smart friend who thinks that we should be free to decide what our tax money will go to.  I think that is a very good idea, actually.
2015-11-01T10:03:50Z futpib joined #lisp
2015-11-01T10:03:56Z Ven_ joined #lisp
2015-11-01T10:03:57Z Davidbrcz quit (Ping timeout: 256 seconds)
2015-11-01T10:03:58Z beach: I mean, each individual should be able to decide.
2015-11-01T10:04:10Z pjb: Won't occur, cf. http://le-message.org/
2015-11-01T10:05:19Z shka_: pjb: well, majority of technical breaktrough started with gov founded projects
2015-11-01T10:05:26Z beach: One can always dream.
2015-11-01T10:05:29Z shka_: *funded
2015-11-01T10:05:44Z pjb: shka_: yes, that's the point. Capitalism doesn't work.
2015-11-01T10:06:08Z shka_: pjb: it works for some! ;-)
2015-11-01T10:07:14Z sjl quit (Read error: Connection reset by peer)
2015-11-01T10:09:01Z schaueho quit (Ping timeout: 246 seconds)
2015-11-01T10:10:05Z beach: I always recommend this book: http://www.publishersweekly.com/978-0-670-89976-0
2015-11-01T10:17:53Z knobo1 joined #lisp
2015-11-01T10:18:42Z tmtwd quit (Ping timeout: 250 seconds)
2015-11-01T10:20:10Z phryk quit (Read error: Connection reset by peer)
2015-11-01T10:20:13Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T10:20:25Z phryk joined #lisp
2015-11-01T10:21:39Z sjl joined #lisp
2015-11-01T10:22:31Z Ven_ joined #lisp
2015-11-01T10:25:03Z pt1 joined #lisp
2015-11-01T10:28:14Z quazimodo joined #lisp
2015-11-01T10:32:49Z attila_lendvai joined #lisp
2015-11-01T10:32:49Z attila_lendvai quit (Changing host)
2015-11-01T10:32:49Z attila_lendvai joined #lisp
2015-11-01T10:33:18Z radioninja joined #lisp
2015-11-01T10:33:19Z leafybasil joined #lisp
2015-11-01T10:34:58Z ehu joined #lisp
2015-11-01T10:34:58Z sjl quit (Ping timeout: 260 seconds)
2015-11-01T10:35:26Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T10:36:14Z hydan joined #lisp
2015-11-01T10:36:47Z hydan quit (Remote host closed the connection)
2015-11-01T10:37:35Z Ven_ joined #lisp
2015-11-01T10:37:43Z leafybasil quit (Ping timeout: 246 seconds)
2015-11-01T10:39:28Z varjag joined #lisp
2015-11-01T10:41:06Z BitPuffin|osx quit (Ping timeout: 240 seconds)
2015-11-01T10:45:12Z shka_ quit (Remote host closed the connection)
2015-11-01T10:47:16Z reggy quit (Quit: Leaving)
2015-11-01T10:49:59Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T10:50:32Z shookees quit (Ping timeout: 244 seconds)
2015-11-01T10:50:38Z shka joined #lisp
2015-11-01T10:51:40Z Ven_ joined #lisp
2015-11-01T10:54:04Z hydan joined #lisp
2015-11-01T10:55:57Z hydan quit (Remote host closed the connection)
2015-11-01T10:57:02Z mrSpec quit (Ping timeout: 260 seconds)
2015-11-01T10:58:09Z jtza8 joined #lisp
2015-11-01T11:03:53Z shookees joined #lisp
2015-11-01T11:07:22Z mrSpec joined #lisp
2015-11-01T11:07:34Z native_killer quit (Quit: Leaving)
2015-11-01T11:08:23Z |3b|: minion: memo for guicho: cl-opencl-3b is mit or bsd or similar, but i won't be online enough for a few weeks to actually add it to the repo, please file an issue and remind me in a few weeks, and let me know if you have a preference for a specific license
2015-11-01T11:08:24Z minion: Remembered. I'll tell guicho when he/she/it next speaks.
2015-11-01T11:08:24Z minion: |3b|, memo from guicho: I and at least one guy (gos-k) is interested in implementing opencl interface for CL. We started individually but we decided to cooperate. I started my lib as a fork of your cl-opencl-3b, but gos-k complains its license is ambiguous. could you add one to yours?
2015-11-01T11:12:58Z xrash quit (Remote host closed the connection)
2015-11-01T11:20:07Z megid0 joined #lisp
2015-11-01T11:20:10Z ack006 joined #lisp
2015-11-01T11:20:43Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T11:23:01Z Ven_ joined #lisp
2015-11-01T11:26:08Z Ven_ quit (Client Quit)
2015-11-01T11:26:46Z grouzen quit (Ping timeout: 265 seconds)
2015-11-01T11:33:06Z hydan joined #lisp
2015-11-01T11:33:54Z mvilleneuve joined #lisp
2015-11-01T11:41:54Z Brucio-85 joined #lisp
2015-11-01T11:42:52Z Brucio-85 is now known as gabriel_laddel
2015-11-01T11:43:06Z gabriel_laddel quit (Changing host)
2015-11-01T11:43:06Z gabriel_laddel joined #lisp
2015-11-01T11:45:33Z hydan quit (Remote host closed the connection)
2015-11-01T11:46:52Z ehu quit (Quit: Leaving.)
2015-11-01T11:47:00Z hydan joined #lisp
2015-11-01T11:49:24Z EvW joined #lisp
2015-11-01T11:53:53Z EvW quit (Ping timeout: 256 seconds)
2015-11-01T11:56:15Z anddam quit (Ping timeout: 265 seconds)
2015-11-01T11:59:06Z faalentijn quit (Ping timeout: 240 seconds)
2015-11-01T12:04:44Z abbe: as if there is not enough competition, https://tools.ietf.org/html/rfc6830
2015-11-01T12:05:37Z EvW joined #lisp
2015-11-01T12:06:45Z reggy joined #lisp
2015-11-01T12:08:22Z anddam joined #lisp
2015-11-01T12:11:48Z fridim_ quit (Ping timeout: 255 seconds)
2015-11-01T12:12:47Z faalentijn joined #lisp
2015-11-01T12:13:09Z Dynamicmetaflow joined #lisp
2015-11-01T12:14:59Z pt1 quit (Remote host closed the connection)
2015-11-01T12:15:06Z jtza8 quit (Ping timeout: 265 seconds)
2015-11-01T12:20:19Z Beetny quit (Ping timeout: 240 seconds)
2015-11-01T12:21:11Z SHODAN quit (Ping timeout: 264 seconds)
2015-11-01T12:21:51Z Guest14392 joined #lisp
2015-11-01T12:22:11Z sdothum joined #lisp
2015-11-01T12:22:13Z tsoutseki quit (Ping timeout: 256 seconds)
2015-11-01T12:22:36Z Guest14392: anyone have any recent experience deploying commonqt based images on windows?  (obviously, onto systems that don't have QT installed)
2015-11-01T12:23:21Z Shinmera: I do.
2015-11-01T12:23:35Z fantazo joined #lisp
2015-11-01T12:23:36Z Shinmera: I'm guessing you're the same guy that asked this before but was too impatient to stick around and wait for an answer.
2015-11-01T12:23:43Z sdothum quit (Client Quit)
2015-11-01T12:23:56Z pjb: abbe: it's old news.
2015-11-01T12:25:44Z Guest14392: Shinmera:  I only have access to the internet for limited periods of time, so yes that was probably me, but I have plenty of patience I assure you
2015-11-01T12:25:53Z sdothum joined #lisp
2015-11-01T12:26:01Z Shinmera: Guest14392: Well, I posted the answer back then: http://irclog.tymoon.eu/freenode/lisp?around=2015-10-30T18:03:18&types=tonam#1446228198
2015-11-01T12:27:12Z mishoo_ joined #lisp
2015-11-01T12:28:08Z Shinmera: Guest14392: The solution requires Qtools, but since it's just a layer on top of CommonQt if your app uses the proper ASD options it should still work just fine even if you don't use the rest of Qtools.
2015-11-01T12:28:38Z Guest14392: I'll work through this, thanks.  Additionally I'd made it to a point where I'd done this by hand, taken out the libs from the standalone folder of qt-libs and used quicklisp bundles.
2015-11-01T12:28:40Z Shinmera: Guest14392: I've successfully deployed applications on windows before, so it works.
2015-11-01T12:28:57Z Guest14392: I'll go back and try your process because mine was quite manual whereas yours sounds more automatic
2015-11-01T12:28:59Z mishoo quit (Ping timeout: 264 seconds)
2015-11-01T12:29:08Z Shinmera: Just be aware of https://github.com/Shinmera/qtools/issues/10
2015-11-01T12:29:15Z Guest14392: have you deployed with ccl lately?
2015-11-01T12:29:22Z Shinmera: No, I usually use SBCL
2015-11-01T12:29:52Z Shinmera: If you have any trouble with it, opening an issue so I can look at it would be very welcome
2015-11-01T12:31:07Z Guest14392: ok.  I imagine sbcl has this option too, but on windows exe's can be configured as taking part in the gui subsystem or the console subsystem.  The difference is that when you run an exe configured for console, it opened up a command prompt in addition to whatever gui calls are made, whereas when it is configured for gui, no command prompt is created.
2015-11-01T12:31:34Z Shinmera: Right. SBCL does have that too.
2015-11-01T12:31:43Z Shinmera: Qtools takes care of setting that flag automatically.
2015-11-01T12:31:57Z Guest14392: when I use ccl save image functions and configure them to make a console type exe, the program works as expected and the qt forms are shown, but when I make it gui, the program just closes immediately with no apparent effect, and I was curious if you'd encountered this problem on sbcl as well
2015-11-01T12:32:00Z Shinmera: It doesn't on CCL, because I was unaware of it.
2015-11-01T12:32:13Z Shinmera: Not on SBCL, no
2015-11-01T12:32:23Z Shinmera: CCL does some weird stuff with threadage sometimes, so I'd have to investigate.
2015-11-01T12:32:25Z Guest14392: its undocumented, but its a parameter to ccl:save-application :application-type :gui
2015-11-01T12:32:48Z Guest14392: ok, I'll try your system and post issues if I find any, thanks for putting this together
2015-11-01T12:32:49Z Shinmera: Ok. I'll have a look at it when I have the time (I can't promise anything too soon, unfortunately)
2015-11-01T12:34:11Z tsoutseki joined #lisp
2015-11-01T12:34:13Z jtza8 joined #lisp
2015-11-01T12:35:31Z ogamita quit (Ping timeout: 252 seconds)
2015-11-01T12:37:46Z EvW quit (Ping timeout: 246 seconds)
2015-11-01T12:38:01Z shka_ joined #lisp
2015-11-01T12:38:15Z shka quit (Read error: Connection reset by peer)
2015-11-01T12:38:54Z EvW joined #lisp
2015-11-01T12:47:53Z lispyone_ joined #lisp
2015-11-01T12:49:39Z wizzomafizzo joined #lisp
2015-11-01T12:51:53Z mac_ified joined #lisp
2015-11-01T12:52:49Z wizzomafizzo quit (Quit: ZNC - http://znc.in)
2015-11-01T12:53:39Z BitPuffin|osx joined #lisp
2015-11-01T12:54:07Z wizzomafizzo joined #lisp
2015-11-01T12:54:20Z rszeno joined #lisp
2015-11-01T12:56:05Z EvW quit (Remote host closed the connection)
2015-11-01T12:56:16Z EvW joined #lisp
2015-11-01T12:56:33Z phoe_krk: (proclaim 'independence)
2015-11-01T13:04:46Z jtza8 quit (Ping timeout: 240 seconds)
2015-11-01T13:06:55Z FreeBird_ joined #lisp
2015-11-01T13:07:46Z FreeBirdLjj quit (Ping timeout: 268 seconds)
2015-11-01T13:07:58Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-01T13:21:24Z EvW quit (Remote host closed the connection)
2015-11-01T13:21:34Z EvW joined #lisp
2015-11-01T13:24:28Z mvilleneuve joined #lisp
2015-11-01T13:33:02Z Nikotiini joined #lisp
2015-11-01T13:33:55Z k-stz joined #lisp
2015-11-01T13:35:48Z danlentz_ joined #lisp
2015-11-01T13:39:53Z EvW quit (Ping timeout: 268 seconds)
2015-11-01T13:40:02Z EvW joined #lisp
2015-11-01T13:41:21Z quasus joined #lisp
2015-11-01T13:41:33Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-01T13:42:00Z fantazo quit (Quit: Verlassend)
2015-11-01T13:47:00Z fridim_ joined #lisp
2015-11-01T13:51:10Z xorox90 joined #lisp
2015-11-01T13:54:55Z Karl_Dscc joined #lisp
2015-11-01T13:55:37Z CEnnis91 joined #lisp
2015-11-01T14:09:52Z puchacz joined #lisp
2015-11-01T14:16:20Z jfe joined #lisp
2015-11-01T14:17:03Z jfe: i'm looking for a portable socket library. can anyone here offer a recommendation?
2015-11-01T14:18:41Z myrkraverk: I've almost finished my first CLOS wrapper around Kytea.  Is there anyone here who'd like an early example of it?
2015-11-01T14:18:48Z myrkraverk: I have the C to CFFI interface working, it's just CLOS that I'm wrapping up now.
2015-11-01T14:18:52Z Xach: what is Kytea?
2015-11-01T14:19:01Z Xach: jfe: usocket is an option
2015-11-01T14:19:20Z tsoutseki quit (Remote host closed the connection)
2015-11-01T14:19:25Z myrkraverk: It's a Japanese word separation/pronounciation toolkit.
2015-11-01T14:19:55Z myrkraverk: http://www.phontron.com/kytea/
2015-11-01T14:20:06Z tsoutseki joined #lisp
2015-11-01T14:20:39Z treaki quit (Ping timeout: 256 seconds)
2015-11-01T14:20:53Z TDT joined #lisp
2015-11-01T14:25:58Z ccb joined #lisp
2015-11-01T14:25:58Z Xach: myrkraverk: hmm, i seem to remember someone working on something like that recently, but i thought it was directly in CL
2015-11-01T14:26:31Z Shinmera: It was. http://ichi.moe/
2015-11-01T14:28:48Z Guest14392 quit (Ping timeout: 246 seconds)
2015-11-01T14:29:33Z gabriel_laddel quit (Read error: Connection reset by peer)
2015-11-01T14:30:54Z danlentz_ joined #lisp
2015-11-01T14:33:14Z fantazo joined #lisp
2015-11-01T14:33:33Z myrkraverk: Interesting, I'll take a look at that.
2015-11-01T14:36:53Z myrkraverk: At first glance, it seems ichiran is not better than kytea, but I may give it a try.
2015-11-01T14:40:33Z EvW quit (Ping timeout: 250 seconds)
2015-11-01T14:42:57Z znpy joined #lisp
2015-11-01T14:43:48Z znpy quit (Client Quit)
2015-11-01T14:43:54Z mishoo_ quit (Ping timeout: 250 seconds)
2015-11-01T14:46:37Z EvW joined #lisp
2015-11-01T14:47:29Z Oladon joined #lisp
2015-11-01T14:47:45Z ekinmur joined #lisp
2015-11-01T14:52:11Z ccb is now known as tianyu
2015-11-01T14:52:57Z jason_m joined #lisp
2015-11-01T14:56:22Z rszeno quit (Quit: Leaving.)
2015-11-01T14:57:00Z grouzen joined #lisp
2015-11-01T15:02:17Z sjl joined #lisp
2015-11-01T15:03:59Z wizzomafizzo quit (Ping timeout: 240 seconds)
2015-11-01T15:05:29Z fantazo quit (Quit: Verlassend)
2015-11-01T15:07:12Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-01T15:14:15Z zotherstupidguy joined #lisp
2015-11-01T15:18:59Z EvW quit (Ping timeout: 240 seconds)
2015-11-01T15:19:13Z fikusz quit (Quit: Leaving)
2015-11-01T15:20:44Z remi`bd joined #lisp
2015-11-01T15:22:18Z lispyone_ quit (Remote host closed the connection)
2015-11-01T15:23:27Z zotherstupidguy quit (Ping timeout: 252 seconds)
2015-11-01T15:24:30Z znpy joined #lisp
2015-11-01T15:24:33Z quazimodo quit (Ping timeout: 252 seconds)
2015-11-01T15:24:41Z EvW joined #lisp
2015-11-01T15:27:28Z FreeBird_ quit (Ping timeout: 244 seconds)
2015-11-01T15:28:55Z EvW quit (Ping timeout: 246 seconds)
2015-11-01T15:30:14Z raphaelss joined #lisp
2015-11-01T15:31:34Z guicho joined #lisp
2015-11-01T15:32:13Z Guest14 joined #lisp
2015-11-01T15:34:20Z FreeBirdLjj joined #lisp
2015-11-01T15:37:24Z beach: drmeister: Around?
2015-11-01T15:37:56Z drmeister: Hello - yes - somewhat
2015-11-01T15:38:03Z zotherstupidguy joined #lisp
2015-11-01T15:38:28Z beach: Do you have any of your own classes that inherit from the Cleavir local environment classes?
2015-11-01T15:38:28Z drmeister: What's up?
2015-11-01T15:38:30Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-01T15:38:43Z beach: Or any methods on any of the Cleavir classes?
2015-11-01T15:39:28Z drmeister: I don't have any classes that inherit from Cleavir local environment classes.
2015-11-01T15:39:36Z drmeister: Methods on cleavir classes - I don't think so.
2015-11-01T15:39:38Z beach: Great!
2015-11-01T15:40:00Z beach: So I have full freedom to fix the stack-depth problem by reorganizing those classes.
2015-11-01T15:40:38Z drmeister: You have full freedom anyway - I will "adapt, adopt and improve".
2015-11-01T15:40:48Z NeverDie_ quit (Quit: http://radiux.io/ -> Manhattan Project)
2015-11-01T15:40:55Z beach: OK.  Thanks.
2015-11-01T15:41:04Z beach: That's all.  You can go back to what you were doing.
2015-11-01T15:41:17Z drmeister only includes "improve" because he doesn't want to spoil the original Cleese quote.
2015-11-01T15:41:32Z drmeister: Great!
2015-11-01T15:47:02Z megid0: is there a wiki with all the lisp functions?
2015-11-01T15:47:18Z remi`bd: there’s the CLHS, but it’s not a wiki
2015-11-01T15:47:24Z remi`bd: and it’s common lisp only.
2015-11-01T15:48:39Z megid0: i guess that works for what im looking for, thank you
2015-11-01T15:52:36Z Dynamicmetaflow quit (Remote host closed the connection)
2015-11-01T15:52:40Z ekinmur joined #lisp
2015-11-01T15:53:52Z ekinmur quit (Client Quit)
2015-11-01T15:54:14Z ajf- joined #lisp
2015-11-01T15:58:12Z ajf-: It's so cool that I can close parenthesis almost anywhere and what's enclosed will still function
2015-11-01T15:58:23Z ajf-: except with some special cases
2015-11-01T16:04:09Z phoe_krk: ajf-: there are *many* of these special cases.
2015-11-01T16:04:59Z NeverDie joined #lisp
2015-11-01T16:05:03Z ajf-: that says a lot about the underlying design
2015-11-01T16:05:26Z zotherstupidguy quit (Ping timeout: 240 seconds)
2015-11-01T16:06:22Z otwieracz: My SLIME REPL is freezing from time to time with CCL.
2015-11-01T16:06:22Z futpib quit (Read error: Connection reset by peer)
2015-11-01T16:06:47Z otwieracz: Does anybody saw such behaviour already? I have to restart-inferior-lisp to make it working again.
2015-11-01T16:07:08Z futpib joined #lisp
2015-11-01T16:07:29Z phoe_krk: is there a way to update quicklisp from within an older version of quicklisp?
2015-11-01T16:09:10Z sbryant quit (Ping timeout: 240 seconds)
2015-11-01T16:09:58Z tianyu quit (Quit: ERC (IRC client for Emacs 24.5.5))
2015-11-01T16:10:04Z vydd: phoe_krk: (ql:update-client) for updating the client, (ql:update-all-dists) for updating dists, it's all @ https://www.quicklisp.org/beta/
2015-11-01T16:10:10Z phoe_krk: thanks
2015-11-01T16:10:58Z tianyu joined #lisp
2015-11-01T16:12:00Z sbryant joined #lisp
2015-11-01T16:19:21Z DKordic quit (Read error: Connection reset by peer)
2015-11-01T16:21:40Z Shinmera: otwieracz: Have you tried C-g when it hangs? Sometimes that then gives me a slime error printout, but at least lets me continue my session.
2015-11-01T16:21:46Z sbryant quit (Ping timeout: 272 seconds)
2015-11-01T16:22:01Z sbryant joined #lisp
2015-11-01T16:22:23Z otwieracz: yeah - it's completely freezed.
2015-11-01T16:22:38Z otwieracz: I've tried to start CCL in terminal and then start swank-server from it.
2015-11-01T16:22:45Z otwieracz: CCL becames completey unresponsive.
2015-11-01T16:22:54Z otwieracz: I've tried clearing caches.
2015-11-01T16:23:51Z myrkraverk: Apparently, there's no such thing as (defward ...)
2015-11-01T16:25:19Z FreeBirdLjj quit (Ping timeout: 256 seconds)
2015-11-01T16:26:01Z smokeink quit (Remote host closed the connection)
2015-11-01T16:26:15Z zacts quit (Read error: Connection reset by peer)
2015-11-01T16:27:31Z zacts joined #lisp
2015-11-01T16:28:25Z jfe quit (Read error: No route to host)
2015-11-01T16:28:36Z jfe joined #lisp
2015-11-01T16:29:47Z tianyu quit (Quit: ERC (IRC client for Emacs 24.5.5))
2015-11-01T16:29:48Z lispyone_ joined #lisp
2015-11-01T16:32:45Z tianyu joined #lisp
2015-11-01T16:32:54Z zacharias joined #lisp
2015-11-01T16:33:13Z BitPuffin|osx quit (Ping timeout: 250 seconds)
2015-11-01T16:39:25Z axion: otwieracz: you could try sly, which is a fork of slime with more features, to limit down the cause
2015-11-01T16:42:54Z jfe: what are the rules for modifying state in CL? how do i know if i'm changing the contents of, for example, a list that was passed as an argument to a function, or a copy of the list?
2015-11-01T16:44:35Z zacharias quit (Ping timeout: 256 seconds)
2015-11-01T16:45:34Z jackdaniel: jfe: what do you mean? if you won't copy the list passed in the argument and you modify it then you modify it (?)
2015-11-01T16:46:06Z jackdaniel: maybe some code example to show what you have in mind
2015-11-01T16:46:16Z jfe: in other words, if i have a function f that takes a list as a parameter, how do i add elements to the list, and not the copy of it?
2015-11-01T16:47:25Z H4ns: jfe: you can't, in a nutshell.  you'll have to return the new list to the caller.
2015-11-01T16:49:51Z jfe: okay. so would i be correct in saying the way to provide an interface to a data structure that maintains state is via macros?
2015-11-01T16:50:50Z jfe: (or using CLOS objects or structs)
2015-11-01T16:50:51Z FreeBirdLjj joined #lisp
2015-11-01T16:51:04Z H4ns: jfe: no.  maybe it helps if you think of lisp lists not as objects with an identity of its on, but rather as a chain of cons cells that may be used _as_ a list.
2015-11-01T16:51:06Z jackdaniel: objects and structs would be more sane approach
2015-11-01T16:51:28Z resttime joined #lisp
2015-11-01T16:51:49Z H4ns: jfe: the key thing, i think, is that if you think "modification", then you need identity, and lisp lists don't provide you with identity.
2015-11-01T16:53:43Z gingerale joined #lisp
2015-11-01T16:54:41Z jfe: hmm. it seems that if i refer to parts of a list using car or cdr, i can change the contents of those place: (defun add-elt (L elt) (setf (cdr (last L)) (cons elt nil))) seems to work
2015-11-01T16:55:09Z jfe: that surprised me, because i figured the #'last would return a copy of the list.
2015-11-01T16:55:19Z H4ns: jfe: what made you think so?
2015-11-01T16:55:52Z jfe: H4ns: not sure. ignorance, i guess.
2015-11-01T16:56:42Z jfe: so lists don't have identity, but cons cells do.
2015-11-01T16:56:54Z guicho quit (Quit: さようなら)
2015-11-01T16:58:38Z xorox90 quit (Quit: Connection closed for inactivity)
2015-11-01T16:59:34Z Xach: lists are made of conses and nil
2015-11-01T17:01:30Z askatasuna joined #lisp
2015-11-01T17:02:02Z ryu0: Xach: then what does that make lists that end in a non-nil for the last member? iirc, my book called these a dotted list or dotted pair?
2015-11-01T17:02:41Z H4ns: in any case, it is true that cons cells have identity whereas lists don't, as far as lisp is concerned
2015-11-01T17:09:04Z tianyu quit (Quit: ERC (IRC client for Emacs 24.5.5))
2015-11-01T17:14:50Z Mon_Ouie joined #lisp
2015-11-01T17:15:40Z tmtwd joined #lisp
2015-11-01T17:18:22Z XachX: ryu0: also improper
2015-11-01T17:18:34Z pt1 joined #lisp
2015-11-01T17:19:42Z alexherbo2 quit (Ping timeout: 260 seconds)
2015-11-01T17:20:06Z FreeBirdLjj quit (Ping timeout: 244 seconds)
2015-11-01T17:20:41Z NeverDie quit (Quit: http://radiux.io/ -> Manhattan Project)
2015-11-01T17:20:42Z beach: ryu0: A "dotted pair" would be a single CONS cell with some atom other than NIL in the CDR.
2015-11-01T17:21:16Z erjoalgo joined #lisp
2015-11-01T17:21:58Z erjoalgo: can I do destructuring in a loop "as" clause? eg "as (x y) = (return-multiple-values)"
2015-11-01T17:22:28Z beach: No, destructuring in LOOP is done on lists.
2015-11-01T17:22:33Z beach: Or, trees, rather.
2015-11-01T17:23:24Z Bike: you can use multiple-value-list to make value into a list, tho.
2015-11-01T17:23:41Z shka_: or use iterate
2015-11-01T17:24:59Z NeverDie joined #lisp
2015-11-01T17:26:23Z lispyone_ quit (Remote host closed the connection)
2015-11-01T17:26:52Z leb joined #lisp
2015-11-01T17:27:38Z BitPuffin|osx joined #lisp
2015-11-01T17:30:04Z leb quit (Client Quit)
2015-11-01T17:30:15Z alexherbo2 joined #lisp
2015-11-01T17:32:04Z sjl quit (Ping timeout: 272 seconds)
2015-11-01T17:33:45Z alexherbo2 quit (Client Quit)
2015-11-01T17:33:53Z ozihcs joined #lisp
2015-11-01T17:34:05Z Draz joined #lisp
2015-11-01T17:34:34Z megid0 quit (Ping timeout: 246 seconds)
2015-11-01T17:35:59Z _leb joined #lisp
2015-11-01T17:37:40Z cadadar quit (Ping timeout: 244 seconds)
2015-11-01T17:37:57Z samssammerz joined #lisp
2015-11-01T17:40:23Z Mon_Ouie quit (Ping timeout: 265 seconds)
2015-11-01T17:40:31Z beach: erjoalgo: Anytime!
2015-11-01T17:43:17Z cadadar joined #lisp
2015-11-01T17:44:59Z beach left #lisp
2015-11-01T17:45:05Z pt1 quit (Remote host closed the connection)
2015-11-01T17:46:42Z pt1 joined #lisp
2015-11-01T17:47:29Z EvW joined #lisp
2015-11-01T17:50:40Z AndChat66969 joined #lisp
2015-11-01T17:51:40Z AndChat66969 left #lisp
2015-11-01T17:52:06Z ozihcs quit (Ping timeout: 240 seconds)
2015-11-01T17:52:19Z myrkraverk: Does asdf have any provisions for depending on C++ code?
2015-11-01T17:52:23Z kami joined #lisp
2015-11-01T17:52:31Z kami: Hello #lisp
2015-11-01T17:52:33Z mvilleneuve joined #lisp
2015-11-01T17:52:37Z myrkraverk: Yes, I'm reading the manual, but haven't gotten far enough to answer the question.
2015-11-01T17:54:19Z Bike: i doubt there's anything built in, but it's probably extensible enough for it. i think Shinmera might have wrote such an extension?
2015-11-01T17:54:39Z bb010g joined #lisp
2015-11-01T17:56:02Z cadadar quit (Quit: Leaving.)
2015-11-01T17:57:11Z snv quit (Quit: Leaving.)
2015-11-01T17:59:16Z lispyone_ joined #lisp
2015-11-01T18:01:27Z lispyone_ quit (Remote host closed the connection)
2015-11-01T18:04:30Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-01T18:04:57Z ajf-: what would be the predicate to MERGE if I wanted to interleave them ?
2015-11-01T18:05:01Z malbertife quit (Ping timeout: 246 seconds)
2015-11-01T18:05:02Z ajf-: the lists
2015-11-01T18:05:08Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-01T18:05:40Z mvilleneuve joined #lisp
2015-11-01T18:05:51Z jackdaniel: predicate?
2015-11-01T18:05:53Z ajf-: '(a a a a a) + '(b b b) = '(a b a b a b a a)
2015-11-01T18:06:05Z ajf-: yes the function designator
2015-11-01T18:06:07Z ajf-: #´
2015-11-01T18:06:45Z Bike: sounds nasty, i'd just use a loop
2015-11-01T18:07:33Z _death: merge is not for that
2015-11-01T18:07:34Z myrkraverk: At least there's run-program in asdf.  I'm not sure how I can (easily) generalize that, in order to compile a shared library (the intermediate C wrapper) or even Kytea itself, and support multiple platforms.
2015-11-01T18:07:47Z myrkraverk: Maybe I can use it for the platforms I'm using though.
2015-11-01T18:08:39Z phoe_krk: ajf-: let me google that for you... "lisp interleave"
2015-11-01T18:08:42Z phoe_krk: http://lisp.plasticki.com/show?E97
2015-11-01T18:08:59Z ajf-: huh
2015-11-01T18:09:12Z ajf-: thanks didn't occur to me to search for that exact words
2015-11-01T18:09:34Z phoe_krk: http://stackoverflow.com/questions/3973420/how-would-one-interleve-elements-of-2-lists-in-lisp
2015-11-01T18:09:49Z phoe_krk: this seems a little better; the former expects lists of equal lengths, it seems
2015-11-01T18:10:23Z ajf-: i don't like it though
2015-11-01T18:10:46Z ajf-: for .. collect (loop for i collect (list (nth i a) (nth i b)))
2015-11-01T18:10:53Z ajf-: I just did something like that
2015-11-01T18:11:39Z Jesin joined #lisp
2015-11-01T18:12:50Z edgar-rft quit (Quit: edgar-rft)
2015-11-01T18:14:18Z pt1 quit (Remote host closed the connection)
2015-11-01T18:14:35Z tmtwd quit (Ping timeout: 264 seconds)
2015-11-01T18:14:50Z sshirokov quit (Ping timeout: 240 seconds)
2015-11-01T18:15:09Z gniourf quit (Read error: Connection reset by peer)
2015-11-01T18:15:18Z gniourf joined #lisp
2015-11-01T18:15:52Z jason_m quit (Ping timeout: 246 seconds)
2015-11-01T18:16:30Z kami quit (Ping timeout: 260 seconds)
2015-11-01T18:17:55Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-01T18:19:33Z sshirokov joined #lisp
2015-11-01T18:21:02Z wtbrk joined #lisp
2015-11-01T18:22:00Z gravicappa joined #lisp
2015-11-01T18:22:59Z sbryant quit (Ping timeout: 264 seconds)
2015-11-01T18:23:30Z zbigniew quit (Ping timeout: 240 seconds)
2015-11-01T18:23:35Z EvW quit (Ping timeout: 264 seconds)
2015-11-01T18:24:06Z derrida quit (Ping timeout: 240 seconds)
2015-11-01T18:24:13Z sshirokov quit (Ping timeout: 252 seconds)
2015-11-01T18:24:33Z Shinmera: Bike: I did, but it's been discontinued because ASDF is not suitable for that task to the extent I wanted to take it to.
2015-11-01T18:25:33Z Shinmera: It's still around in all its unfinished, uncleaned, and undocumented glory. https://github.com/Shinmera/abcd
2015-11-01T18:25:54Z fantazo joined #lisp
2015-11-01T18:25:57Z Bike: so do you just have people build smoke manually or whatever?
2015-11-01T18:26:16Z Shinmera: qt-libs uses its own, horrid extension that is just powerful enough to do the trick.
2015-11-01T18:26:32Z Shinmera: It's not suitable for anything beyond what it does in qt-libs.
2015-11-01T18:26:36Z Bike: good stuff
2015-11-01T18:26:48Z Shinmera: Yeah. Fun times. :/
2015-11-01T18:28:18Z Shinmera: Mostly though the intention behind ABCD and qt-libs are different. ABCD was supposed to be a potential replacement for things like make/cmake/whatnot, while qt-libs just has to look for libraries and if they don't appear, download them and invoke "cmake", then do some cleanup and organising.
2015-11-01T18:28:45Z Shinmera: So the overlap isn't that big to begin with.
2015-11-01T18:40:39Z grouzen quit (Ping timeout: 240 seconds)
2015-11-01T18:45:39Z ASau joined #lisp
2015-11-01T18:46:45Z myrkraverk: Ok, seems I get to create a custom system for my Kytea bindings.  And they'll probably only work on the systems I use myself.
2015-11-01T18:48:00Z myrkraverk: It might help if I can get my C wrapper included in Kytea itself.  Then the Lisp binding can stay Lisp-only.
2015-11-01T18:51:37Z Mon_Ouie joined #lisp
2015-11-01T18:51:37Z erjoalgo: @beach thanks
2015-11-01T18:53:33Z _leb quit (Quit: Computer has gone to sleep.)
2015-11-01T18:53:50Z erjoalgo: @<ajf-> you can write a tail recursive function that swaps the arguments
2015-11-01T18:54:32Z erjoalgo: (defun interleave (a b) (cons (car a) (interleave (b a))))
2015-11-01T18:55:02Z erjoalgo: (of course add a terminating condition)
2015-11-01T18:55:39Z mvilleneuve joined #lisp
2015-11-01T18:56:04Z erjoalgo: maybe (defun interleave (a b) (if a (cons (car a) (interleave (b a))) b))
2015-11-01T18:56:15Z fiddlerwoaroof: erjoalgo: it's better not to do tail-recursion in Common Lisp :)
2015-11-01T18:56:26Z fiddlerwoaroof: Because you can't rely on TCO
2015-11-01T18:56:49Z fiddlerwoaroof: You can kinda emulate it, though, with tagbody and setf
2015-11-01T18:57:08Z fiddlerwoaroof: . . .and return-freom
2015-11-01T18:58:10Z erjoalgo: i've been working on SBCL, was having issues with a not-properly-tail-recursive function overflowing the stack. so I made it properly tail-recursive and it worked. I don't know about other implementations but I'm pretty sure SBCL does do it
2015-11-01T18:58:18Z resttime: fiddlerwoaroof: Do you mean across implementations? It's been pretty reliable on SBCL and I'm sure most of the others work too.
2015-11-01T18:58:20Z erjoalgo: http://www.sbcl.org/1.0/manual/Debug-Tail-Recursion.html
2015-11-01T18:58:22Z Ven_ joined #lisp
2015-11-01T18:58:30Z fiddlerwoaroof: resttime: yeah, I just mean that it's non-standard
2015-11-01T18:58:40Z Shinmera: Colleen: tell erjoalgo about cl tco
2015-11-01T18:58:40Z Colleen: erjoalgo: The hyperspec does not require TCO. However, some implementations support it under certain circumstances. See http://0branch.com/notes/tco-cl.html for an extensive survey.
2015-11-01T18:58:47Z fiddlerwoaroof: also, macros can make something that looks tail-recursive non recursive
2015-11-01T18:59:06Z fiddlerwoaroof: s/ \@>=recursive/tail/
2015-11-01T18:59:39Z fiddlerwoaroof: resttime: in my experience, you have to (declare (optimize (speed (> 0))) to get TCO
2015-11-01T18:59:52Z fiddlerwoaroof: (on SBCL)
2015-11-01T19:00:58Z fiddlerwoaroof: hmm, maybe it's because I usually put (declaim (optimize (debug 3))) in my sourece
2015-11-01T19:01:21Z jtza8 joined #lisp
2015-11-01T19:01:46Z tsoutseki quit (Read error: Connection reset by peer)
2015-11-01T19:02:38Z NeverDie quit (Quit: http://radiux.io/ -> Manhattan Project)
2015-11-01T19:03:09Z resttime: Yeah, it's turned off if DEBUG > 2
2015-11-01T19:05:38Z NeverDie joined #lisp
2015-11-01T19:06:42Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T19:09:08Z Ven_ joined #lisp
2015-11-01T19:09:19Z lnostdal__ quit (Ping timeout: 240 seconds)
2015-11-01T19:10:23Z NeverDie quit (Max SendQ exceeded)
2015-11-01T19:10:48Z NeverDie joined #lisp
2015-11-01T19:14:50Z pt1 joined #lisp
2015-11-01T19:14:58Z Petit_Dejeuner` quit (Ping timeout: 260 seconds)
2015-11-01T19:15:19Z resttime: Speaking of TCO, I like how I can combine the optional argument: http://paste.lisp.org/display/158180
2015-11-01T19:16:39Z znpy quit (Ping timeout: 240 seconds)
2015-11-01T19:16:55Z tsoutseki joined #lisp
2015-11-01T19:17:00Z peytonien joined #lisp
2015-11-01T19:17:13Z resttime: In Scheme, I think one would "normally" define an additional iterative procedure.
2015-11-01T19:19:17Z tsoutseki: why would someone choose to program in lisp over C or C++?
2015-11-01T19:19:36Z Shinmera: Why would someone choose to program in C++?
2015-11-01T19:19:36Z tsoutseki: why should I learn lisp?
2015-11-01T19:19:51Z pt1 quit (Remote host closed the connection)
2015-11-01T19:19:53Z phoe_krk: why should you learn at all?
2015-11-01T19:19:54Z resttime: Why do you want to learn lisp?
2015-11-01T19:19:59Z jackdaniel: tsoutseki: you shouldn't if you don't feel you want
2015-11-01T19:20:06Z blubjr: you should define an auxiliary function in cl too
2015-11-01T19:20:19Z tsoutseki: hmm
2015-11-01T19:20:46Z phoe_krk: tsoutseki: I'm not your parent, I can't tell you what you should or shouldn't do
2015-11-01T19:21:22Z tsoutseki: phoe_krk, ok dad
2015-11-01T19:21:22Z phoe_krk: ...also, I just got why alexandria is called alexandria
2015-11-01T19:21:23Z resttime: blubjr: How come? I'm curious.
2015-11-01T19:21:27Z phoe_krk: tsoutseki: aksjdgkjasdhgkjdsh
2015-11-01T19:21:38Z antoszka: tsoutseki: http://random-state.net/features-of-common-lisp.html
2015-11-01T19:21:52Z antoszka: (if you're asking sincere questions, which I sincerely doubt)
2015-11-01T19:21:58Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T19:22:04Z blubjr: because the accumulator isn't part of the function's interface
2015-11-01T19:22:36Z resttime: Hmmm, so it's a means of covering your bases, understood.
2015-11-01T19:22:37Z lnostdal__ joined #lisp
2015-11-01T19:23:09Z Baggers joined #lisp
2015-11-01T19:23:19Z wailord joined #lisp
2015-11-01T19:23:22Z phf: blubjr: i don't think that thing is an accumulator, but rather a way to tack on an extra tail as part of unrelated process. it just gets carried through the execution
2015-11-01T19:23:36Z Ven_ joined #lisp
2015-11-01T19:24:04Z blubjr: sorry i was just going off the comparison to scheme
2015-11-01T19:24:35Z phoe_krk: tsoutseki: more seriously now: what antoszka said, plus, for me, it's a great mind-exercise to have my mind kicked out from the C/C++/Java mindset, therefore making me more of a programmer and not a C/C++/Java coder
2015-11-01T19:25:07Z ajf-: is there a conditional syntax to denote whether a function is applied or not to the value? without having (if (func val) val)
2015-11-01T19:25:14Z tsoutseki: phoe_krk, ok
2015-11-01T19:25:16Z tsoutseki: thanks
2015-11-01T19:25:19Z phoe_krk: tsoutseki: also, the interactivity of the language.
2015-11-01T19:25:38Z antoszka: Yes, that's taken to the extreme in common lisp.
2015-11-01T19:25:48Z antoszka: Something hard to describe before you actually try.
2015-11-01T19:25:53Z phoe_krk: at some point, you end up with your program working, but you decide to change a little thing
2015-11-01T19:25:53Z antoszka: Or see a demo.
2015-11-01T19:26:34Z phoe_krk: so you fire up a lisp editor, change the function and recompile it on the fly while the program is running. boom, the change goes live that very moment.
2015-11-01T19:26:53Z phoe_krk: no need to shut your program down and wait for gcc/g++ to stop chewing.
2015-11-01T19:27:01Z grouzen joined #lisp
2015-11-01T19:28:04Z lispyone_ joined #lisp
2015-11-01T19:28:05Z phoe_krk: ...there was this video of someone Asian at some cyclic meeting who had this procedural music and video generation.
2015-11-01T19:28:09Z phoe_krk: anyone have a link at hand?
2015-11-01T19:28:21Z wailord quit (Changing host)
2015-11-01T19:28:22Z wailord joined #lisp
2015-11-01T19:28:34Z pt1 joined #lisp
2015-11-01T19:28:53Z resttime: ajf-: Quote the expression and use that?
2015-11-01T19:29:29Z znpy joined #lisp
2015-11-01T19:29:46Z darwinvsjesus joined #lisp
2015-11-01T19:29:50Z darwinvsjesus: holy shit, abelson is a autistic nigger. like, what was he going for with SICP? i was wondering why the book had 25% 1 star reviews and after reading it, i know see that the author has the shittiest approach of all critically-acclaimed compsci texts in the field. no wonder damn-near half of the reviewers hate this verbose, self-aggrandizing, bombastic piece of shit excuse for a book.
2015-11-01T19:30:13Z phoe_krk: darwinvsjesus: wat
2015-11-01T19:30:17Z resttime: A macro sounds like it would work
2015-11-01T19:30:35Z antoszka: tsoutseki: https://www.youtube.com/watch?v=_B_4vhsmRRI ← this is slightly dated, but should give you a nice insight into the interactive features
2015-11-01T19:30:40Z wailord: darwinvsjesus: wow
2015-11-01T19:30:51Z tsoutseki: antoszka, mhm
2015-11-01T19:30:51Z jackdaniel: darwinvsjesus: please leave with such kind of language
2015-11-01T19:31:37Z phoe_krk: darwinvsjesus: -2/10, please try harder next time
2015-11-01T19:32:41Z sshirokov joined #lisp
2015-11-01T19:32:48Z sbryant joined #lisp
2015-11-01T19:32:48Z derrida joined #lisp
2015-11-01T19:32:48Z derrida quit (Changing host)
2015-11-01T19:32:48Z derrida joined #lisp
2015-11-01T19:33:08Z darwinvsjesus: phoe_krk: lol rating opinions on a scale. xD who do you think you are, God? try again. i'm just posting my opinion and wondering why anyone could like this book, flamer.
2015-11-01T19:33:31Z phoe_krk: darwinvsjesus: I'm not rating your opinion, I'm rating your attempt to troll.
2015-11-01T19:33:48Z ack006 quit (Quit: Leaving)
2015-11-01T19:34:34Z darwinvsjesus: phoe_krk: except that's not what that post was, flamer. it was vulgar, yes, but i'm not trolling. the book is just trash, imo. try again and don't jump to conclusions this time.
2015-11-01T19:34:38Z tharugrim joined #lisp
2015-11-01T19:34:48Z Shinmera: darwinvsjesus: I am god and I think you should leave.
2015-11-01T19:34:54Z zbigniew joined #lisp
2015-11-01T19:34:58Z antoszka: darwinvsjesus: The book is about #scheme, you're trolling the wrong channel.
2015-11-01T19:35:15Z phoe_krk: darwinvsjesus: imo, your post was a troll attempt. -4/10 for dragging this on.
2015-11-01T19:35:16Z axion: phoe_krk: may not be what you're looking for but awesome nontheless https://www.youtube.com/watch?v=xzTH_ZqaFKI
2015-11-01T19:35:21Z darwinvsjesus: the book IS NOT about scheme. you obviously haven't read it
2015-11-01T19:35:49Z darwinvsjesus: phoe_krk: incorrect.
2015-11-01T19:36:06Z H4ns: can someone help this person out, please_
2015-11-01T19:36:20Z phoe_krk: tsoutseki: not what I was looking for, indeed, but https://www.youtube.com/watch?v=xzTH_ZqaFKI
2015-11-01T19:36:43Z phoe_krk: darwinvsjesus: correct. -5/10 please kindly move yourself to /dev/null
2015-11-01T19:37:20Z tsoutseki: phoe_krk, are you trying to proselyte me to lisp
2015-11-01T19:37:42Z phoe_krk: tsoutseki: no, I'm trying to find you some examples for the interactivity part.
2015-11-01T19:37:45Z darwinvsjesus: phoe_krk: ah, well, at least you know you're incorrect in your perception of my first post.
2015-11-01T19:37:47Z oleo__ joined #lisp
2015-11-01T19:37:50Z tsoutseki: phoe_krk, ooh ok
2015-11-01T19:37:52Z EvW joined #lisp
2015-11-01T19:38:14Z phoe_krk: darwinvsjesus: no, I don't. I think I am correct and you aren't going to change that.
2015-11-01T19:38:34Z axion: the video link i posted above is a great example of interactive programming
2015-11-01T19:38:35Z darwinvsjesus: phoe_krk: you do. you just agreed, genius. try again.
2015-11-01T19:38:48Z _leb joined #lisp
2015-11-01T19:39:04Z darwinvsjesus quit (Quit: forget this. i'm not going to argue with an autist over his incorrect perceptions.)
2015-11-01T19:39:48Z Shinmera: Well that was mildly amusing.
2015-11-01T19:39:57Z phoe_krk: XD
2015-11-01T19:40:02Z phoe_krk: tsoutseki: FOUND IT https://www.youtube.com/watch?v=EkYUU0UoB_0
2015-11-01T19:40:08Z phoe_krk: that was what I looking for.
2015-11-01T19:40:18Z oleo_ quit (Ping timeout: 250 seconds)
2015-11-01T19:40:59Z wtbrk quit (Quit: Leaving)
2015-11-01T19:41:13Z cpc26_ quit (Ping timeout: 252 seconds)
2015-11-01T19:41:40Z axion: phoe_krk: the same author/idea for the one i posted, but not an odd angle with blurry video
2015-11-01T19:41:53Z tsoutseki: phoe_krk, right thanks!
2015-11-01T19:42:04Z phoe_krk: axion: yes, but that's a *live* video with actual audience.
2015-11-01T19:42:27Z phoe_krk: axion: more of a proof that this can and *is being* done live.
2015-11-01T19:42:40Z axion: if you say so
2015-11-01T19:42:52Z phoe_krk: axion: but thank you for the author, precisely the guy I was looking for.
2015-11-01T19:43:05Z phoe_krk: axion: and IMHO I like my video's music track more. :P
2015-11-01T19:43:17Z Draz quit (Quit: Leaving)
2015-11-01T19:44:48Z ChanServ has set mode +o p_l
2015-11-01T19:45:05Z p_l has set mode +b *!*#@*184.6.41.196
2015-11-01T19:45:17Z p_l has set mode -b *!*#@*184.6.41.196
2015-11-01T19:45:22Z p_l has set mode +b *!*@*184.6.41.196
2015-11-01T19:46:14Z ChanServ has set mode -o p_l
2015-11-01T19:47:16Z tmtwd joined #lisp
2015-11-01T19:47:26Z earl-ducaine joined #lisp
2015-11-01T19:47:27Z tsoutseki: phoe_krk, i used to love programming and computers as a kid and i did good with my programming class now in college
2015-11-01T19:47:37Z tsoutseki: i dreamed of being a haxxor, studying mathematics
2015-11-01T19:47:47Z tsoutseki: but got bored of thinking and now i just like getting drunk
2015-11-01T19:48:10Z tsoutseki: btw nice video
2015-11-01T19:48:11Z phoe_krk: tsoutseki: nothing stops you from getting bored of getting bored and going to fulfill your dreams
2015-11-01T19:48:19Z phoe_krk: tsoutseki: inorite? my favorite Lisp music vid
2015-11-01T19:48:27Z phoe_krk: even for just the soundtrack
2015-11-01T19:49:26Z lemoinem quit (Ping timeout: 240 seconds)
2015-11-01T19:50:25Z lemoinem joined #lisp
2015-11-01T19:52:34Z Baggers quit (Remote host closed the connection)
2015-11-01T19:55:21Z shookees quit (Read error: Connection reset by peer)
2015-11-01T19:55:41Z shookees joined #lisp
2015-11-01T19:56:27Z jtza8 quit (Remote host closed the connection)
2015-11-01T19:57:52Z sjl joined #lisp
2015-11-01T19:59:00Z sjl_ joined #lisp
2015-11-01T20:00:14Z grouzen quit (Ping timeout: 260 seconds)
2015-11-01T20:02:24Z sjl quit (Ping timeout: 250 seconds)
2015-11-01T20:02:38Z grouzen joined #lisp
2015-11-01T20:03:13Z grees joined #lisp
2015-11-01T20:04:41Z fiddlerwoaroof: Shinmera: should (pop (values 'foo)) work in ubiquitous?
2015-11-01T20:05:33Z fiddlerwoaroof: i.e. will it update the configuration file?
2015-11-01T20:05:39Z knobo1 quit (Ping timeout: 255 seconds)
2015-11-01T20:06:14Z Shinmera: values is an accessor, so yes.
2015-11-01T20:06:22Z Shinmera: Trying it out will also tell you :)
2015-11-01T20:06:36Z euandreh joined #lisp
2015-11-01T20:07:15Z sjl_ quit (Read error: Connection reset by peer)
2015-11-01T20:07:20Z fiddlerwoaroof: I ask, because I'm trying to figure out if it not-working is a bug in my code :)
2015-11-01T20:08:30Z vydd: how portable is slot-value for structs?
2015-11-01T20:08:37Z vydd: also, hi!
2015-11-01T20:09:10Z Shinmera: fiddlerwoaroof: http://filebox.tymoon.eu/file/Tnpjdw==
2015-11-01T20:09:41Z fiddlerwoaroof: Shinmera: I think I forgot to declare a variable special :)
2015-11-01T20:09:57Z schaueho joined #lisp
2015-11-01T20:10:18Z euandreh quit (Remote host closed the connection)
2015-11-01T20:13:35Z leafybasil joined #lisp
2015-11-01T20:13:37Z puchacz quit (Quit: Konversation terminated!)
2015-11-01T20:18:18Z shookees quit (Read error: Connection reset by peer)
2015-11-01T20:19:45Z shookees joined #lisp
2015-11-01T20:21:35Z shka_ quit (Quit: Konversation terminated!)
2015-11-01T20:21:52Z schaueho quit (Ping timeout: 246 seconds)
2015-11-01T20:22:12Z reggy quit (Quit: Leaving)
2015-11-01T20:23:15Z erjoalgo: vydd it's probably pretty portable, i think it's part of the hyperspec http://www.lispworks.com/documentation/HyperSpec/Body/f_slt_va.htm
2015-11-01T20:24:17Z White_Flame: basically, the question is how practically portable is it, vs is it mandated portable via the spec (doesn't seem like it)
2015-11-01T20:24:52Z White_Flame: "The consequences are specified if object has any other metaclass [than standard-class or built-in-class]"
2015-11-01T20:25:01Z White_Flame: arg, *un*specified, should have copy/pasted
2015-11-01T20:26:04Z pt1 quit (Remote host closed the connection)
2015-11-01T20:26:46Z vydd: thanks, yeah, that's why I'm asking; seems to work in sbcl & ccl, don't know about other implementations
2015-11-01T20:27:48Z cadadar joined #lisp
2015-11-01T20:28:20Z akkad quit (Excess Flood)
2015-11-01T20:29:05Z peytonien quit (Quit: leaving)
2015-11-01T20:30:42Z vydd: I could always find-symbol and look for accessors, but that doesn't feel right to me
2015-11-01T20:30:54Z znpy quit (Ping timeout: 260 seconds)
2015-11-01T20:32:02Z akkad joined #lisp
2015-11-01T20:33:04Z leafybasil quit (Remote host closed the connection)
2015-11-01T20:35:19Z erjoalgo: just curious, what other implementations would you be targeting?
2015-11-01T20:36:00Z EvW1 joined #lisp
2015-11-01T20:36:38Z vlatkoB quit (Remote host closed the connection)
2015-11-01T20:37:03Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T20:37:19Z EvW quit (Ping timeout: 240 seconds)
2015-11-01T20:37:19Z EvW1 is now known as EvW
2015-11-01T20:37:41Z Ven_ joined #lisp
2015-11-01T20:38:28Z fantazo quit (Quit: Verlassend)
2015-11-01T20:40:51Z gravicappa quit (Remote host closed the connection)
2015-11-01T20:42:13Z fiddlerwoaroof: Shinmera: https://github.com/fiddlerwoaroof/uclip
2015-11-01T20:42:33Z pt1 joined #lisp
2015-11-01T20:42:45Z Shinmera: That readme link ain't right
2015-11-01T20:42:55Z fiddlerwoaroof: It's still fairly hacked-together, but I hope to eventually figure out how to connect it to the X/Mac clipboards.
2015-11-01T20:42:56Z vydd: erjoalgo: not really "targeting"; I would just feel better about it if it was supported by major lisps
2015-11-01T20:43:00Z fiddlerwoaroof: Oops
2015-11-01T20:43:44Z fiddlerwoaroof: fixed.
2015-11-01T20:44:44Z Petit_Dejeuner` joined #lisp
2015-11-01T20:44:52Z pt1 quit (Remote host closed the connection)
2015-11-01T20:45:22Z Shinmera: Qt has tools to access the clipboard cross-platform, but pulling that in just for something simple as that would be a bit overblown.
2015-11-01T20:45:46Z johann_ quit (Remote host closed the connection)
2015-11-01T20:45:50Z Walex2 quit (Ping timeout: 260 seconds)
2015-11-01T20:46:31Z znpy joined #lisp
2015-11-01T20:46:54Z fiddlerwoaroof: Yeah, I've used the Cocoa APIs for clipboard access before.
2015-11-01T20:46:59Z fiddlerwoaroof: Anyways, have to run.
2015-11-01T20:47:08Z johann_ joined #lisp
2015-11-01T20:51:10Z mvilleneuve quit (Ping timeout: 240 seconds)
2015-11-01T20:51:26Z johann_ quit (Ping timeout: 240 seconds)
2015-11-01T20:52:02Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T20:52:44Z danlentz_ joined #lisp
2015-11-01T20:53:05Z Ven_ joined #lisp
2015-11-01T20:53:11Z ggole quit
2015-11-01T20:58:14Z leafybasil joined #lisp
2015-11-01T20:58:40Z C4K3 joined #lisp
2015-11-01T20:58:54Z mvilleneuve joined #lisp
2015-11-01T21:02:59Z grouzen quit (Ping timeout: 252 seconds)
2015-11-01T21:03:43Z quazimodo joined #lisp
2015-11-01T21:03:48Z grouzen joined #lisp
2015-11-01T21:03:49Z quazimod1 joined #lisp
2015-11-01T21:04:20Z ogamita joined #lisp
2015-11-01T21:05:06Z fridim_ quit (Ping timeout: 260 seconds)
2015-11-01T21:07:21Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T21:08:31Z k-stz quit (Remote host closed the connection)
2015-11-01T21:09:43Z johann_ joined #lisp
2015-11-01T21:11:23Z pt1 joined #lisp
2015-11-01T21:11:30Z grouzen quit (Ping timeout: 260 seconds)
2015-11-01T21:14:06Z axion: i'm trying to find a bug - does anyone know if the LOOP UNTIL clause will do one last iteration when it is non-nil?
2015-11-01T21:14:23Z jleija joined #lisp
2015-11-01T21:14:47Z Shinmera: it does everything up until the UNTIL.
2015-11-01T21:15:44Z axion: that's strange. i fixed the bug with an unless form before the do clause, equal to the until form
2015-11-01T21:16:01Z tsoutseki quit (Quit: Leaving)
2015-11-01T21:16:01Z Ven_ joined #lisp
2015-11-01T21:17:50Z yvm: /, + and * for (random 1000) (random 1.0d0) and (random 1000) (random 1000) gives almost the same time/CPU cycles result. How? SBCL, AMD Athlon II X3 445.
2015-11-01T21:22:21Z samssammerz quit (Quit: Leaving)
2015-11-01T21:22:23Z yvm: Uh, never mind.
2015-11-01T21:22:27Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T21:22:33Z yvm: I'm doing it wrong.
2015-11-01T21:26:44Z papachan_ is now known as papachan
2015-11-01T21:26:50Z _leb quit (Quit: Computer has gone to sleep.)
2015-11-01T21:28:17Z pjb: phoe_krk: then you get why com.informatimago.common-lisp.cesarum is called cesarum?
2015-11-01T21:28:31Z Ven_ joined #lisp
2015-11-01T21:28:50Z phoe_krk: pjb: ...there is no historically mentionworthy library of cesarum
2015-11-01T21:28:56Z samssammerz joined #lisp
2015-11-01T21:29:01Z phoe_krk: while there is a historically mentionworthy library of alexandria
2015-11-01T21:29:27Z pjb: But Cesarum was built on the cinders of Alexandria.
2015-11-01T21:29:33Z phoe_krk: ...oh
2015-11-01T21:29:38Z phoe_krk: that, I didn't know
2015-11-01T21:29:53Z pjb: This is what we call "history".  What we didn't know…
2015-11-01T21:30:59Z cadadar left #lisp
2015-11-01T21:31:08Z phoe_krk: ...why does the name of this thing remind me of Java, and reminds me of Java in the bad way
2015-11-01T21:31:28Z pjb: the referse domain name prefixes are about the only good thing from Java.
2015-11-01T21:31:30Z pjb: reverse
2015-11-01T21:32:06Z lispyone_ quit (Ping timeout: 240 seconds)
2015-11-01T21:32:23Z _leb joined #lisp
2015-11-01T21:32:46Z phoe_krk: well, yes, but they're long as holy hell
2015-11-01T21:32:53Z C4K3 quit (Remote host closed the connection)
2015-11-01T21:32:55Z Oladon quit (Read error: Connection reset by peer)
2015-11-01T21:33:15Z pjb: That's why there's com.informatimago.common-lisp.cesarum.package:add-nickname
2015-11-01T21:34:02Z phoe_krk: when you have to add a nickname to a nickname-adding function, something's not right
2015-11-01T21:34:16Z Oladon joined #lisp
2015-11-01T21:34:20Z phoe_krk: s/have to/feel like you should/
2015-11-01T21:34:23Z pjb: phoe_krk: it's called bootstrap. You clearly don't know enough to talk about it.
2015-11-01T21:35:54Z troydm quit (Ping timeout: 260 seconds)
2015-11-01T21:36:32Z NeverDie quit (Quit: http://radiux.io/ -> Manhattan Project)
2015-11-01T21:37:00Z _leb quit (Client Quit)
2015-11-01T21:38:00Z phoe_krk: but now I'm curious
2015-11-01T21:38:56Z kami joined #lisp
2015-11-01T21:39:00Z kami left #lisp
2015-11-01T21:40:25Z phoe_krk: boostrapping *what*, exactly?
2015-11-01T21:40:51Z pjb: axion: you can place the until before after or in the middle of other clauses (but for clauses which come before).
2015-11-01T21:41:00Z pjb: phoe_krk: the nicknames!
2015-11-01T21:41:14Z phoe_krk: pjb: !?
2015-11-01T21:41:22Z lispyone_ joined #lisp
2015-11-01T21:41:23Z pjb: phoe_krk: there are collisions between library names.  We have 3 different clon libraries!!!
2015-11-01T21:42:06Z pjb: phoe_krk: in any case, short nicknames should never be assigned in distributed libraries or programs.  Only the final user may use them.
2015-11-01T21:42:22Z phoe_krk: ...I see now
2015-11-01T21:43:03Z pjb: phoe_krk: also, eventually we'll have relative package names.
2015-11-01T21:43:03Z phoe_krk: ...oh okay, you can even define package nicknames yourself in Lisp so you can call them whatever you'd like in your application.
2015-11-01T21:43:24Z phoe_krk: is there something you can't define yourself in Lisp?
2015-11-01T21:43:26Z phoe_krk: [/sarcasm]
2015-11-01T21:43:31Z pjb: But not if you distribute your application, because then somebody may load it with another application using the same short nicknames for something else!
2015-11-01T21:43:54Z phoe_krk: pjb: is it impossible to define a package nickname only within a package?
2015-11-01T21:44:02Z pjb: Not yet.
2015-11-01T21:44:22Z phoe_krk: Is it implementation-dependent?
2015-11-01T21:44:45Z phoe_krk: Or could you just wrap your whole, whole code within a (with-nickname ...) macro?
2015-11-01T21:44:49Z phoe_krk: Because it sounds like you could.
2015-11-01T21:44:50Z pjb: Allegro CL has http://franz.com/support/documentation/8.1/doc/packages.htm#relative-2 but this has not been specified and ported to other implementations.
2015-11-01T21:44:52Z pjb: yet.
2015-11-01T21:45:00Z phoe_krk nod.
2015-11-01T21:45:11Z _leb joined #lisp
2015-11-01T21:45:49Z phoe_krk: An idea that popped into my head to define a nickname table and some sort of reader macro that triggers whenever you want to use a function from another package.
2015-11-01T21:46:18Z lispyone_ quit (Remote host closed the connection)
2015-11-01T21:46:27Z phoe_krk: So $mp:fn translates to com.collide.not.does.that.name.mypackage:fn
2015-11-01T21:46:37Z phoe_krk: $ being an example of the reader macro trigger character
2015-11-01T21:46:38Z pjb: Yes, with $ that would work.
2015-11-01T21:46:50Z ajf- quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-01T21:46:53Z phoe_krk: ...so a with-nicknames macro is doable?
2015-11-01T21:46:58Z pjb: No.
2015-11-01T21:47:02Z pjb: You need a reader macro.
2015-11-01T21:47:05Z CharlesN joined #lisp
2015-11-01T21:47:09Z nxtr_ joined #lisp
2015-11-01T21:47:16Z quazimod1 quit (Ping timeout: 246 seconds)
2015-11-01T21:47:29Z pjb: Well, you can do something after the fact with a macro, but it's a brittle kludge.
2015-11-01T21:47:58Z quazimodo quit (Ping timeout: 246 seconds)
2015-11-01T21:48:27Z phoe_krk: pjb: a reader macro that is.
2015-11-01T21:48:57Z aretecode joined #lisp
2015-11-01T21:49:07Z phoe_krk: pjb: I have very little competence to do that, but I'll try to write it.
2015-11-01T21:51:34Z phoe_krk: pjb: would it be in good Lisp taste to define an earmuffed global symbol for a nickname table for the macro?
2015-11-01T21:52:42Z NeverDie joined #lisp
2015-11-01T21:52:55Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T21:54:32Z Ven_ joined #lisp
2015-11-01T21:58:27Z pt1 quit (Remote host closed the connection)
2015-11-01T21:59:23Z Whymind quit (Read error: Connection reset by peer)
2015-11-01T22:00:16Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-01T22:00:45Z Whymind joined #lisp
2015-11-01T22:03:06Z francogrex joined #lisp
2015-11-01T22:03:55Z francogrex: I discovered a bug in a package at this stage: http://paste.lisp.org/display/158190
2015-11-01T22:03:56Z pjb: phoe_krk: notice that a-priory, the package nickname table could be associated to the package.
2015-11-01T22:04:20Z phoe_krk: yes, I see.
2015-11-01T22:04:22Z pjb: francogrex: what's the bug?
2015-11-01T22:04:40Z francogrex: 0 dim array
2015-11-01T22:04:46Z pjb: Yes. So what?
2015-11-01T22:04:54Z pjb: It's a scalar array, containing a single element, your vector.
2015-11-01T22:05:21Z pjb: (aref #0A42) #| --> 42 |#
2015-11-01T22:05:26Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-01T22:05:33Z francogrex: but this (apply #'aref table '(0 0 0)) is wrong
2015-11-01T22:05:37Z pjb: Yes.
2015-11-01T22:05:42Z pjb: Hence the simple-error.
2015-11-01T22:05:46Z pjb: So all is right.
2015-11-01T22:06:00Z pjb: Also table is wrong, it should be *table*.
2015-11-01T22:06:15Z francogrex: yes the bug is not in cl but in the package itself
2015-11-01T22:06:30Z pjb: I see no package in this paste…
2015-11-01T22:06:38Z pjb: Hence, "where's the bug?"
2015-11-01T22:06:53Z francogrex: ok it is me stepping through cl-bayesnet
2015-11-01T22:06:54Z ajf- joined #lisp
2015-11-01T22:07:07Z ryouma` left #lisp
2015-11-01T22:07:15Z pjb: Good. So I guess you could write a patch and post a pull request on that project.
2015-11-01T22:07:26Z francogrex: https://github.com/lhope/cl-bayesnet
2015-11-01T22:07:53Z Ven_ quit (Read error: Connection reset by peer)
2015-11-01T22:08:31Z Ven_ joined #lisp
2015-11-01T22:08:46Z francogrex: i will try
2015-11-01T22:10:48Z _leb quit (Quit: Computer has gone to sleep.)
2015-11-01T22:12:45Z Xach: arrrgh
2015-11-01T22:15:20Z pjb: matey, go swab the deck you scurvy bastard!
2015-11-01T22:15:49Z angavrilov quit (Remote host closed the connection)
2015-11-01T22:16:13Z OrangeShark joined #lisp
2015-11-01T22:16:14Z mrSpec quit (Quit: mrSpec)
2015-11-01T22:16:48Z Draz joined #lisp
2015-11-01T22:17:09Z Ven_ quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-11-01T22:17:14Z Xach: right after I roll the october release, teepeedee2 is updated for the first time in a year to fix the problem that prompted its removal
2015-11-01T22:19:09Z snv joined #lisp
2015-11-01T22:19:19Z pjb: Good, so it'll be back in November! :-)
2015-11-01T22:19:37Z Xach: yes
2015-11-01T22:19:42Z snv quit (Client Quit)
2015-11-01T22:19:45Z knobo1 joined #lisp
2015-11-01T22:20:32Z jfe: (- 1372.97 1360.45)
2015-11-01T22:20:40Z pjb: (- 1372.97 1360.45) #| --> 12.52002 |#
2015-11-01T22:20:44Z jfe: oops, sorry haha.
2015-11-01T22:20:52Z francogrex quit (Quit: rcirc on GNU Emacs 22.3.1)
2015-11-01T22:21:43Z pjb: jfe: you may want to have a look at: https://gitlab.com/com-informatimago/emacs/blob/master/pjb-erc.el#L966
2015-11-01T22:21:58Z phoe_krk: pjb: if I create a package that's meant for external use, should I prefix all vars/functions/macros with packagename: ?
2015-11-01T22:22:21Z pjb: Only symbols can be qualified.
2015-11-01T22:22:26Z pjb: Depends in what package you're trying to read those symbols.
2015-11-01T22:22:26Z phoe_krk: I mean.
2015-11-01T22:22:42Z phoe_krk: I'll be trying to use macro mypkg:macro in other packages.
2015-11-01T22:22:51Z pjb: http://www.flownet.com/gat/packages.pdf
2015-11-01T22:23:09Z pjb: phoe_krk: usually the other package uses mypkg so you just write macro.
2015-11-01T22:23:17Z phoe_krk: oh. okay.
2015-11-01T22:23:29Z phoe_krk: but just in case of complete paranoia, should I qualify everything qualifiable?
2015-11-01T22:23:35Z pjb: Like, you use COMMON-LISP so you don't have to write (COMMON-LISP:IF (COMMON-LISP:= a b) (COMMON-LISP:PRINT 'equal))
2015-11-01T22:23:46Z phoe_krk: yes, I know
2015-11-01T22:24:55Z pjb: The paranoia might be to use qualified symbols, since, eg. when you write MCCLIM applications, you do want to use  MCCLIM:DEFCLASS and MCCLIM:DEFMETHOD instead of CL:DEFCLASS and CL:DEFMETHOD.    Then it's better to use the MCCLIM package and write defclass and defmethod to get the right symbols.
2015-11-01T22:25:59Z futpib quit (Ping timeout: 264 seconds)
2015-11-01T22:26:22Z pjb: phoe_krk: also, even when you use qualified symbols, you might have reader macros that will interpret them differently.
2015-11-01T22:29:39Z lispyone_ joined #lisp
2015-11-01T22:30:08Z tharugrim quit (Quit: WeeChat 1.3)
2015-11-01T22:38:09Z m0li joined #lisp
2015-11-01T22:39:22Z shookees quit (Ping timeout: 260 seconds)
2015-11-01T22:50:10Z jason_m joined #lisp
2015-11-01T22:51:16Z varjag quit (Ping timeout: 272 seconds)
2015-11-01T22:52:01Z Nikotiin` joined #lisp
2015-11-01T22:52:22Z lnostdal__ quit (Ping timeout: 246 seconds)
2015-11-01T22:52:55Z Nikotiini quit (Ping timeout: 256 seconds)
2015-11-01T22:53:40Z quazimodo joined #lisp
2015-11-01T22:53:42Z quazimod1 joined #lisp
2015-11-01T22:54:05Z grees quit (Remote host closed the connection)
2015-11-01T22:54:07Z shookees joined #lisp
2015-11-01T22:54:24Z lispyone_ quit (Remote host closed the connection)
2015-11-01T22:54:57Z lispyone_ joined #lisp
2015-11-01T22:58:38Z Nikotiin` is now known as Nikotiini
2015-11-01T23:01:28Z dkcl joined #lisp
2015-11-01T23:06:22Z lnostdal__ joined #lisp
2015-11-01T23:12:06Z badkins quit (Remote host closed the connection)
2015-11-01T23:12:23Z zacharias joined #lisp
2015-11-01T23:14:46Z phoe_krk: Are NIL and T valid package names?
2015-11-01T23:14:51Z vydd quit
2015-11-01T23:15:14Z Xach: phoe_krk: those are symbols. package names are strings. "NIL" and "T" are fine.
2015-11-01T23:16:06Z Xach: phoe_krk: "COMMON-LISP" and "COMMON-LISP-USER" and "KEYWORD" (and their nicknames) are specified. any other string is allowed, though your implementation probably has many of its own as part of the system.
2015-11-01T23:20:12Z vydd joined #lisp
2015-11-01T23:21:18Z lispyone_ quit (Remote host closed the connection)
2015-11-01T23:27:18Z phoe_krk: Is there a version of getf with a modifiable predicate? I need string= and not eq.
2015-11-01T23:29:17Z Raimondi quit (Read error: Connection reset by peer)
2015-11-01T23:29:44Z phoe_krk: oh okay
2015-11-01T23:29:49Z phoe_krk: I'll do it tomorrow, too late for that.
2015-11-01T23:29:56Z phoe_krk: pjb:
2015-11-01T23:30:01Z phoe_krk: night, #parens
2015-11-01T23:30:25Z Shinmera quit (Quit: しつれいしなければならないんです。)
2015-11-01T23:31:05Z pjb: phoe_krk: "" is a valid package name (not all implementations support it) (defpackage "" (:use)) '||::||
2015-11-01T23:32:45Z TDT quit (Quit: TDT)
2015-11-01T23:34:10Z radioninja quit (Ping timeout: 244 seconds)
2015-11-01T23:38:06Z gingerale quit (Remote host closed the connection)
2015-11-01T23:42:53Z pillton joined #lisp
2015-11-01T23:43:03Z samssammerz quit (Remote host closed the connection)
2015-11-01T23:43:33Z knobo1 quit (Ping timeout: 268 seconds)
2015-11-01T23:44:44Z phoe_krk: oh okay
2015-11-01T23:44:48Z phoe_krk: just one more thing before going to sleep
2015-11-01T23:45:19Z phoe_krk: http://stackoverflow.com/questions/3017225/can-getf-use-equal-for-comparison-instead-of-eq-common-lisp <= I'm using the fixed version from the mostvoted answer.
2015-11-01T23:45:55Z phoe_krk: How should I begin writing a setf expansion for it?
2015-11-01T23:46:28Z Bike: use member, if it's non-nil (setf second), if it is nil put it on the front
2015-11-01T23:46:30Z Bike: or something like that
2015-11-01T23:46:40Z Nikotiini quit (Remote host closed the connection)
2015-11-01T23:47:39Z badkins joined #lisp
2015-11-01T23:50:11Z phoe_krk: Let's say I write a setf expander of (defun string=-getf (plist indicator) ...). How, inside a (defun (setf string=-getf) (...) ...), do I access the plist and indicator the string=-getf is called with?
2015-11-01T23:52:41Z ajf-: sort a list by resemblence to another list ?
2015-11-01T23:52:51Z ajf-: so sort by ordered difference basically
2015-11-01T23:53:00Z phoe_krk: hm?
2015-11-01T23:53:03Z TDT joined #lisp
2015-11-01T23:53:03Z ajf-: any ideas ?
2015-11-01T23:53:51Z lispyone_ joined #lisp
2015-11-01T23:54:05Z phoe_krk: oh, for me, it looks like defsetf will do
2015-11-01T23:56:40Z phoe_krk: night
2015-11-01T23:59:50Z TDT quit (Quit: TDT)
2015-11-02T00:02:12Z badkins quit (Remote host closed the connection)
2015-11-02T00:02:16Z TDT joined #lisp
2015-11-02T00:02:50Z nxtr_ quit (Ping timeout: 272 seconds)
2015-11-02T00:04:46Z Karl_Dscc quit (Remote host closed the connection)
2015-11-02T00:04:46Z Yuuhi quit (Read error: Connection reset by peer)
2015-11-02T00:15:21Z lispyone_ quit (Remote host closed the connection)
2015-11-02T00:18:47Z znpy quit (Ping timeout: 264 seconds)
2015-11-02T00:20:30Z stepnem quit (Ping timeout: 260 seconds)
2015-11-02T00:25:52Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-02T00:37:09Z ajf- quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-02T00:39:28Z wuzzzz joined #lisp
2015-11-02T00:41:38Z quasus quit (Ping timeout: 260 seconds)
2015-11-02T00:44:43Z wuzzzz: curious, when using commonqt, why is it that when I provide a plain function as a recipient of a signal, that redefining the function in the repl seems to have no impact while running the program,
2015-11-02T00:44:49Z wuzzzz:  but when I make the function a method instead, and use the defclass call to link the slot and signal that way, that redefinition of the method does change the behavior while running?
2015-11-02T00:49:11Z lispyone_ joined #lisp
2015-11-02T00:50:04Z harish_ quit (Ping timeout: 265 seconds)
2015-11-02T00:54:51Z kristof joined #lisp
2015-11-02T00:55:49Z pillton: I would guess that the function object is stored.
2015-11-02T00:56:28Z pillton: A generic function has to compute the effective method at each invocation.
2015-11-02T00:56:46Z fikusz joined #lisp
2015-11-02T00:58:06Z pillton: Try connecting (lambda (x) (my-func x)) to the signal instead of my-func.
2015-11-02T00:59:21Z remi`bd quit (Quit: leaving)
2015-11-02T00:59:40Z lispyone_ quit (Remote host closed the connection)
2015-11-02T01:00:03Z wuzzzz: I suspect that changing the lambda would work.  I happen to be stuffing everything into a constructor, so making changes there requires restarting the app
2015-11-02T01:00:10Z kristof quit (Ping timeout: 260 seconds)
2015-11-02T01:01:39Z lispyone_ joined #lisp
2015-11-02T01:06:58Z JammyHammy quit (Read error: Connection reset by peer)
2015-11-02T01:08:35Z s00pcan quit (Ping timeout: 264 seconds)
2015-11-02T01:09:19Z _leb joined #lisp
2015-11-02T01:09:57Z johann_ quit (Remote host closed the connection)
2015-11-02T01:10:08Z s00pcan joined #lisp
2015-11-02T01:12:15Z wuzzzz: pillton: thanks
2015-11-02T01:13:12Z Fare joined #lisp
2015-11-02T01:13:48Z johann_ joined #lisp
2015-11-02T01:32:18Z lispyone_ quit (Remote host closed the connection)
2015-11-02T01:37:14Z zeroish joined #lisp
2015-11-02T01:40:30Z Fare quit (Quit: Leaving)
2015-11-02T01:48:06Z s00pcan quit (Ping timeout: 240 seconds)
2015-11-02T01:48:41Z FreeBirdLjj joined #lisp
2015-11-02T01:49:29Z xrash joined #lisp
2015-11-02T01:50:09Z s00pcan joined #lisp
2015-11-02T01:54:50Z harish_ joined #lisp
2015-11-02T01:54:54Z scymtym_ quit (Ping timeout: 260 seconds)
2015-11-02T01:56:36Z phf: how can i force asdf to recompile/reload the package after it's already been loaded (i.e. redo everything, instead of just picking up changes)?
2015-11-02T01:58:56Z Guest68270 joined #lisp
2015-11-02T01:59:07Z yggds1 joined #lisp
2015-11-02T01:59:53Z samssammerz joined #lisp
2015-11-02T01:59:58Z drmeister: How does one loop over a list and for every element loop over the remainder of the list from that element on?
2015-11-02T02:01:16Z drmeister: I want to compare every entry of a list with every other entry of the list.
2015-11-02T02:01:23Z phf: drmeister: you mean something like (loop for (a . rest) on ... do (loop for b in rest do ...)) ?
2015-11-02T02:01:24Z Hogget joined #lisp
2015-11-02T02:02:20Z drmeister: I think so - so that's how you do it.
2015-11-02T02:02:30Z Fare joined #lisp
2015-11-02T02:03:08Z Hogget: Whatever came of the new "Propagator" paradigm for a programming language?
2015-11-02T02:04:38Z wuzzzz: drmeister:  I like to start with something like (my compare orig-list (cdr orig-list))
2015-11-02T02:04:41Z pjb: drmeister: or you use maplist (if you want to map like that).
2015-11-02T02:05:23Z pjb: (maplist (lambda (tail) (member (first tail) (rest tail))) '(1 2 3 1 2 4 1)) #| --> ((1 . #1=(2 4 . #2=(1))) #1# nil #2# nil nil nil) |#
2015-11-02T02:06:53Z jlarocco_ quit (Quit: Leaving)
2015-11-02T02:07:23Z Fare: Hogget: a new Haskell library
2015-11-02T02:07:37Z phf: (to answer my previous question: "It is sometimes useful to force recompilation of a previously loaded system. For these cases, (asdf:clear-system :foo) will remove the system from the table of currently loaded systems: the next time the system foo or one that depends on it is re-loaded, foo will be loaded again.")
2015-11-02T02:08:09Z pjb: But not recompiled.
2015-11-02T02:08:13Z Hogget: Fare: you mean i should write a new Haskell lib?
2015-11-02T02:08:13Z pjb: So no answer.
2015-11-02T02:08:33Z pjb: phf: you want to remove the compiled version in ~/.cache/common-lisp/ first.
2015-11-02T02:09:07Z badkins joined #lisp
2015-11-02T02:10:14Z badkins quit (Remote host closed the connection)
2015-11-02T02:10:38Z leafybasil quit (Remote host closed the connection)
2015-11-02T02:10:45Z Fare: Hogget: I mean kmett has been commenting about it.
2015-11-02T02:11:08Z pillton: phf: (asdf:load-system "system" :force t)
2015-11-02T02:11:15Z Hogget: Fare: where?
2015-11-02T02:13:55Z drmeister: phf, pjb, wuzzzz: Thank you.
2015-11-02T02:14:18Z badkins joined #lisp
2015-11-02T02:17:41Z phf: pillton: thanks!
2015-11-02T02:18:19Z lispyone_ joined #lisp
2015-11-02T02:19:11Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-02T02:19:23Z badkins quit (Ping timeout: 264 seconds)
2015-11-02T02:27:17Z incal joined #lisp
2015-11-02T02:28:44Z johann_ quit (Remote host closed the connection)
2015-11-02T02:35:39Z johann_ joined #lisp
2015-11-02T02:36:25Z Fare: Hogget,  https://news.ycombinator.com/item?id=10390477
2015-11-02T02:36:50Z Hogget: Fare: thanks a bunch
2015-11-02T02:37:35Z zacharias_ joined #lisp
2015-11-02T02:38:51Z smokeink joined #lisp
2015-11-02T02:40:41Z zacharias quit (Ping timeout: 244 seconds)
2015-11-02T02:40:46Z defaultxr joined #lisp
2015-11-02T02:45:10Z fortitude joined #lisp
2015-11-02T02:46:24Z phf: cffi docs say that you can't define translations for types defined with defctype, but i'm looking at some old (2008?) code that's trying to use (type (eql 'foo)) trick. the trick doesn't seem to work. is this something that used to be supported but isn't anymore?
2015-11-02T02:46:57Z aap_ joined #lisp
2015-11-02T02:47:15Z fortitude left #lisp
2015-11-02T02:49:46Z emacsomancer joined #lisp
2015-11-02T02:49:50Z aap quit (Ping timeout: 240 seconds)
2015-11-02T02:55:22Z emacsomancer is now known as emacsomancer0
2015-11-02T02:56:41Z emacsomancer joined #lisp
2015-11-02T02:58:17Z incal quit (Ping timeout: 256 seconds)
2015-11-02T03:02:17Z emacsomancer0 quit (Remote host closed the connection)
2015-11-02T03:04:35Z yggds joined #lisp
2015-11-02T03:06:38Z yggds1 quit (Ping timeout: 250 seconds)
2015-11-02T03:07:20Z TDT quit (Quit: TDT)
2015-11-02T03:10:19Z cmoney joined #lisp
2015-11-02T03:10:43Z cmoney quit (Remote host closed the connection)
2015-11-02T03:11:30Z mea-culpa joined #lisp
2015-11-02T03:12:09Z wuzzzz quit (Ping timeout: 246 seconds)
2015-11-02T03:18:39Z v_diddy is now known as ben_vulpes
2015-11-02T03:19:36Z emacsomancer is now known as emacsomancer0
2015-11-02T03:21:39Z emacsomancer joined #lisp
2015-11-02T03:23:08Z johann_ quit (Remote host closed the connection)
2015-11-02T03:25:02Z mordocai quit (Remote host closed the connection)
2015-11-02T03:25:37Z mordocai joined #lisp
2015-11-02T03:28:51Z s00pcan quit (Remote host closed the connection)
2015-11-02T03:37:31Z EvW quit (Ping timeout: 252 seconds)
2015-11-02T03:44:53Z resttime: Connecting simple things between mathematics and Common Lisp makes me feel happy.
2015-11-02T03:45:52Z resttime: Like finding a friend popping in at an event.
2015-11-02T03:46:39Z resttime: "Hey buddy, you came here too? No way!"
2015-11-02T03:48:53Z loke: resttime: I think you have to provide more context here.
2015-11-02T03:48:56Z loke: What maths?
2015-11-02T03:50:30Z aretecode quit (Ping timeout: 260 seconds)
2015-11-02T03:54:55Z Zhivago: Perhaps arithmetic.
2015-11-02T03:55:43Z zacts quit (Ping timeout: 250 seconds)
2015-11-02T03:58:24Z ajf- joined #lisp
2015-11-02T03:58:59Z resttime: loke: Anything really though I guess a simple example would be expansion (a + b)^2 = (a + b)(a + b) = a^2 + 2ab + b^2
2015-11-02T03:59:32Z resttime: Finding (a - b)^2 is essentially (a + (-b))^2 so a^2 - 2ab + b^2
2015-11-02T03:59:33Z loke: resttime: How does that relate to CL? (other than the fact that they can be expressed as sexps)
2015-11-02T04:00:10Z resttime: Thinking in terms of anonymous functions, they are like the "same"
2015-11-02T04:02:17Z resttime: Errr I don't really mean to try to make it seem more profound than it probably is
2015-11-02T04:03:06Z resttime: I just like connecting concepts because they start to merge and give a satisfying feeling.
2015-11-02T04:03:33Z Zhivago: You might find prolog more interesting in that it's about equations rather than functions.
2015-11-02T04:04:59Z lnostdal__ quit (Ping timeout: 240 seconds)
2015-11-02T04:05:19Z resttime: Like something as simple as associativity (a + b) + c = a + (b + c), as two lambdas on each side
2015-11-02T04:08:07Z randommelon joined #lisp
2015-11-02T04:08:17Z Guest68270 quit (Quit: Leaving)
2015-11-02T04:09:17Z Hogget: resttime: Lately i've been getting hints that computer algorithms are not exactly Mathematical, even when they handle math problems.
2015-11-02T04:10:21Z Zhivago: An algorithm is a procedural implementation of a function, so they are.
2015-11-02T04:10:27Z Zhivago: But many procedures are not algorithms.
2015-11-02T04:11:02Z Hogget: Zhivago: of a math function, you mean?
2015-11-02T04:11:14Z Zhivago: That's the only kind.
2015-11-02T04:11:33Z randommelon left #lisp
2015-11-02T04:12:59Z Hogget: isn't a machine procedure function different than a math function?
2015-11-02T04:13:23Z Zhivago: I think the fact that you pointed out that it is a procedure is a good indication that it isn't a function.
2015-11-02T04:14:30Z Denommus quit (Ping timeout: 240 seconds)
2015-11-02T04:14:35Z Hogget: a programming function that handles some string of text is still called . . . a function, no?
2015-11-02T04:15:12Z Zhivago: Many things are poorly named -- C functions are procedures, for example.
2015-11-02T04:15:26Z badkins joined #lisp
2015-11-02T04:15:38Z Zhivago: But dealing with strings doesn't mean that something is not a function.
2015-11-02T04:16:24Z Hogget: that's probably where the assumption that all computer procedures are mathematical comes from.
2015-11-02T04:17:09Z Zhivago: Well, no procedure is mathematical.
2015-11-02T04:17:54Z kp666 joined #lisp
2015-11-02T04:18:12Z Hogget: and every computer program is a procedure . . . ergo, . . .
2015-11-02T04:18:41Z Zhivago: That is incorrect.
2015-11-02T04:19:03Z Zhivago: There are many computer programs which are functions.
2015-11-02T04:19:07Z Hogget: show me a computer function that is not a procedure.
2015-11-02T04:19:30Z lnostdal__ joined #lisp
2015-11-02T04:20:00Z Zhivago: Any function in a language which supports actual functions -- e.g., haskell.
2015-11-02T04:20:18Z _leb quit (Quit: Textual IRC Client: www.textualapp.com)
2015-11-02T04:20:27Z badkins quit (Ping timeout: 268 seconds)
2015-11-02T04:21:13Z snv joined #lisp
2015-11-02T04:21:36Z resttime: Zhivago: I'm curious, what are your definitions of function and procedure?
2015-11-02T04:22:36Z Zhivago: A function is a relationship between domain and range, a procedure is a sequence of operations over time.
2015-11-02T04:23:45Z jlarocco_ joined #lisp
2015-11-02T04:23:57Z johann_ joined #lisp
2015-11-02T04:24:17Z resttime: int plus-one (int a) { return a + 1; } ?
2015-11-02T04:24:25Z Hogget: After the Haskell programmer is done writing his funciton to process a mathematical function, the compiler follows a procedure.  A computer does procedures.
2015-11-02T04:24:32Z faalentijn quit (Ping timeout: 244 seconds)
2015-11-02T04:25:08Z Hogget: compiler, or interpreter.
2015-11-02T04:25:16Z Zhivago: hogget: You're confusing two different programs.
2015-11-02T04:25:30Z Zhivago: hogget: The programmer writes a program which specifies a function.
2015-11-02T04:25:30Z Hogget: no; same process.
2015-11-02T04:25:52Z Zhivago: Someone might then transate that program into another program which specifies a procedure which has equivalent behavior to the function.
2015-11-02T04:26:11Z Zhivago: Those are not the same program.
2015-11-02T04:26:30Z resttime: Ah, plus-one is not a "function" because of overflow
2015-11-02T04:26:39Z Bike: no
2015-11-02T04:26:42Z Hogget: point is that the computer has to follow a procedure in order to achieve the result of a math function.
2015-11-02T04:26:46Z Zhivago: (And it's easy to understand that they're not the same program because compilation is not reversible)
2015-11-02T04:26:52Z Bike: plus one can be a function, it may use modular arithmetic
2015-11-02T04:26:53Z Zhivago: Hogget: Which computer?
2015-11-02T04:26:55Z Bike: or have infinite domain and range
2015-11-02T04:27:20Z Hogget: Zhivago: a silicon, or vacuum tubes, computer
2015-11-02T04:27:28Z Bike: by the way, as long as the topic is arguing about words, the writer being a him is unnecessarily restrictive
2015-11-02T04:27:54Z Hogget: ;)
2015-11-02T04:28:02Z Hogget: a shim
2015-11-02T04:28:17Z Zhivago: bike: 'him' is gender neutral in English.
2015-11-02T04:28:24Z lispyone_ quit (Remote host closed the connection)
2015-11-02T04:28:36Z resttime: Bike: Then what makes a C "function" a "procedure" as Zhivago says?
2015-11-02T04:28:45Z johann_ quit (Ping timeout: 255 seconds)
2015-11-02T04:28:56Z Bike: because c "functions" are defined in terms of a virtual machine that carries out procedures
2015-11-02T04:29:13Z Zhivago: A C function is a sequence of operations over time.
2015-11-02T04:29:15Z Bike: whereas haskell functions can just functions, sometimes, probably
2015-11-02T04:29:22Z Bike: just be
2015-11-02T04:30:07Z Bike: the best part about computers, of course, is that proving an algorithm computes a function is impossible
2015-11-02T04:30:41Z schaueho joined #lisp
2015-11-02T04:30:49Z Zhivago: bike: On what grounds?
2015-11-02T04:31:03Z Bike: rice's theorem
2015-11-02T04:31:59Z jason_m quit (Ping timeout: 264 seconds)
2015-11-02T04:32:30Z Hogget: Let's say register A=1001, and register B=1010 . . . show me how a function "just is" between them.
2015-11-02T04:32:48Z Zhivago: bike: That's not true for particular functions and particular algorithms.
2015-11-02T04:33:18Z resttime: Am I missing some kind of semantic? Couldn't I have C "functions" compiled as a library? Wouldn't Haskell "functions" be the same then?
2015-11-02T04:33:54Z Bike: being in a library doesn't make you non procedural
2015-11-02T04:34:58Z resttime: The "over time" aspect is removed like Haskell function definitions at that point wouldn't it?
2015-11-02T04:34:59Z Hogget: it's what we do with computers . . . procedures.
2015-11-02T04:35:19Z Bike: i didn't really get the whole partial function algorithm procedure mumbo-jumbo before reading a nice book on it, or at least the review in An Introduction to Kolmogorov Complexity and Its Applications, so if you're interested i'd suggest reading such a book
2015-11-02T04:35:49Z Zhivago: resttime: You can have a procedure and a function which are equivalent.
2015-11-02T04:36:43Z resttime: Doesn't that literally mean they are the same thing?
2015-11-02T04:36:43Z pillton: You can have many procedures and a single function that are equivalent.
2015-11-02T04:36:45Z ack006 joined #lisp
2015-11-02T04:37:10Z Bike: there are other equivalence predicates which in respect to they are not equivalent
2015-11-02T04:37:55Z Zhivago: resttime: Only in their application.
2015-11-02T04:38:16Z Zhivago: resttime: They will differ with respect to decomposibility and so on.
2015-11-02T04:39:07Z whiteline quit (Ping timeout: 252 seconds)
2015-11-02T04:40:02Z yggds left #lisp
2015-11-02T04:41:34Z meiji11 joined #lisp
2015-11-02T04:42:23Z phf: so cffi docs say that "To extend the CFFI type system by performing custom translations, this method [translate-from-foreign] may be specialized by EQL-specializing type-name on a symbol naming a foreign type defined with defctype." but it looks like even with the specializer defined, when doing defcfun, base-type is used in macro expansion, so the specializer is never used
2015-11-02T04:42:53Z resttime: Hmmm... would it be related like how C "functions" aren't able to be passed around like in Haskell and Lisp?
2015-11-02T04:43:28Z Bike: not related
2015-11-02T04:43:44Z Bike: especially since you can pass around c functions
2015-11-02T04:44:17Z Zhivago: Well, pointers to them, anyhow.
2015-11-02T04:44:53Z resttime: Zhivago: Can you explain to me more about this decomposibility?
2015-11-02T04:45:46Z Zhivago: resttime: Think about what functions and procedures are composed from. Now reverse the process.
2015-11-02T04:50:58Z resttime: Hmmmm, so the difference in C and Haskell how you're able to call them?
2015-11-02T04:51:30Z resttime: All "functions" in C end up being a procedure that is
2015-11-02T04:51:44Z samssammerz: Zhivago, I'm not clear what you are saying either. Are you  saying that because procedures are a sequence of operations over time that *when* they are executed matters, whereas for functions (which always map the same input to the same output), time is irrelevant?
2015-11-02T04:52:27Z Bike: it's comparing apples and oranges, that's all
2015-11-02T04:52:36Z Bike: a procedure is a sequence of operations, a function is a map from inputs to outputs
2015-11-02T04:52:42Z Bike: no use overthinking it
2015-11-02T04:53:06Z resttime: In Haskell because you're able to call the "function" at any time it is a function
2015-11-02T04:53:21Z jleija quit (Quit: leaving)
2015-11-02T04:53:34Z Zhivago: Assuming that the procedure implements the function, then calling them should be equivalent.
2015-11-02T04:53:37Z defaultxr quit (Quit: gnight)
2015-11-02T04:53:50Z Zhivago: But the procedure is composed from smaller procedures, and the function is composed from smaller functions.
2015-11-02T04:53:55Z Bike: sometimes there are procedures that start with one set of data and end with another set, and these sets correspond to the input/output of a function, so we say the procedure implements the function because talking for long periods of time dries out your throat
2015-11-02T04:54:05Z Zhivago: There is no equivalence expected between those sub-procedure and sub-functions.
2015-11-02T04:55:08Z ajf- quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-02T04:58:56Z resttime: I guess the problem I have here is that I am unable to see how that invalidates plus-one, a C "function", from being a function
2015-11-02T04:59:48Z Zhivago: resttime: That it contains sequence points.
2015-11-02T05:03:53Z resttime: So plus-one acts as a function but implemented as a procedure?
2015-11-02T05:04:14Z theBlackDragon quit (Ping timeout: 268 seconds)
2015-11-02T05:07:50Z resttime: It's just return a + 1;
2015-11-02T05:08:03Z resttime: plusOne :: Integer -> Integer
2015-11-02T05:08:13Z resttime: plusOne a = a + 1
2015-11-02T05:08:13Z raphaelss quit (Remote host closed the connection)
2015-11-02T05:08:55Z resttime: int plusOne (int a) { return a + 1; }
2015-11-02T05:11:07Z Zhivago: plusOne(1) contains two sequence points one after the evaluation of the argument and before the call, and another after the addition and before the return.
2015-11-02T05:11:33Z emacsomancer0 quit (Ping timeout: 250 seconds)
2015-11-02T05:12:33Z leafybasil joined #lisp
2015-11-02T05:13:22Z emacsomancer left #lisp
2015-11-02T05:16:16Z resttime: plusOne a = let b = a
2015-11-02T05:16:23Z resttime:             in a + 1
2015-11-02T05:16:47Z resttime: errr
2015-11-02T05:16:52Z resttime:            b + 1
2015-11-02T05:17:37Z leafybasil quit (Ping timeout: 252 seconds)
2015-11-02T05:18:46Z resttime: Ah wait, that's inside the function
2015-11-02T05:18:58Z resttime: Hmmmm
2015-11-02T05:19:32Z Harag joined #lisp
2015-11-02T05:19:45Z resttime: Okay I think I get it, there's a casting of the argument for the C function
2015-11-02T05:20:03Z huza joined #lisp
2015-11-02T05:20:56Z MikeSeth joined #lisp
2015-11-02T05:21:25Z MikeSeth: is there any relationship between cl-sdl2 and lispbuildersdl?
2015-11-02T05:21:44Z tmtwd quit (Remote host closed the connection)
2015-11-02T05:22:32Z resttime: MikeSeth: None that I know of other than SDL2 and SDL1.2
2015-11-02T05:23:18Z tmtwd joined #lisp
2015-11-02T05:23:21Z MikeSeth: thanks
2015-11-02T05:25:18Z johann_ joined #lisp
2015-11-02T05:28:29Z theBlackDragon joined #lisp
2015-11-02T05:30:08Z johann_ quit (Ping timeout: 268 seconds)
2015-11-02T05:32:12Z erjoalgo quit (Ping timeout: 255 seconds)
2015-11-02T05:32:30Z phf: hmm, cffi is ... odd.
2015-11-02T05:32:54Z resttime: Zhivago: Hmmm, I guess the difference is still a bit fuzzy to me but I'll update my mental model accordingly and read about sequence points, I did not know those were an actual "thing"
2015-11-02T05:33:03Z resttime: Thanks
2015-11-02T05:34:54Z Harag quit (Ping timeout: 255 seconds)
2015-11-02T05:35:18Z phf: there's generics based runtime conversion, but you can't use it with defctype's (though docs insist in one place that you can), instead defctype comes with a totally left field :wrapper :from-c :to-c extension, that ultimately relies on the generics based mechanism.
2015-11-02T05:43:08Z vlatkoB joined #lisp
2015-11-02T05:45:12Z Zhivago: resttime: You're welcome.
2015-11-02T05:46:26Z huza quit (Quit: WeeChat 0.3.8)
2015-11-02T05:49:45Z clop quit (Ping timeout: 255 seconds)
2015-11-02T05:51:34Z Harag joined #lisp
2015-11-02T05:52:37Z clop joined #lisp
2015-11-02T05:52:57Z CharlesN quit (Ping timeout: 268 seconds)
2015-11-02T05:56:40Z resttime: phf: Yeah, I remember my XP with CFFI was I had to use DEFINE-FOREIGN-TYPE to emulate the casting that C does automatically
2015-11-02T05:57:44Z resttime: So like a C function was expecting 3 floats so I made a foreign type C-FLOAT which when translating would cast anything like an integer to float before passing it.
2015-11-02T05:58:08Z Draz quit (Quit: Leaving)
2015-11-02T05:58:52Z OrangeShark quit (Quit: Leaving)
2015-11-02T05:59:30Z schaueho quit (Ping timeout: 240 seconds)
2015-11-02T06:03:11Z phf: in general, that's a useful feature. but the way it works has changed breaking old code and the replacement is inadequate/requires patching a lot of code
2015-11-02T06:03:56Z phf: sop in programming, but lisp seemed to be immune for the longest time
2015-11-02T06:05:14Z phf: my personal pet peve is the local-time -> timestamp rename, what a utterly gratuitous way to break legacy code for minor nomenclature reasons
2015-11-02T06:07:16Z znpy joined #lisp
2015-11-02T06:08:30Z malbertife joined #lisp
2015-11-02T06:09:06Z meiji11 quit (Ping timeout: 255 seconds)
2015-11-02T06:16:12Z badkins joined #lisp
2015-11-02T06:21:11Z badkins quit (Ping timeout: 264 seconds)
2015-11-02T06:22:05Z snv quit (Read error: Connection reset by peer)
2015-11-02T06:22:07Z snv1 joined #lisp
2015-11-02T06:23:24Z ramky joined #lisp
2015-11-02T06:35:08Z mac_ified quit
2015-11-02T06:35:39Z mrSpec joined #lisp
2015-11-02T06:37:00Z pjb: Hogget: you need to read the chapter 7 of r5rs.
2015-11-02T06:37:35Z Hogget: pjb: cool.  will do.
2015-11-02T06:38:05Z pjb: Hogget: any program is a mathematical structure.  It may look different from a mathematical function, but since you can use lambda calculus as the axiomatic basis of all mathematics, it is "trivially" a mathematical function.
2015-11-02T06:38:12Z pjb: Even if it's not an algorithm!
2015-11-02T06:38:48Z znpy quit (Ping timeout: 255 seconds)
2015-11-02T06:38:51Z CEnnis91 quit (Quit: Connection closed for inactivity)
2015-11-02T06:39:01Z pjb: But of course, this is like saying you're a probability wave.
2015-11-02T06:39:58Z White_Flame: sequence also interplays with dependency, which can all be parameterized
2015-11-02T06:41:19Z White_Flame: and things like abstract interpretation can do interesting things to blur the boundaries between procedure and function
2015-11-02T06:41:26Z pjb: Hogget: computers themselves can be represented as mathematical functions, so…
2015-11-02T06:42:06Z pt1 joined #lisp
2015-11-02T06:43:30Z Hogget: i suppose any calculus function is a procedure
2015-11-02T06:44:18Z Zhivago: No. It's a function. But there are procedures which can be used to approximate their integrals.
2015-11-02T06:44:38Z mea-culpa quit (Remote host closed the connection)
2015-11-02T06:46:06Z FreeBirdLjj quit (Ping timeout: 240 seconds)
2015-11-02T06:46:20Z schaueho joined #lisp
2015-11-02T06:46:52Z FreeBirdLjj joined #lisp
2015-11-02T06:48:13Z johann_ joined #lisp
2015-11-02T06:48:30Z Hogget: hmm . . .
2015-11-02T06:48:49Z pt1 quit (Remote host closed the connection)
2015-11-02T06:49:37Z pjb: Hogget: how do you implement mutation in Haskell, which is a purely functional language, that is, basically where you have mathematical functions?
2015-11-02T06:50:28Z pjb: Hogget: you use a monad.
2015-11-02T06:50:34Z pjb: Hogget: Any procedure which has side effect is equivalent to a mathematical function with a monad.
2015-11-02T06:51:25Z oleo__ quit (Quit: Verlassend)
2015-11-02T06:51:38Z pjb: Is therefore trivial to demonstrate that the whole computer (with the associated parts of the universe the computer affects by side effect) can be represented as a mathematical pure function.
2015-11-02T06:52:12Z pjb: Hogget: if you want, you can take the problem from the other side: the whole universe is described by quantum mechanics mathematical functions.  So there.
2015-11-02T06:52:19Z White_Flame: one could consider the expressions passed to a monad as a procedure
2015-11-02T06:52:25Z White_Flame: (if I understand monads correctly)
2015-11-02T06:52:36Z pjb: Yes, of course.
2015-11-02T06:57:43Z schaueho quit (Ping timeout: 252 seconds)
2015-11-02T07:03:55Z aap_ is now known as aap
2015-11-02T07:05:58Z mbuf joined #lisp
2015-11-02T07:07:34Z zacharias_ quit (Ping timeout: 268 seconds)
2015-11-02T07:09:05Z solyd joined #lisp
2015-11-02T07:09:48Z varjag joined #lisp
2015-11-02T07:15:17Z Mon_Ouie quit (Ping timeout: 265 seconds)
2015-11-02T07:29:30Z shookees quit (Ping timeout: 260 seconds)
2015-11-02T07:32:52Z samssammerz: pjb, Can you point me to a proof that the whole universe can be modeled using quantum mechanics?
2015-11-02T07:33:31Z Zhivago: pjb and the factual world have a tenuous link.
2015-11-02T07:35:13Z jackc- quit (Read error: Connection reset by peer)
2015-11-02T07:35:21Z jackc- joined #lisp
2015-11-02T07:35:49Z flambard joined #lisp
2015-11-02T07:36:36Z killmaster quit (Ping timeout: 250 seconds)
2015-11-02T07:37:02Z stux|RC-only quit (Ping timeout: 250 seconds)
2015-11-02T07:38:01Z killmaster joined #lisp
2015-11-02T07:38:24Z stux|RC-only joined #lisp
2015-11-02T07:40:31Z sdothum quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-11-02T07:42:15Z shookees joined #lisp
2015-11-02T07:42:24Z cadadar_ joined #lisp
2015-11-02T07:43:02Z HDurer quit (Ping timeout: 260 seconds)
2015-11-02T07:43:06Z pjb: samssammerz: There's no proof to be understood. Ask a physicist.
2015-11-02T07:43:36Z pt1 joined #lisp
2015-11-02T07:43:40Z malbertife quit (Ping timeout: 246 seconds)
2015-11-02T07:43:59Z tmtwd quit (Ping timeout: 264 seconds)
2015-11-02T07:44:30Z earl-ducaine quit (Ping timeout: 255 seconds)
2015-11-02T07:44:52Z Shinmera joined #lisp
2015-11-02T07:45:28Z zadock joined #lisp
2015-11-02T07:47:07Z samssammerz: So I should just ask a physicist to say it to me, and then accept it on faith?
2015-11-02T07:47:48Z pjb: Yes.
2015-11-02T07:47:53Z pjb: That's the exact word.
2015-11-02T07:48:17Z samssammerz: Kewl!
2015-11-02T07:49:54Z Zhivago: And if there were a reconciliation of quantum mechanics and relativity, then they might manage it.
2015-11-02T07:50:03Z Quadrescence quit (Quit: This computer has gone to sleep)
2015-11-02T07:51:21Z solyd quit (Ping timeout: 268 seconds)
2015-11-02T07:53:34Z HDurer joined #lisp
2015-11-02T07:55:13Z ASau quit (Ping timeout: 256 seconds)
2015-11-02T07:56:32Z kushal joined #lisp
2015-11-02T07:57:03Z resttime quit (Quit: Bye bye!)
2015-11-02T07:58:15Z ASau joined #lisp
2015-11-02T08:01:25Z kushal quit (Ping timeout: 250 seconds)
2015-11-02T08:02:03Z Beetny joined #lisp
2015-11-02T08:13:17Z mishoo_ joined #lisp
2015-11-02T08:14:28Z earl-ducaine joined #lisp
2015-11-02T08:16:03Z _sjs joined #lisp
2015-11-02T08:16:39Z _cosmonaut_ joined #lisp
2015-11-02T08:16:50Z _cosmonaut_ quit (Remote host closed the connection)
2015-11-02T08:17:03Z badkins joined #lisp
2015-11-02T08:17:29Z angavrilov joined #lisp
2015-11-02T08:17:37Z _cosmonaut_ joined #lisp
2015-11-02T08:18:17Z kushal joined #lisp
2015-11-02T08:19:35Z Hogget quit (Quit: -f)
2015-11-02T08:21:10Z badkins quit (Ping timeout: 240 seconds)
2015-11-02T08:23:13Z quazimod2 joined #lisp
2015-11-02T08:23:17Z quazimod3 joined #lisp
2015-11-02T08:24:26Z zacharias_ joined #lisp
2015-11-02T08:24:51Z mvilleneuve joined #lisp
2015-11-02T08:25:15Z rtoym quit (Ping timeout: 256 seconds)
2015-11-02T08:25:24Z rtoym joined #lisp
2015-11-02T08:32:03Z Cymew joined #lisp
2015-11-02T08:33:32Z balle quit (Remote host closed the connection)
2015-11-02T08:35:55Z gingerale joined #lisp
2015-11-02T08:37:50Z faalentijn joined #lisp
2015-11-02T08:39:24Z aap quit (Ping timeout: 255 seconds)
2015-11-02T08:42:16Z zacharias_ is now known as zacharias
2015-11-02T08:43:54Z aap joined #lisp
2015-11-02T08:45:08Z ack006 quit (Quit: Leaving)
2015-11-02T08:46:39Z Fare quit (Ping timeout: 240 seconds)
2015-11-02T08:51:05Z balle joined #lisp
2015-11-02T08:58:11Z Harag quit (Ping timeout: 250 seconds)
2015-11-02T09:01:36Z nxtr_ joined #lisp
2015-11-02T09:01:37Z quazimod2 quit (Ping timeout: 265 seconds)
2015-11-02T09:02:06Z quazimod3 quit (Ping timeout: 265 seconds)
2015-11-02T09:02:10Z quazimod1 quit (Ping timeout: 240 seconds)
2015-11-02T09:02:21Z quazimodo quit (Ping timeout: 255 seconds)
2015-11-02T09:04:21Z ASau quit (Ping timeout: 256 seconds)
2015-11-02T09:05:31Z nxtr_ quit (Remote host closed the connection)
2015-11-02T09:06:26Z Guest14 joined #lisp
2015-11-02T09:07:57Z hydan quit (Remote host closed the connection)
2015-11-02T09:14:06Z faalentijn quit (Ping timeout: 250 seconds)
2015-11-02T09:15:32Z _cosmonaut_ quit (Remote host closed the connection)
2015-11-02T09:16:24Z _cosmonaut_ joined #lisp
2015-11-02T09:22:59Z _sjs quit (Ping timeout: 264 seconds)
2015-11-02T09:23:08Z TMM joined #lisp
2015-11-02T09:23:31Z remi`bd joined #lisp
2015-11-02T09:23:34Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-02T09:25:43Z attila_lendvai joined #lisp
2015-11-02T09:25:47Z mishoo_ quit (Read error: Connection reset by peer)
2015-11-02T09:31:17Z Guest14 joined #lisp
2015-11-02T09:35:26Z namespace: Sourceforce wins some serious points. Instead of making their site serve https when you explicitly put that at the front of the url, they just redirect you to their http site.
2015-11-02T09:35:29Z namespace claps
2015-11-02T09:36:04Z dkcl quit (Remote host closed the connection)
2015-11-02T09:37:59Z kushal quit (Quit: Leaving)
2015-11-02T09:39:26Z mishoo_ joined #lisp
2015-11-02T09:39:52Z harish_ quit (Ping timeout: 246 seconds)
2015-11-02T09:41:57Z stepnem joined #lisp
2015-11-02T09:44:35Z earl-ducaine quit (Ping timeout: 264 seconds)
2015-11-02T09:55:16Z josteink quit (Ping timeout: 265 seconds)
2015-11-02T09:56:13Z faalentijn joined #lisp
2015-11-02T09:56:44Z josteink joined #lisp
2015-11-02T09:57:26Z eazar001 quit (Ping timeout: 250 seconds)
2015-11-02T09:57:46Z shookees quit (Ping timeout: 268 seconds)
2015-11-02T09:59:05Z whiteline joined #lisp
2015-11-02T10:04:36Z shookees joined #lisp
2015-11-02T10:05:01Z setheus quit (Ping timeout: 244 seconds)
2015-11-02T10:06:48Z setheus joined #lisp
2015-11-02T10:11:14Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-02T10:11:46Z mishoo_ quit (Ping timeout: 260 seconds)
2015-11-02T10:13:00Z znpy joined #lisp
2015-11-02T10:13:25Z gaya- joined #lisp
2015-11-02T10:13:41Z FreeBird_ joined #lisp
2015-11-02T10:17:23Z FreeBirdLjj quit (Ping timeout: 260 seconds)
2015-11-02T10:17:27Z tralala joined #lisp
2015-11-02T10:17:55Z FreeBird_ quit (Ping timeout: 250 seconds)
2015-11-02T10:17:58Z badkins joined #lisp
2015-11-02T10:18:41Z EvW joined #lisp
2015-11-02T10:19:32Z kushal joined #lisp
2015-11-02T10:20:25Z leafybasil joined #lisp
2015-11-02T10:20:26Z leafybasil quit (Remote host closed the connection)
2015-11-02T10:20:52Z leafybasil joined #lisp
2015-11-02T10:20:54Z freehck joined #lisp
2015-11-02T10:22:35Z badkins quit (Ping timeout: 244 seconds)
2015-11-02T10:33:20Z Davidbrcz joined #lisp
2015-11-02T10:34:36Z znpy quit (Ping timeout: 255 seconds)
2015-11-02T10:36:14Z rootwang joined #lisp
2015-11-02T10:37:22Z wtbrk joined #lisp
2015-11-02T10:42:32Z Davidbrcz quit (Quit: Leaving)
2015-11-02T10:42:51Z Davidbrcz joined #lisp
2015-11-02T10:43:37Z quasus joined #lisp
2015-11-02T10:43:43Z znpy joined #lisp
2015-11-02T10:44:34Z BitPuffin|osx quit (Ping timeout: 260 seconds)
2015-11-02T10:46:37Z ZabaQ joined #lisp
2015-11-02T10:58:40Z dkcl joined #lisp
2015-11-02T11:00:39Z Posterdati: hi
2015-11-02T11:01:32Z mprelude quit (Quit: WeeChat 1.3)
2015-11-02T11:01:33Z Posterdati: I need to export a function "export" from a package, but I get "Attempt to redefine function EXPORT in locked package."
2015-11-02T11:01:37Z leafybas_ joined #lisp
2015-11-02T11:01:50Z grouzen joined #lisp
2015-11-02T11:01:54Z Shinmera: Shadow it.
2015-11-02T11:02:00Z Posterdati: how?
2015-11-02T11:02:02Z Shinmera: EXPORT is a CL function.
2015-11-02T11:02:24Z Shinmera: (defpackage ... (:shadow #:export) ..)
2015-11-02T11:03:36Z Posterdati: ok thanks
2015-11-02T11:03:49Z Posterdati: I could access it as: gpio:export
2015-11-02T11:05:11Z larsen joined #lisp
2015-11-02T11:05:36Z leafybasil quit (Ping timeout: 268 seconds)
2015-11-02T11:06:13Z mprelude joined #lisp
2015-11-02T11:06:23Z Posterdati: (defpackage #:gpio
2015-11-02T11:06:23Z Posterdati:   (:use #:cl)
2015-11-02T11:06:23Z Posterdati:   (:shadow #:export)
2015-11-02T11:06:23Z Posterdati:   (:export #:gpio-device
2015-11-02T11:06:23Z Posterdati:        #:file-pathname-from-number
2015-11-02T11:06:23Z Posterdati:        #:unexport
2015-11-02T11:06:24Z Posterdati:        #:exported-p))
2015-11-02T11:06:29Z jtza8 joined #lisp
2015-11-02T11:06:42Z Posterdati: Shinmera: not working
2015-11-02T11:06:45Z grouzen quit (Ping timeout: 256 seconds)
2015-11-02T11:06:54Z Shinmera: You still need to export it. And don't paste in here. Ever.
2015-11-02T11:07:31Z Posterdati: ok, working!
2015-11-02T11:07:33Z Posterdati: sorry
2015-11-02T11:08:41Z jasom quit (Ping timeout: 268 seconds)
2015-11-02T11:10:27Z pjb: Posterdati: (defpackage "P" (:use "CL" "GPIO") (:shadowing-import-from "GPIO" "EXPORT)) (in-package "P") (assert (eq 'export 'gpio:export))
2015-11-02T11:12:12Z hydan joined #lisp
2015-11-02T11:12:26Z jasom joined #lisp
2015-11-02T11:13:29Z Posterdati: pjb: thanks
2015-11-02T11:15:01Z JammyHammy joined #lisp
2015-11-02T11:17:12Z troydm joined #lisp
2015-11-02T11:18:54Z CharlesN joined #lisp
2015-11-02T11:25:33Z Karl_Dscc joined #lisp
2015-11-02T11:27:30Z faalentijn quit (Ping timeout: 260 seconds)
2015-11-02T11:29:39Z EvW quit (Ping timeout: 240 seconds)
2015-11-02T11:33:32Z radioninja joined #lisp
2015-11-02T11:33:44Z synchromesh joined #lisp
2015-11-02T11:33:57Z faalentijn joined #lisp
2015-11-02T11:34:30Z rootwang quit (Ping timeout: 250 seconds)
2015-11-02T11:34:33Z grouzen joined #lisp
2015-11-02T11:35:23Z mishoo_ joined #lisp
2015-11-02T11:37:27Z leafybas_ quit
2015-11-02T11:37:41Z leafybasil joined #lisp
2015-11-02T11:39:06Z rtra joined #lisp
2015-11-02T11:42:05Z mishoo_ quit (Read error: No route to host)
2015-11-02T11:42:30Z EvW joined #lisp
2015-11-02T11:43:54Z tsoutseki joined #lisp
2015-11-02T11:54:45Z phoe_krk: pjb: should nicknaming a package to itself trigger an error, warning, or go silently?
2015-11-02T11:55:22Z Shinmera: clhs make-package
2015-11-02T11:55:22Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/f_mk_pkg.htm
2015-11-02T11:55:24Z Shinmera: "A correctable error is signaled if the package-name or any of the nicknames is already the name or nickname of an existing package."
2015-11-02T11:55:48Z Shinmera: Though it is questionable whether that applies to nicknames being the same as the package name.
2015-11-02T11:56:11Z phoe_krk: Hence I ask. Technically, the name is already taken: it's the name of an existing package.
2015-11-02T11:56:22Z phoe_krk: Just like nicknaming "usocket" to "usocket"; "usocket" is taken, hence, error.
2015-11-02T11:56:23Z Shinmera: clhs rename-package
2015-11-02T11:56:24Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/f_rn_pkg.htm
2015-11-02T11:56:25Z Shinmera: "The consequences are undefined if new-name or any new-nickname conflicts with any existing package names."
2015-11-02T11:56:34Z phoe_krk: I'll just err then.
2015-11-02T11:57:58Z danlentz_ joined #lisp
2015-11-02T11:58:46Z fridim_ joined #lisp
2015-11-02T12:00:14Z grouzen quit (Ping timeout: 244 seconds)
2015-11-02T12:01:46Z zadock quit (Quit: Leaving)
2015-11-02T12:03:34Z leafybasil quit (Remote host closed the connection)
2015-11-02T12:03:36Z ryu0: I have a question regarding symbol names. Are they case insensitive? the set function for example works regardless of case.
2015-11-02T12:04:00Z leafybasil joined #lisp
2015-11-02T12:05:28Z Beetny quit (Ping timeout: 272 seconds)
2015-11-02T12:05:29Z Shinmera: Symbol names are case sensitive
2015-11-02T12:05:42Z jackdaniel: ryu0: by default if you write 'bah it's upcased
2015-11-02T12:05:53Z ryu0: Oh, it is?
2015-11-02T12:05:53Z Shinmera: The default readtable case is set to :upcase though, meaning usually your symbols will be automatically turned to uppercase and thus appear "case insensitive"
2015-11-02T12:05:53Z grouzen joined #lisp
2015-11-02T12:05:55Z jackdaniel: but you can do something like '|abc|
2015-11-02T12:05:58Z jackdaniel: then you have the lowercase
2015-11-02T12:06:03Z Shinmera: (readtable-case *readtable*)
2015-11-02T12:06:10Z ryu0: the behavior made me think they were case insensitive.
2015-11-02T12:06:39Z ryu0: huh.
2015-11-02T12:06:41Z jackdaniel: no, symbols have all properties of the strings (plus some more, like eq)
2015-11-02T12:07:13Z jackdaniel: and it's a loose meaning of the word "property", I'm not saying you should treat them as strings
2015-11-02T12:07:17Z Shinmera: ? Symbols don't have properties of strings. Symbols haev a name, which is a string.
2015-11-02T12:07:18Z preacherAKAnd joined #lisp
2015-11-02T12:07:21Z Shinmera: *have
2015-11-02T12:07:40Z ryu0: my book hasn't yet covered CL strings.
2015-11-02T12:08:10Z leafybasil quit (Ping timeout: 240 seconds)
2015-11-02T12:08:18Z ryu0: hm.
2015-11-02T12:08:39Z ryu0: i wonder what ansi common lisp provides... hopefully as much as POSIX does for C...
2015-11-02T12:08:48Z ryu0: or more.
2015-11-02T12:09:28Z leafybasil joined #lisp
2015-11-02T12:10:09Z sjl joined #lisp
2015-11-02T12:10:43Z ryu0: my book discussed ratios as a number type. are they same as math fractions?
2015-11-02T12:11:01Z Shinmera: clhs ratio
2015-11-02T12:11:01Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/t_ratio.htm
2015-11-02T12:11:01Z ryu0: *the same*
2015-11-02T12:11:23Z freehck` joined #lisp
2015-11-02T12:11:33Z ryu0: sounds like a fraction reduced to lowest terms.
2015-11-02T12:12:08Z ryu0: hm.
2015-11-02T12:12:10Z freehck quit (Ping timeout: 240 seconds)
2015-11-02T12:12:18Z grouzen quit (Ping timeout: 260 seconds)
2015-11-02T12:12:26Z ryu0: interesting.
2015-11-02T12:13:04Z ryu0: i think i'm going to like arithmetic that isn't limited to fixed size integers.
2015-11-02T12:13:09Z ryu0: :D
2015-11-02T12:13:13Z Shinmera: It is very comfortable.
2015-11-02T12:13:34Z jackdaniel: remember though that it might be less efficent
2015-11-02T12:13:40Z jackdaniel: if you use bignums
2015-11-02T12:13:42Z ryu0: i know.
2015-11-02T12:13:49Z Shinmera: It also means things like the airplane software bug this year that caused a complete system shutdown because of an integer timer overflow can't happen unless you really try to.
2015-11-02T12:13:51Z ryu0: but it's nice to not just have it silently overflow.
2015-11-02T12:13:59Z ryu0: or rather wraparound.
2015-11-02T12:14:08Z jackdaniel: yeah, it's a feature, no doubt :-)
2015-11-02T12:14:11Z ryu0: that seems to rarely be what you want.
2015-11-02T12:14:33Z Shinmera: Modular arithmetic is useful, but you rarely want the modulus to be exactly a machine word big.
2015-11-02T12:15:12Z ryu0: and, i still have the option of trying to optimize in CL or using C if i must.
2015-11-02T12:16:10Z Shinmera: You might get wraparound behaviour if you do something like (declare (fixnum a) (optimize speed (safety 0) (debug 0)))
2015-11-02T12:16:23Z Shinmera: But, refer to your implementation at hand for such behaviour.
2015-11-02T12:16:35Z ryu0: true. i don't intend to optimize without care. :P
2015-11-02T12:16:41Z Shinmera: Good!
2015-11-02T12:16:50Z jackdaniel: btw if you want bignums in C check the gmp library
2015-11-02T12:19:24Z _sjs joined #lisp
2015-11-02T12:19:32Z ryu0: if my book is correct, CL doesn't perform integer division (or whatever the one that returns a remainder as well is called) when division is used? it returns an integer, ratio, or floating point depending on the situation?
2015-11-02T12:20:04Z Shinmera: It performs arithmetically correct results, yes.
2015-11-02T12:20:19Z ryu0: ah. i'll need to remember that when using division.
2015-11-02T12:20:20Z Shinmera: *it returns
2015-11-02T12:20:28Z ryu0: used to C division when i work with integers.
2015-11-02T12:20:47Z Shinmera: I don't recall when I ever wanted the C division behaviour to be honest.
2015-11-02T12:21:17Z ryu0: yea, just stating i'll need to consider it if i translate formulas.
2015-11-02T12:21:20Z ryu0: from C.
2015-11-02T12:21:41Z Shinmera: Sure. Usually the better approach is to refer to the mathematical formula directly, if you have that.
2015-11-02T12:21:42Z shookees quit (Ping timeout: 255 seconds)
2015-11-02T12:22:01Z jackdaniel: ryu0: if you want (/ 5 4) to produce "1" then you may just (truncate *) it
2015-11-02T12:22:22Z ryu0: yea, i figured there would be a function to truncate the part "right of the decimal".
2015-11-02T12:22:54Z Xach: or (truncate 5 4)
2015-11-02T12:23:26Z jackdaniel: there is also round
2015-11-02T12:23:30Z _sjs quit (Ping timeout: 240 seconds)
2015-11-02T12:23:31Z jackdaniel: for rounding (:
2015-11-02T12:23:44Z ryu0: i assume it also allows specifying decimal places?
2015-11-02T12:24:06Z jackdaniel: decimal places?
2015-11-02T12:24:13Z ryu0: round to tenths, etc?
2015-11-02T12:24:22Z jackdaniel: ah, I don't know to be honest
2015-11-02T12:24:26Z jackdaniel: I think not
2015-11-02T12:24:27Z ryu0: my math books sometimes calls it, round to x decimal places.
2015-11-02T12:24:41Z ryu0: tenths being the first.
2015-11-02T12:24:46Z jackdaniel: yep, it has divisor optional argument
2015-11-02T12:25:18Z jackdaniel: so (round 7 10) should return 1
2015-11-02T12:25:51Z ryu0: because 7 / 10 = 0.7 which rounds to 1?
2015-11-02T12:26:19Z jackdaniel: I suppose (I've just checked this on the repl, I think you should consult spec)
2015-11-02T12:26:21Z jackdaniel: spec round
2015-11-02T12:26:37Z CharlesN quit (Ping timeout: 250 seconds)
2015-11-02T12:26:56Z jackdaniel: "Returns the integer nearest to NUMBER/DIVISOR."
2015-11-02T12:27:34Z ryu0: is there a CL implementation that supports readline or similar?
2015-11-02T12:27:38Z samssammerz quit (Ping timeout: 272 seconds)
2015-11-02T12:27:39Z ryu0: :/
2015-11-02T12:27:51Z jackdaniel: there's clisp
2015-11-02T12:27:51Z Shinmera: clisp, if I remember correctly. Otherwise you can use rlwrap
2015-11-02T12:27:59Z jackdaniel: also I'm working on libedit support for ECL now
2015-11-02T12:28:01Z Shinmera: Or get full blown emacs+slime
2015-11-02T12:28:20Z ryu0: SBCL doesn't support command line editting of input. was just curious. it would make less tedious to use.
2015-11-02T12:28:36Z Shinmera: It doesn't get much love because most people use Emacs+Slime
2015-11-02T12:28:45Z ryu0: rlwrap?
2015-11-02T12:28:46Z ryu0: hm.
2015-11-02T12:28:52Z jackdaniel: ryu0: `rlwrap sbcl` should give you basic history
2015-11-02T12:29:01Z jackdaniel: and →↓→↑
2015-11-02T12:29:06Z mbuf quit (Quit: Ex-Chat)
2015-11-02T12:29:07Z jackdaniel: plus some shell shortcuts
2015-11-02T12:29:37Z ryu0: huh.
2015-11-02T12:30:16Z ryu0: this works fine. thanks.
2015-11-02T12:30:26Z ryu0: never heard of this program bere.
2015-11-02T12:30:29Z ryu0: before*
2015-11-02T12:30:59Z jackdaniel: rlwrap is just a wrapper around the readline
2015-11-02T12:31:05Z jackdaniel: standalone wrapper that is
2015-11-02T12:31:47Z ryu0: this is weird.
2015-11-02T12:31:56Z ryu0: (round 3 4)
2015-11-02T12:32:01Z ryu0: prints out 1 and -1?
2015-11-02T12:32:08Z jackdaniel: it's the second value
2015-11-02T12:32:11Z jackdaniel: don't worry about that
2015-11-02T12:32:14Z ryu0: 2nd value?
2015-11-02T12:32:16Z jackdaniel: try (+ (round 3 4) 1)
2015-11-02T12:32:25Z jackdaniel: CL supports multiple values returned by function
2015-11-02T12:32:31Z Shinmera: The second value is the remainder.
2015-11-02T12:32:35Z Shinmera: clhs round
2015-11-02T12:32:35Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/f_floorc.htm
2015-11-02T12:32:36Z ryu0: Oh.
2015-11-02T12:32:52Z jackdaniel: sometimes you want to return a few things from function. In C you modify arguments pointers or wrap a thing in a struct
2015-11-02T12:33:18Z ryu0: what kind of remainder is this? 3/4 has a remainder of 3 i thought?
2015-11-02T12:33:19Z jackdaniel: if you don't need the second value you can simply ignore it
2015-11-02T12:33:39Z jackdaniel: second value of round by definition is (- NUMBER (* first-value DIVISOR))
2015-11-02T12:34:25Z Zhivago: With CL you can pass in a value emitter to similar effect also
2015-11-02T12:34:45Z Zhivago: e.g., (foo (lambda (v) (setf result v)))
2015-11-02T12:34:47Z quazimodo joined #lisp
2015-11-02T12:34:48Z quazimod1 joined #lisp
2015-11-02T12:34:51Z quazimod2 joined #lisp
2015-11-02T12:34:55Z quazimod3 joined #lisp
2015-11-02T12:35:14Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-02T12:35:24Z ryu0: i'm baffled why (round 3 4) has a -1 for remainder.
2015-11-02T12:35:31Z Xof: because 3 rounds to 4
2015-11-02T12:36:02Z ryu0: ? this doesn't fit what i know of rounding.
2015-11-02T12:36:03Z Xof: if you want truncation, use truncate, not round
2015-11-02T12:36:11Z jackdaniel: ryu0: second value is a distance of a round
2015-11-02T12:36:16Z jackdaniel: 4-3 is 1
2015-11-02T12:36:28Z jackdaniel: and the direction (3<4, so it's -1)
2015-11-02T12:36:52Z ryu0: the sign indicates... "direction"?
2015-11-02T12:36:55Z jackdaniel: just ignore the second value unless you need it for something
2015-11-02T12:37:00Z jackdaniel: yeah, signum
2015-11-02T12:37:22Z ryu0: is this related to the number line then?
2015-11-02T12:37:45Z jackdaniel: sign indicates if you rounded up or down. second value is: (- NUMBER (* first-value DIVISOR))
2015-11-02T12:37:55Z Zhivago: Just remember that quotient*divisor+remainder=number
2015-11-02T12:37:58Z ryu0: hm.
2015-11-02T12:38:26Z Zhivago: And then solve for remainder.
2015-11-02T12:38:41Z ryu0: O_o
2015-11-02T12:38:46Z ryu0: okay this is odd.
2015-11-02T12:39:08Z ryu0: this is used a different kind of rounding. i was taught 5 or above is round up.
2015-11-02T12:39:16Z ryu0: (round 1 2) -> 0 1
2015-11-02T12:39:27Z ryu0: 1/2 = 0.5
2015-11-02T12:39:28Z jackdaniel: ryu0: it's to the nearest even number
2015-11-02T12:39:28Z Guest99686 is now known as micro_
2015-11-02T12:39:29Z axion: the correct way is to round half to even
2015-11-02T12:39:34Z jackdaniel: afair
2015-11-02T12:39:35Z axion: it prevents unbiased rounding
2015-11-02T12:39:36Z ryu0: Oh.
2015-11-02T12:39:48Z Yuuhi joined #lisp
2015-11-02T12:39:55Z axion: err biased
2015-11-02T12:39:59Z ryu0: that goes in the face of what i was taught about rounding.
2015-11-02T12:40:01Z Zhivago: quotient = 1, remainder = -1, number = 3, divisor = 4; 1 * 4 - 1 = 3.
2015-11-02T12:41:02Z badkins joined #lisp
2015-11-02T12:41:20Z s00pcan joined #lisp
2015-11-02T12:41:58Z ryu0: axion: therefore it half rounds up or down depending on which is even?
2015-11-02T12:42:04Z ryu0: s/it/
2015-11-02T12:42:07Z ryu0: s/it//
2015-11-02T12:42:25Z axion: 1.5 => 2, 2.5 => 2
2015-11-02T12:42:35Z ryu0: okay.
2015-11-02T12:43:07Z axion: if you're rounding .5 to up, you're favoring larger numbers
2015-11-02T12:43:11Z ryu0: let me guess. this is another means of rounding than what i learned?
2015-11-02T12:43:23Z ryu0: or?
2015-11-02T12:43:24Z Mon_Ouie joined #lisp
2015-11-02T12:43:42Z axion: some were taught .5 up in school, a lot were not though
2015-11-02T12:43:46Z jackdaniel: https://en.wikipedia.org/wiki/Rounding#Round_half_to_even
2015-11-02T12:44:49Z ryu0: oh, so that's why. every math book i've ever worked with rounded half up.
2015-11-02T12:45:01Z ryu0: i didn't know there were others.
2015-11-02T12:45:17Z ryu0: even my college level books wanted rounding done this way.
2015-11-02T12:45:26Z axion: a lot of languages do it this way, including python
2015-11-02T12:45:28Z Nikotiini joined #lisp
2015-11-02T12:45:34Z ryu0: round half to even?
2015-11-02T12:45:45Z axion: yes
2015-11-02T12:45:51Z axion: anyway, off to work. good luck
2015-11-02T12:45:52Z ryu0: how strange.
2015-11-02T12:46:04Z ryu0: thanks, i never noticed this before...
2015-11-02T12:46:26Z ryu0: huh.
2015-11-02T12:46:49Z Shinmera: What a world.
2015-11-02T12:46:56Z ryu0: very interesting. always thought there was only one way to round halfway.
2015-11-02T12:47:23Z Karl_Dscc quit (Remote host closed the connection)
2015-11-02T12:47:59Z mvilleneuve joined #lisp
2015-11-02T12:48:02Z ryu0: now i see one way programming differs from taught math. x_x
2015-11-02T12:48:07Z ryu0: haha.
2015-11-02T12:49:23Z Shinmera: Well, programming differs from math mostly in the sense that it's also engineering for a large part. Theory is nice, but practice usually complicates things a lot.
2015-11-02T12:49:24Z jackdaniel: I'd say - school math. It's often much closer to the taught math then the one people use everyday
2015-11-02T12:49:30Z Mon_Ouie quit (Ping timeout: 260 seconds)
2015-11-02T12:50:25Z rootwang joined #lisp
2015-11-02T12:50:33Z aeth: Well, "always round up" is easier to do on paper. A lot of techniques in school are just easier to do on paper.
2015-11-02T12:50:35Z Petit_Dejeuner` quit (Ping timeout: 264 seconds)
2015-11-02T12:51:07Z aeth: Not that much easier, but I guess even slightly easier wins out.
2015-11-02T12:53:20Z cosarara joined #lisp
2015-11-02T12:56:56Z BitPuffin joined #lisp
2015-11-02T12:59:31Z sjl quit (Ping timeout: 256 seconds)
2015-11-02T13:02:50Z sjl joined #lisp
2015-11-02T13:04:36Z jason_m joined #lisp
2015-11-02T13:04:38Z znpy quit (Ping timeout: 250 seconds)
2015-11-02T13:06:27Z mikaelj joined #lisp
2015-11-02T13:07:04Z EvW quit (Ping timeout: 246 seconds)
2015-11-02T13:09:15Z eudoxia joined #lisp
2015-11-02T13:09:39Z tmtwd joined #lisp
2015-11-02T13:11:49Z ryu0: Zhivago: why is the quotient of 3/4 in this case 1? because 3/4 rounds to 1?
2015-11-02T13:12:10Z ryu0: Zhivago: under what i understand of division, 0 would be the  quotient and the remainder would be 3.
2015-11-02T13:12:25Z ryu0: 0 * 4 + 3 = 3
2015-11-02T13:13:06Z ryu0: Zhivago: so why is your example different?
2015-11-02T13:13:44Z jackdaniel: ryu0: you round 3/4, so it's obviously rounding to 1
2015-11-02T13:13:49Z jackdaniel: rest just follows
2015-11-02T13:13:58Z ryu0: jackdaniel: so it adjusts the remainder to fit?
2015-11-02T13:14:12Z ryu0: hm.
2015-11-02T13:14:35Z ryu0: i'm still baffled.
2015-11-02T13:15:25Z ryu0: jackdaniel: is there some math explaination for this? this doesn't fit what i understand of remainder.
2015-11-02T13:15:25Z jackdaniel: I think that the book "ANSI Common Lisp" would fit best your way of thinking
2015-11-02T13:16:37Z ryu0: i'll ask in the math channel i guess.
2015-11-02T13:16:48Z kushal quit (Quit: Leaving)
2015-11-02T13:16:50Z jackdaniel: http://www.lispworks.com/documentation/HyperSpec/Body/f_floorc.htm
2015-11-02T13:17:14Z jackdaniel: here you have the CL specification description of the function - what it does
2015-11-02T13:17:54Z jackdaniel: reminder indicates how much and in what direction you have rounded
2015-11-02T13:19:30Z ryu0: O_o
2015-11-02T13:19:32Z ryu0: huh.
2015-11-02T13:19:54Z ryu0: jackdaniel: so in (round 7 13), -6 means...
2015-11-02T13:20:17Z ryu0: the '-' means it rounds towards the 13?
2015-11-02T13:20:32Z jackdaniel: yes
2015-11-02T13:20:39Z ryu0: or, rounds up?
2015-11-02T13:21:01Z ryu0: hm. let's try the reverse.
2015-11-02T13:21:18Z ryu0: -1...
2015-11-02T13:21:27Z ryu0: okay, so it's not distance.
2015-11-02T13:21:54Z Zhivago: ryu: Yes, 3/4 rounds to one.
2015-11-02T13:22:00Z jackdaniel: -6 here means, that 7 lacks 6 to 13
2015-11-02T13:22:11Z ryu0: but - appears to mean it had to round up to the larger integer.
2015-11-02T13:22:28Z jackdaniel: if you'd (round 19 13) you'd have 1 and 6
2015-11-02T13:22:56Z Zhivago: 7/13 rounds to 1. 7/13 - 13/13 = -6/13.
2015-11-02T13:23:06Z ryu0: ah, i'm seeing it now.
2015-11-02T13:23:09Z jackdaniel: \o/
2015-11-02T13:23:41Z ryu0: it rounds it up or down, then computes the remainder as if the rounded value was the quotient?
2015-11-02T13:23:49Z ryu0: hm.
2015-11-02T13:23:56Z synchromesh quit (Ping timeout: 244 seconds)
2015-11-02T13:24:03Z jackdaniel: if you want to truncate then use the function truncate
2015-11-02T13:24:29Z ryu0: 13/7 -> rounds to 2.
2015-11-02T13:24:35Z ryu0: 2 becomes the quotient.
2015-11-02T13:24:50Z ryu0: 2 * 7... hm
2015-11-02T13:25:20Z ryu0: moment.
2015-11-02T13:25:24Z Zhivago: (round (+ 7 6) 13) is 1, is another way to think of it.
2015-11-02T13:25:56Z jackdaniel: the second value is always: (- rounded-number (* rounding-result divisor))
2015-11-02T13:26:11Z Zhivago: It's just the equation I pasted a few hours ago.
2015-11-02T13:26:15Z jackdaniel: bah, s/rounded-number/number-before-rounding/
2015-11-02T13:26:25Z jackdaniel: oh, sorry then
2015-11-02T13:26:34Z ryu0: well, this seems a tad clearer...
2015-11-02T13:26:39Z ryu0: let's see.
2015-11-02T13:27:26Z ryu0: yea, that's it... or...
2015-11-02T13:27:46Z ryu0: yea... the division remainder formula.
2015-11-02T13:28:02Z ajf- joined #lisp
2015-11-02T13:28:02Z ryu0: just using different variables.
2015-11-02T13:28:38Z ryu0: jackdaniel: is that book you mentioned the one at gigamonkeys?
2015-11-02T13:28:48Z ajf- quit (Client Quit)
2015-11-02T13:29:01Z ryu0: oh, mnvm.
2015-11-02T13:29:11Z ryu0: http://www.paulgraham.com/acl.html?
2015-11-02T13:29:15Z jackdaniel: ryu0: no, its written by Paul Graham (it's not on the internet)
2015-11-02T13:29:23Z jackdaniel: yes, that's the one
2015-11-02T13:30:38Z tsoutseki quit (Read error: Connection reset by peer)
2015-11-02T13:31:10Z quasus quit (Ping timeout: 260 seconds)
2015-11-02T13:32:06Z sdothum joined #lisp
2015-11-02T13:34:02Z ryu0: jackdaniel: if you pass it instead as a single value, you get this formula? (- original-value (/ (* denominator rounded-value) denominator))
2015-11-02T13:34:05Z ryu0: ?
2015-11-02T13:34:13Z ryu0: (round 13/7)
2015-11-02T13:34:15Z ryu0: for example.
2015-11-02T13:34:34Z ryu0: it gives 2 and -1/7
2015-11-02T13:34:59Z ryu0: which  appears to be the difference of
2015-11-02T13:35:01Z jackdaniel: I don't understand the question. If you want to access both values you may want to use (multiple-value-bind (quotient reminder) (round 13/7) …)
2015-11-02T13:35:03Z ryu0: 13/7 and 14/7
2015-11-02T13:35:16Z ryu0: no, i meant in how the value of the remainder changes.
2015-11-02T13:35:23Z znpy joined #lisp
2015-11-02T13:35:25Z ryu0: from (round 13 7) to (round 13/7)
2015-11-02T13:35:43Z ryu0: the quotient remains the same.
2015-11-02T13:35:47Z jackdaniel: (round 13/7) rounds 13/7 to the integer
2015-11-02T13:36:06Z ryu0: doesn't the first form do that anyway?
2015-11-02T13:36:10Z jackdaniel: if you do (round 13 7) the divisor is 7, while when you do (round 13 7) the divisor is 1
2015-11-02T13:36:32Z jackdaniel: 13/7 is *one* argument, you put divisor as a second one
2015-11-02T13:36:40Z ryu0: oh
2015-11-02T13:37:12Z ryu0: so divisor is considered 1 when not specified?
2015-11-02T13:37:25Z jackdaniel: yes, it's it's default value
2015-11-02T13:38:08Z ryu0: hm.
2015-11-02T13:38:35Z ryu0 facepalms.
2015-11-02T13:38:41Z ryu0: it was simpler than my formula.
2015-11-02T13:38:43Z ryu0: XD
2015-11-02T13:39:07Z ryu0: the 14/7 comes from CL converting 2 to a compatible ratio for subtraction.
2015-11-02T13:39:11Z ryu0: ugh.
2015-11-02T13:39:13Z ryu0: lol
2015-11-02T13:42:20Z Ukari joined #lisp
2015-11-02T13:43:27Z CEnnis91 joined #lisp
2015-11-02T13:45:25Z tsoutseki joined #lisp
2015-11-02T13:48:31Z Karl_Dscc joined #lisp
2015-11-02T13:48:32Z Karl_Dscc quit (Remote host closed the connection)
2015-11-02T13:48:34Z ryu0: so, uh, may i ask when this remainder value is useful?
2015-11-02T13:49:29Z jason_m quit (Ping timeout: 252 seconds)
2015-11-02T13:49:53Z Davidbrcz quit (Quit: Leaving)
2015-11-02T13:49:56Z ryu0: jackdaniel: what is special about graham's book?
2015-11-02T13:49:58Z jackdaniel: ryu0: when you need it ^_^ hm, it might be useful if you want to sum how much you have rounded during the computation
2015-11-02T13:50:05Z jackdaniel: to detect data bias for instance
2015-11-02T13:50:10Z Davidbrcz joined #lisp
2015-11-02T13:50:13Z ryu0: oh, interesting.
2015-11-02T13:50:31Z ryu0: you see, i've rarely worked with non-integers directly in programming, so...
2015-11-02T13:50:43Z jackdaniel: nothing, it's just a good book about CL - it takes somewhat more analitic approach to the standard then PCL
2015-11-02T13:50:48Z ryu0: anyway.
2015-11-02T13:51:03Z jackdaniel: and has nice exercises
2015-11-02T13:51:16Z ryu0: that's probably why i wasn't aware of round half to even...
2015-11-02T13:51:38Z leafybasil quit (Remote host closed the connection)
2015-11-02T13:51:43Z ryu0: didn't use floating point in C for much.
2015-11-02T13:51:49Z ryu0 shrugs.
2015-11-02T13:51:54Z ryu0: I assume it works the same there.
2015-11-02T13:52:04Z leafybasil joined #lisp
2015-11-02T13:52:35Z Oladon quit (Read error: Connection reset by peer)
2015-11-02T13:52:42Z ryu0: ugh. yes, i think i definitely need to take calculus at some point.
2015-11-02T13:52:50Z ryu0: it would probably clear up a lot.
2015-11-02T13:54:45Z ryu0: jackdaniel: i'll keep it in mind. i think it was one of the books recommended by my gentle intro book.
2015-11-02T13:55:04Z ryu0: jackdaniel: for advanced reading.
2015-11-02T13:55:30Z s00pcan_ joined #lisp
2015-11-02T13:55:49Z ryu0: CL has blown my mind in a few cases. behavior i wasn't expecting and such. i guess that's what i get working from the low level for so long. :P
2015-11-02T13:57:14Z ghard joined #lisp
2015-11-02T13:57:23Z ryu0: multiple return values. huh.
2015-11-02T13:58:23Z ryu0: how is that implemented? tuples or something?
2015-11-02T13:58:37Z jackdaniel: depends on the implementation
2015-11-02T13:58:43Z ryu0: ah.
2015-11-02T13:58:59Z jackdaniel: ECL has a special table in the environment which holds the values (if there is more then one)
2015-11-02T13:59:04Z jackdaniel: don't know about the others
2015-11-02T13:59:25Z harish_ joined #lisp
2015-11-02T13:59:30Z ryu0: i remember reading that CL has the ability to save an image? what's that? is it like saving your program state to resume it later?
2015-11-02T14:00:39Z jackdaniel: dumping the image is an extension
2015-11-02T14:00:42Z jackdaniel: not part of the standard
2015-11-02T14:00:46Z jackdaniel: CCL and SBCL has that
2015-11-02T14:00:51Z ryu0: oh.
2015-11-02T14:00:53Z jackdaniel: (probably more)
2015-11-02T14:01:02Z jackdaniel: CLISP has that too
2015-11-02T14:01:09Z ryu0: but it's a fairly common feature?
2015-11-02T14:01:23Z ryu0: err extension.
2015-11-02T14:01:27Z Shinmera: Yes.
2015-11-02T14:01:40Z jackdaniel: yeah. But don't put it as part of your code, just use for conveniance
2015-11-02T14:01:46Z s00pcan_ quit (Ping timeout: 265 seconds)
2015-11-02T14:02:06Z Shinmera: Use it as part of your code if you're fine with having features that only work on some implementations.
2015-11-02T14:02:09Z ryu0: hm. alright. i was thinking it could be used to restore program state between reboots or such.
2015-11-02T14:02:21Z ryu0: assuming i understand what it does.
2015-11-02T14:02:41Z Shinmera: You can use it for that to a very limited extent.
2015-11-02T14:02:58Z ryu0: oh, some stuff isn't preserved?
2015-11-02T14:03:00Z Shinmera: As in, you can only have one thread running and no open file descriptors.
2015-11-02T14:03:20Z ryu0: yeouch. not even the standard ones?
2015-11-02T14:03:28Z Shinmera: Standard what?
2015-11-02T14:03:36Z ryu0: the ones defined in ANSI C.
2015-11-02T14:03:43Z Shinmera: What ones?
2015-11-02T14:03:46Z ryu0: stdin, stdout, stderr.
2015-11-02T14:03:57Z ryu0: or, 0, 1, 2 in unix.
2015-11-02T14:04:02Z Shinmera: Well you're gonna get new stdin stdout and stderr.
2015-11-02T14:04:11Z ryu0: true.
2015-11-02T14:04:19Z ryu0: won't be the same...
2015-11-02T14:04:19Z Shinmera: But usually you get those as streams, so the implementation can wrap them.
2015-11-02T14:04:29Z Shinmera: If you have direct access then no, it won't get restored, obviously.
2015-11-02T14:04:34Z ekinmur joined #lisp
2015-11-02T14:04:35Z ryu0: sounds like too much hassle.
2015-11-02T14:04:51Z Shinmera: Mostly you also just can't do it. How would you restore an open connection to a server?
2015-11-02T14:05:00Z ryu0: you wouldn't.
2015-11-02T14:05:13Z ryu0: it'd have to be reopened later...
2015-11-02T14:05:21Z Shinmera: Exactly. So the best way it so error so the user has to figure out the logic behind closing and reopening on image save/restore.
2015-11-02T14:05:27Z ryu0: it just sounded like an interesting feature for saving a MUD's game state.
2015-11-02T14:05:40Z ogamita quit (Ping timeout: 268 seconds)
2015-11-02T14:05:43Z Shinmera: For something as simple as that you can do it just fine.
2015-11-02T14:05:51Z jackdaniel: ryu0: if you keep state of a game in some structure you can simply serialize it (portably)
2015-11-02T14:06:00Z ryu0: true.
2015-11-02T14:06:07Z Shinmera: But yeah, usually serialising is the preferred option
2015-11-02T14:06:10Z quazimod1 quit (Ping timeout: 250 seconds)
2015-11-02T14:06:10Z quazimod2 quit (Ping timeout: 240 seconds)
2015-11-02T14:06:13Z quazimod3 quit (Ping timeout: 246 seconds)
2015-11-02T14:06:21Z quazimodo quit (Ping timeout: 252 seconds)
2015-11-02T14:06:23Z Shinmera: If you know the content can be trusted, a simple WRITE will do.
2015-11-02T14:06:44Z ryu0: i've wanted to design a new mud codebase, but not using existing ones. they're pretty much all C, and bleh.
2015-11-02T14:06:54Z Shinmera: (provided you have either no CLOS classes or proper methods to serialise them readably)
2015-11-02T14:06:57Z ryu0: i don't want to go hunting down memory errors and crap no one cared to fix.
2015-11-02T14:07:00Z jackdaniel: ryu0: my personal opinion goes like that: use it (image save/restore) for your workflow when convenient, don't make it part of your code for sake of portability (but I'm biased here obv)
2015-11-02T14:07:03Z Davidbrcz quit (Quit: Leaving)
2015-11-02T14:07:06Z TDT joined #lisp
2015-11-02T14:07:17Z Davidbrcz joined #lisp
2015-11-02T14:07:20Z Shinmera: jackdaniel: It makes sense to make it part of the code if you need to wrap deployment for example
2015-11-02T14:07:46Z Shinmera scurries off home, bbl
2015-11-02T14:08:02Z ryu0: jackdaniel: i assume OS APIs are available in some form in CL?
2015-11-02T14:08:08Z ryu0: POSIX, win32, etc.
2015-11-02T14:08:09Z jackdaniel: I'm more into initialize hooks or something
2015-11-02T14:08:32Z jackdaniel: ryu0: yeah, mostly posix
2015-11-02T14:08:35Z ivan\ quit (Ping timeout: 246 seconds)
2015-11-02T14:08:40Z kushal joined #lisp
2015-11-02T14:08:43Z ryu0: that's fine. i don't care about win32 much.
2015-11-02T14:08:54Z jackdaniel: there are also portability libraries to keep that consistant between implementations
2015-11-02T14:09:11Z ryu0: mostly for a mud i would need basic sockets and file IO...
2015-11-02T14:09:35Z ryu0: i could just implement telnet myself.
2015-11-02T14:09:37Z jackdaniel: for sockets you have: usocket and iolib, while for posix you have osicat and iolib
2015-11-02T14:09:49Z ryu0: assuming CL doesn't already have it.
2015-11-02T14:10:07Z ryu0: it implemented somewhere. heh
2015-11-02T14:10:08Z algae joined #lisp
2015-11-02T14:10:12Z ryu0: anyway.
2015-11-02T14:10:14Z jackdaniel: note that iolib requires libfixposix as a library in the system (you'll have to compile it by yourself), but is feature complete imo
2015-11-02T14:10:23Z ryu0: jackdaniel: you've been very helpful. thanks.
2015-11-02T14:10:30Z jackdaniel: you're welcome
2015-11-02T14:11:21Z ryu0: i've wanted to learn CL for some time. appears to have a lot of attributes i like about C. mainly, maturity and API stability.
2015-11-02T14:11:34Z Davidbrcz quit (Client Quit)
2015-11-02T14:11:51Z Davidbrcz joined #lisp
2015-11-02T14:12:13Z Davidbrcz quit (Read error: Connection reset by peer)
2015-11-02T14:12:40Z jackdaniel: ryu0: you may (more or less) freely combine C and CL with the ECL
2015-11-02T14:12:56Z Davidbrcz joined #lisp
2015-11-02T14:13:04Z ryu0: i'll consider it, but i wish to see what i can do with plain CL.
2015-11-02T14:13:10Z ryu0: i consider C a last resort.
2015-11-02T14:13:38Z rootwang quit (Ping timeout: 260 seconds)
2015-11-02T14:13:39Z ryu0: used only if i can't do it with CL for some reason.
2015-11-02T14:13:54Z Davidbrcz quit (Client Quit)
2015-11-02T14:14:09Z lispyone_ joined #lisp
2015-11-02T14:14:11Z Davidbrcz joined #lisp
2015-11-02T14:14:22Z jackdaniel: you'll want to use CFFI for using system libraries
2015-11-02T14:14:28Z Davidbrcz quit (Client Quit)
2015-11-02T14:14:45Z Davidbrcz joined #lisp
2015-11-02T14:15:00Z ryu0: sounds familiar. doesn't that require manual translation of library headers?
2015-11-02T14:15:14Z LiamH joined #lisp
2015-11-02T14:15:33Z jackdaniel: more or less, yes. It's often easier though then reinventing the whole library
2015-11-02T14:15:44Z jackdaniel: also you may automate it
2015-11-02T14:15:57Z jackdaniel: https://github.com/rpav/cl-autowrap
2015-11-02T14:16:12Z ryu0: hope it's better than the tools i tried in the past. LOL
2015-11-02T14:16:36Z jackdaniel: good luck - I'm out for lunch
2015-11-02T14:16:42Z ryu0: k.
2015-11-02T14:16:43Z ivan\ joined #lisp
2015-11-02T14:17:02Z lispyone_ quit (Remote host closed the connection)
2015-11-02T14:17:36Z lispyone_ joined #lisp
2015-11-02T14:18:30Z Davidbrcz_ joined #lisp
2015-11-02T14:20:35Z znpy quit (Ping timeout: 250 seconds)
2015-11-02T14:20:41Z Davidbrcz quit (Quit: Leaving)
2015-11-02T14:20:58Z kushal quit (Quit: Leaving)
2015-11-02T14:21:26Z kushal joined #lisp
2015-11-02T14:22:07Z lispyone_ quit (Ping timeout: 252 seconds)
2015-11-02T14:26:01Z rootwang joined #lisp
2015-11-02T14:26:16Z Shinmera: ryu0: If you're writing an application, it's usually a good idea to confine yourself to one implementation so you don't have to worry about cross-implementation portability all the time.
2015-11-02T14:26:41Z Shinmera: However, if you do write a library, then you should make it as portable as can be.
2015-11-02T14:31:58Z alexherbo2 joined #lisp
2015-11-02T14:31:58Z ryu0: question about how NIL is treated. according to my book, CONSP and LISTP treat NIL differently. it's not a cons cell but it is a list (empty list). why the difference? lists contain a chain of cons cells, don't they?
2015-11-02T14:32:12Z ryu0: i can only think of one reason for this. NIL won't have any cons cells.
2015-11-02T14:32:27Z jtza8 quit (Ping timeout: 256 seconds)
2015-11-02T14:34:01Z oGMo: ryu0: http://clhs.lisp.se/Body/26_glo_l.htm#list
2015-11-02T14:34:39Z oGMo: also, look up NIL, because nil is literally the symbol CL:NIL
2015-11-02T14:35:34Z ryu0: "terminating atom"...
2015-11-02T14:35:40Z TMM quit (Quit: Ex-Chat)
2015-11-02T14:36:17Z ryu0: it says that rather than nil, because it also has to include dotted lists?
2015-11-02T14:36:21Z oGMo: ryu0: look more at 2 :P
2015-11-02T14:36:40Z ryu0: union of null and cons?
2015-11-02T14:36:45Z oGMo: yes
2015-11-02T14:36:48Z warweasle joined #lisp
2015-11-02T14:36:59Z Davidbrcz_ quit (Quit: ++)
2015-11-02T14:37:05Z oGMo: listp, "Returns true if object is of type list; otherwise, returns false."
2015-11-02T14:37:17Z Davidbrcz joined #lisp
2015-11-02T14:37:30Z ryu0: what does union mean in this context? set union?
2015-11-02T14:37:46Z ryu0: hm.
2015-11-02T14:38:07Z ryu0: combining?
2015-11-02T14:38:59Z ryu0: union of nil and cons... cons cell.
2015-11-02T14:40:09Z tralala quit (Quit: out)
2015-11-02T14:42:43Z jtza8 joined #lisp
2015-11-02T14:42:44Z ryu0: oGMo: what does this mean exactly? how does it combine nil and cons?
2015-11-02T14:43:14Z eudoxia: union as in, either nil or cons
2015-11-02T14:43:20Z ryu0: Oh.
2015-11-02T14:43:31Z ryu0: a boolean OR?
2015-11-02T14:43:45Z ryu0: k.
2015-11-02T14:43:49Z eudoxia: aye
2015-11-02T14:43:56Z ryu0: oh, type union...
2015-11-02T14:44:00Z ryu0 facepalms.
2015-11-02T14:44:07Z ryu0: it's one of THESE types...
2015-11-02T14:44:11Z ryu0: a set of types...
2015-11-02T14:44:14Z ryu0 facepalms.
2015-11-02T14:44:17Z ryu0: lol
2015-11-02T14:44:48Z ryu0: so, list is either a cons cell or nil.
2015-11-02T14:45:40Z eudoxia: yes
2015-11-02T14:46:24Z ryu0: the way my book describes cons cells, they contain two pointers, car and cdr, and the way they work... isn't it just a singly linked list by another name?
2015-11-02T14:46:53Z eudoxia: yes
2015-11-02T14:47:16Z EvW joined #lisp
2015-11-02T14:47:26Z ryu0: alright, thanks. i thought as much.
2015-11-02T14:48:05Z kp666 quit (Quit: Leaving)
2015-11-02T14:48:46Z dougk_ quit (Ping timeout: 240 seconds)
2015-11-02T14:49:24Z Zhivago: Not exactly.
2015-11-02T14:49:40Z Zhivago: They're a unit from which you can construct linked lists, along with other structures.
2015-11-02T14:50:20Z Zhivago: a-lists, p-lists, binary trees, etc.
2015-11-02T14:51:37Z Zhivago: Tagged boxes, pairs :)
2015-11-02T14:52:43Z rootwang quit (Quit: Leaving)
2015-11-02T14:56:28Z davidfurman joined #lisp
2015-11-02T14:57:32Z davidfurman quit (Changing host)
2015-11-02T14:57:32Z davidfurman joined #lisp
2015-11-02T14:57:39Z ggole joined #lisp
2015-11-02T15:00:07Z EvW quit (Ping timeout: 246 seconds)
2015-11-02T15:02:16Z lispyone_ joined #lisp
2015-11-02T15:04:09Z john-mcaleely quit (Ping timeout: 255 seconds)
2015-11-02T15:04:14Z rtra` joined #lisp
2015-11-02T15:04:32Z rtra quit (Read error: Connection reset by peer)
2015-11-02T15:04:32Z rtra` is now known as rtra
2015-11-02T15:07:12Z cadadar_ left #lisp
2015-11-02T15:08:58Z john-mcaleely joined #lisp
2015-11-02T15:09:27Z arnsholt: What, Zhivago said, basically. They're A cons is just a pair of pointers, no more, no less. If you put a data member in the car and the rest in the cdr, it's a singly linked list. If you do something else, it can be one of many things, as Zhivago says
2015-11-02T15:09:31Z warweasle: Is there a function that appends without creating a new list. Something like (rplacd (butlast lst) lst2)?
2015-11-02T15:09:52Z arnsholt: The crucial thing is that there's no law that says that the car is the data thing and the cdr is the rest. Either can be anything
2015-11-02T15:09:57Z Xach: warweasle: nconc springs to mind
2015-11-02T15:11:22Z warweasle: Xach: Oh. Let me try.
2015-11-02T15:12:30Z ramky quit (Ping timeout: 240 seconds)
2015-11-02T15:13:56Z pt1 quit (Remote host closed the connection)
2015-11-02T15:14:54Z warweasle: Xach: Woot
2015-11-02T15:15:04Z warweasle: Xach: I mean works.
2015-11-02T15:16:44Z Xach: fantastico
2015-11-02T15:16:51Z loke_: re
2015-11-02T15:17:23Z davidfurman quit (Remote host closed the connection)
2015-11-02T15:18:13Z marvi quit (Ping timeout: 250 seconds)
2015-11-02T15:19:05Z Jesin quit (Quit: Leaving)
2015-11-02T15:19:50Z lnostdal__ is now known as lnostdal
2015-11-02T15:20:00Z happy-dude joined #lisp
2015-11-02T15:21:04Z phoe_krk quit (Quit: phoe_krk)
2015-11-02T15:21:21Z warweasle: Xach: Yu @r3 l33t hax0r.
2015-11-02T15:23:43Z faalentijn quit (Ping timeout: 252 seconds)
2015-11-02T15:24:13Z Xach just released a new lisp-powered amusement website, pixelspeechbubble.com 
2015-11-02T15:24:17Z ekinmur quit (Quit: Textual IRC Client: www.textualapp.com)
2015-11-02T15:24:32Z Xach: it is actually a clone of the first such amusement i made 10 years ago, but i still liked updating/remaking it
2015-11-02T15:26:18Z Colleen_ joined #lisp
2015-11-02T15:26:58Z rtoym_ joined #lisp
2015-11-02T15:27:58Z splittist_ joined #lisp
2015-11-02T15:29:07Z warweasle quit (Quit: Reboot!)
2015-11-02T15:30:08Z larsen__ joined #lisp
2015-11-02T15:30:13Z ramus_ joined #lisp
2015-11-02T15:30:16Z jackdani1l joined #lisp
2015-11-02T15:30:27Z Faed joined #lisp
2015-11-02T15:33:58Z Xach: hmm, does clozure cl have a way to specify some code to run when a saved application is restarted, even when the toplevel function hasn't been replaced?
2015-11-02T15:34:50Z Xach: sbcl does that via a variable called *INIT-HOOKS*
2015-11-02T15:35:20Z CEnnis91 quit (*.net *.split)
2015-11-02T15:35:20Z radioninja quit (*.net *.split)
2015-11-02T15:35:20Z jasom quit (*.net *.split)
2015-11-02T15:35:20Z gaya- quit (*.net *.split)
2015-11-02T15:35:21Z rtoym quit (*.net *.split)
2015-11-02T15:35:21Z Subfusc quit (*.net *.split)
2015-11-02T15:35:21Z d4gg4d quit (*.net *.split)
2015-11-02T15:35:21Z mathrick quit (*.net *.split)
2015-11-02T15:35:21Z torpig quit (*.net *.split)
2015-11-02T15:35:21Z trig-ger quit (*.net *.split)
2015-11-02T15:35:21Z wyan quit (*.net *.split)
2015-11-02T15:35:21Z Colleen quit (*.net *.split)
2015-11-02T15:35:21Z H4ns quit (*.net *.split)
2015-11-02T15:35:21Z ramus quit (*.net *.split)
2015-11-02T15:35:21Z Oddity quit (*.net *.split)
2015-11-02T15:36:06Z jeaye quit (*.net *.split)
2015-11-02T15:36:06Z jackdaniel quit (*.net *.split)
2015-11-02T15:36:06Z moredhel quit (*.net *.split)
2015-11-02T15:36:06Z salva quit (*.net *.split)
2015-11-02T15:36:06Z Neet quit (*.net *.split)
2015-11-02T15:36:06Z Fade quit (*.net *.split)
2015-11-02T15:36:06Z mission712 quit (*.net *.split)
2015-11-02T15:36:06Z larsen quit (*.net *.split)
2015-11-02T15:36:06Z constantinexvi quit (*.net *.split)
2015-11-02T15:36:06Z Zotan quit (*.net *.split)
2015-11-02T15:36:06Z XachX quit (*.net *.split)
2015-11-02T15:36:06Z splittist quit (*.net *.split)
2015-11-02T15:36:06Z victor_lowther quit (*.net *.split)
2015-11-02T15:36:06Z Colleen_ is now known as Colleen
2015-11-02T15:36:06Z scottj joined #lisp
2015-11-02T15:36:08Z splittist_ is now known as splittist
2015-11-02T15:36:48Z Shinmera: UIOP wraps around that with *IMAGE-RESTORE-HOOK*
2015-11-02T15:37:02Z Shinmera: Or rather, it reimplements the functionality on its own.
2015-11-02T15:37:19Z decent quit (Quit: leaving)
2015-11-02T15:37:27Z Shinmera: That is, uiop:*image-restore-hook*.
2015-11-02T15:37:48Z torpig joined #lisp
2015-11-02T15:38:25Z Xach: yes, it looks like it replaces the toplevel function with one that calls the uiop hook system first
2015-11-02T15:38:48Z smokeink quit (Remote host closed the connection)
2015-11-02T15:41:21Z Shinmera: Maybe you can do something with the application-class argument to save-application?
2015-11-02T15:41:24Z radioninja joined #lisp
2015-11-02T15:41:26Z jeaye joined #lisp
2015-11-02T15:41:42Z salva joined #lisp
2015-11-02T15:41:48Z Shinmera: The documentation for save-application isn't very helpful for that particular argument unfortunately.
2015-11-02T15:42:25Z constantinexvi joined #lisp
2015-11-02T15:42:39Z earl-ducaine joined #lisp
2015-11-02T15:42:51Z mathrick joined #lisp
2015-11-02T15:42:58Z mission712 joined #lisp
2015-11-02T15:43:01Z xrash quit (Remote host closed the connection)
2015-11-02T15:43:26Z Subfusc joined #lisp
2015-11-02T15:43:28Z gaya- joined #lisp
2015-11-02T15:43:36Z ryu0: huh. thought so.
2015-11-02T15:43:49Z CEnnis91 joined #lisp
2015-11-02T15:44:10Z ryu0: atom is non-cons cell... so nil is an atom. heh.
2015-11-02T15:45:39Z Shinmera: ryu0: Also see http://sellout.github.io/media/CL-type-hierarchy.png
2015-11-02T15:46:00Z Xach: Shinmera: that seems promising
2015-11-02T15:46:16Z Shinmera: Note that this is about types. NIL itself has the type NULL, while NIL denotes a type that includes nothing.
2015-11-02T15:46:27Z Shinmera: Xach: Let me know if you can work it out!
2015-11-02T15:46:31Z Neet joined #lisp
2015-11-02T15:47:02Z trig-ger joined #lisp
2015-11-02T15:47:25Z moredhel joined #lisp
2015-11-02T15:48:18Z wyan joined #lisp
2015-11-02T15:48:20Z remi`bd quit (Quit: leaving)
2015-11-02T15:49:26Z victor_lowther joined #lisp
2015-11-02T15:49:30Z raphaelss joined #lisp
2015-11-02T15:49:40Z ryu0: can atoms therefore be thought of as things that are not part of a type of list? i know it's more specific than than this but...
2015-11-02T15:49:40Z XachX joined #lisp
2015-11-02T15:49:53Z Xach: rme just told me about ccl:*lisp-startup-functions*
2015-11-02T15:50:00Z cadadar joined #lisp
2015-11-02T15:50:11Z Zotan joined #lisp
2015-11-02T15:50:19Z Nikotiini quit (Ping timeout: 240 seconds)
2015-11-02T15:50:30Z Shinmera: ryu0: as http://www.lispworks.com/documentation/HyperSpec/Body/t_atom.htm says, ATOM is equivalent to (NOT CONS).
2015-11-02T15:50:41Z ryu0: yea, i see that.
2015-11-02T15:50:45Z d4gg4d joined #lisp
2015-11-02T15:50:46Z ryu0: but i mean in actual use.
2015-11-02T15:50:57Z paddymahoney joined #lisp
2015-11-02T15:51:04Z ryu0: hm.
2015-11-02T15:51:12Z Shinmera: Conses don't necessarily denote lists.
2015-11-02T15:51:28Z ryu0: yea, i know, but that's one use of them.
2015-11-02T15:51:54Z ryu0: ah, so this list is why null (nil) is not an atom?
2015-11-02T15:52:07Z ryu0: err
2015-11-02T15:52:09Z ryu0: is an atom
2015-11-02T15:52:12Z ryu0: sorry.
2015-11-02T15:52:34Z ryu0: if i'm reading this right, then, list and sequence should both be considered cons and therefore not be atoms.
2015-11-02T15:52:57Z shookees joined #lisp
2015-11-02T15:53:24Z Shinmera: A list is (or cons null). If it's null then it is an atom. If it's cons then it's not.
2015-11-02T15:53:55Z ryu0: Shinmera: what purpose does this concept of 'atom' serve?
2015-11-02T15:54:08Z cadadar quit (Client Quit)
2015-11-02T15:54:14Z ryu0: it was defined in my book without much of a context for why it exists.
2015-11-02T15:54:34Z oGMo: ...
2015-11-02T15:54:58Z oGMo: _you_ lack context; it does not
2015-11-02T15:55:03Z oGMo: is this your first time programming?
2015-11-02T15:55:13Z ryu0: oGMo: no, but new to high level...
2015-11-02T15:55:22Z arnsholt: It was probably more relevant in older Lisps, when pretty much any complex data structure had to be constructed out of conses
2015-11-02T15:55:41Z oGMo: ryu0: i would recommend learning more of the whole and focusing less on the reasoning behind each individual thing out of context
2015-11-02T15:55:46Z arnsholt: My local Lisp tells me that an array is an atom for example, which can probably be a bit counter-intuitive
2015-11-02T15:55:58Z cadadar joined #lisp
2015-11-02T15:56:48Z oGMo: ryu0: also, _write_ some real code, because there are a lot of decisions in CL that don't make sense until you use it, then you're like "oooh"
2015-11-02T15:56:52Z yrk joined #lisp
2015-11-02T15:57:00Z johann_ quit (Remote host closed the connection)
2015-11-02T15:57:29Z yrk quit (Changing host)
2015-11-02T15:57:29Z yrk joined #lisp
2015-11-02T15:57:45Z ryu0: oGMo: sorry, i'm just wanting to understand the rationale of everything i come across. i want to learn CL pretty thoroughly, if at all possible.
2015-11-02T15:58:02Z ryu0: i come from C, so not everything makes sense to me i guess.
2015-11-02T15:58:17Z Zhivago: ruy: atom and form are terms from s-exp syntax.
2015-11-02T15:58:23Z oGMo: ryu0: well what i'm saying is the rationale only becomes obvious as you know more and write more
2015-11-02T15:58:29Z ryu0: Oh.
2015-11-02T15:58:39Z Zhivago: ryu: So they're useful when processing lisp source code -- they should probably not be used in other places.
2015-11-02T15:58:58Z shookees quit (Ping timeout: 260 seconds)
2015-11-02T15:59:47Z oGMo: e.g., a big one (not just CL-specific) coming from C might be "why is 0 not false?!" .. except once you start using it you find testing for multiple false values is very annoying and error-prone
2015-11-02T16:00:36Z ryu0: oh, you mean how C treates anything that evaluates to 0 as false?
2015-11-02T16:00:38Z oGMo: and very often you want to know if some value is non-NIL, even if it's 0, etc
2015-11-02T16:00:46Z oGMo: right
2015-11-02T16:00:56Z Zhivago: Well, C defines false as 0. Much like CL defines false as NIL.
2015-11-02T16:01:01Z oGMo: right
2015-11-02T16:01:31Z ryu0: i see it plainly, 0 is only a number in CL. CL has dedicated symbols and types for boolean it appears.
2015-11-02T16:01:36Z Jesin joined #lisp
2015-11-02T16:01:42Z ryu0: is that about right?
2015-11-02T16:01:45Z oGMo: not really
2015-11-02T16:01:49Z ryu0: or?
2015-11-02T16:02:04Z Zhivago: Well, it overloads the symbol NIL as the boolean false.
2015-11-02T16:02:14Z oGMo: everything is a generalized-boolean "true"; only NIL is false
2015-11-02T16:02:26Z Zhivago: Scheme has separate () and false, on the other hand.
2015-11-02T16:03:12Z Zhivago: The idea is that NIL is the empty list which is the empty set, which is a reasonable thing to describe a lack of success.
2015-11-02T16:03:45Z ryu0: is it also used to describe no return value?
2015-11-02T16:03:49Z Zhivago: I'm not convinced that it was a good decision (Scheme probably got it right), but it's only occasionally problematic.
2015-11-02T16:04:18Z Zhivago: Technically (values) describes no return value, but that's implicitly nil for things that expect a value from such a return.
2015-11-02T16:04:19Z oGMo: ryu0: no, though if you look at the value of no values you get nil
2015-11-02T16:04:24Z oGMo: that
2015-11-02T16:04:55Z dwchandler: it's problematic in certain situations, which are well known
2015-11-02T16:05:18Z Shinmera: I for one really enjoy generalised booleans.
2015-11-02T16:05:39Z lnostdal quit (Ping timeout: 240 seconds)
2015-11-02T16:05:48Z oGMo: i think the only time i've found false/nil mattering is when the language has other annoying semantics for NIL
2015-11-02T16:05:51Z oGMo: e.g., lua
2015-11-02T16:06:16Z oGMo: but lots of false values is painful to deal with, e.g. python
2015-11-02T16:06:52Z paddymahoney quit (Remote host closed the connection)
2015-11-02T16:07:15Z Zhivago: Javascript does a good job with false, undefined and null being separate -- but implicit conversion causes confusion.
2015-11-02T16:07:21Z ryu0: when you say generalized-boolean, what is that exactly? is it how anything non-NIL is treated as if it were true if used in a boolean expression?
2015-11-02T16:07:29Z Zhivago: ryu: Yes.
2015-11-02T16:07:31Z Shinmera: clhs glossary/generalized boolean
2015-11-02T16:07:31Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/26_glo_g.htm#generalized_boolean
2015-11-02T16:07:43Z paddymahoney joined #lisp
2015-11-02T16:07:49Z Fare joined #lisp
2015-11-02T16:08:23Z ryu0: jeez. how many terms does this language have? XD
2015-11-02T16:08:38Z ryu0: anyway.
2015-11-02T16:08:45Z dwchandler: putting status in-band is the real issue. there's no 100% solution with in-band status. it's just about picking which flavor of fail you like better ;-)
2015-11-02T16:08:53Z Shinmera: It's a lengthy spec that explains almost everything you might want to know rather precisely. You'll come to appreciate it.
2015-11-02T16:09:30Z dwchandler: rather, which flavor of fail you hate least
2015-11-02T16:09:42Z Ukari quit (Ping timeout: 260 seconds)
2015-11-02T16:10:23Z ryu0: Shinmera: would additional books on CL be advised after i finish gentle introduction?
2015-11-02T16:10:48Z Shinmera: PCL is the usual recommendation
2015-11-02T16:10:59Z Shinmera: Then there's also PAIP and On Lisp.
2015-11-02T16:11:30Z shookees joined #lisp
2015-11-02T16:11:33Z Shinmera: There's several other books as well, but those are usually of.. uh, controversial status.
2015-11-02T16:11:45Z Shinmera: On Lisp bordering on that too.
2015-11-02T16:11:57Z dwchandler: PCL would be a great next book
2015-11-02T16:12:59Z ryu0: i'm already feeling like this is going to be challenging. CL doesn't seem anything like C, other than some concepts that are similar...
2015-11-02T16:13:28Z Shinmera: It's still a mostly sequential language.
2015-11-02T16:13:38Z oGMo: it's not _that_ different from other things, but it won't seem similar for awhile
2015-11-02T16:13:40Z antoszka: It's not supposed to be anything like C.
2015-11-02T16:14:06Z ryu0: yea, i can see that. its foundation predates C.
2015-11-02T16:14:31Z oGMo: your best bet is to forget C and learn CL, rather than trying to learn "CL as if it were C, and how it relates to C-like-things, and why things are different than C"
2015-11-02T16:15:32Z Zhivago: You can think of C as being all about arrays, rather than lists.
2015-11-02T16:15:41Z ryu0: oGMo: when you say forget, you mean put C in its own box and keep CL in its own as well?
2015-11-02T16:15:49Z oGMo: C is just about a sea of numbers
2015-11-02T16:16:14Z oGMo: ryu0: i mean try to lose your C mindset, which is especially difficult if it's your only language ;/
2015-11-02T16:16:22Z nzambe joined #lisp
2015-11-02T16:16:40Z ryu0: it is, largely. it's the only language I bothered to learn the details of.
2015-11-02T16:17:02Z ryu0: to date.
2015-11-02T16:17:13Z Zhivago predicts widespread confusion regarding C here. :)
2015-11-02T16:17:17Z ryu0: 8 years of C.
2015-11-02T16:17:20Z ryu0 winces.
2015-11-02T16:17:48Z oGMo: https://www.cs.cmu.edu/~dst/LispBook/book.pdf <- that may be a place to start and pretend you're new to programming in general
2015-11-02T16:18:06Z Shinmera: He's already reading Gentle.
2015-11-02T16:18:10Z jasom joined #lisp
2015-11-02T16:18:22Z ryu0: the dover edition
2015-11-02T16:18:29Z oGMo: doh!
2015-11-02T16:18:42Z lnostdal joined #lisp
2015-11-02T16:20:06Z oGMo: another good thing to understand a lot of rationale would be reading "lisp in small pieces" and writing your own little lisp, except that presupposes knowing lisp ;/
2015-11-02T16:20:40Z ryu0: oGMo: I figured out some degree of Lisp syntax before, but this is my first time actually bothering to learn the details about it.
2015-11-02T16:20:51Z ryu0: maybe that is why my questions seem so stupid :/
2015-11-02T16:21:07Z oGMo: ryu0: ah. well, just write some code, and read other code. M-. is your friend.
2015-11-02T16:21:21Z Shinmera: He's not using Slime.
2015-11-02T16:21:33Z ryu0: i've grown attached to vim.
2015-11-02T16:21:35Z oGMo: D:
2015-11-02T16:22:03Z ryu0: it's worked well for most languages i've worked with...
2015-11-02T16:22:34Z dwchandler: ryu0: I use vim. You'll miss some slime goodness, but there's no reason you can't use vim.
2015-11-02T16:22:49Z ryu0: ugh. i've mainly worked with C and shell pipelines...
2015-11-02T16:22:52Z ryu0: some awk
2015-11-02T16:23:06Z ryu0: and such for programming experience.
2015-11-02T16:23:14Z oGMo: well figure out how you can jump to definitions, reading how other functions work is very helpful
2015-11-02T16:23:15Z ryu0: mostly standard unix things.
2015-11-02T16:23:23Z H4ns joined #lisp
2015-11-02T16:24:11Z ryu0: i just figured, if i have to learn a higher level language anyway, may as well be something worthwhile. so i thought of CL.
2015-11-02T16:24:39Z dwchandler: ryu0: so you'll see things in lisp that are approached differently. Different idioms. When you're somewhat comfortable with the basics then exploring *why* those idioms are different from, say, C, is worthwhile.
2015-11-02T16:25:22Z oGMo: it's very worthwhile and practical, it's a nice quick way to whip out helpful code when you need it
2015-11-02T16:26:08Z ryu0: i played around trying to find something, but every language i tried that claimed "easy to learn" felt like overly verbose or clunky to use...
2015-11-02T16:26:31Z ryu0: TCL for example feels rather verbose for even the most basic things.
2015-11-02T16:26:42Z ryu0: string matching require rather long commands for example...
2015-11-02T16:26:44Z myrkraverk quit (Remote host closed the connection)
2015-11-02T16:26:55Z tsoutseki quit (Ping timeout: 246 seconds)
2015-11-02T16:27:01Z shka joined #lisp
2015-11-02T16:27:16Z ryu0: hmph.
2015-11-02T16:27:33Z oGMo: CL is verbose, probably more than most, but at the same time that's not usually a problem
2015-11-02T16:27:58Z oGMo: and even when it is, you can alter the language where you need terseness ;)
2015-11-02T16:28:06Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-02T16:28:08Z ryu0: gentle has covered CAAR and such functions...
2015-11-02T16:28:15Z drmeister: Xach: Are you online?
2015-11-02T16:28:46Z ryu0: i noticed that, in the context of lists, CAR descends into an element, and CDR moves to the next element.
2015-11-02T16:29:24Z XachX: drmeister: at lunch
2015-11-02T16:29:31Z ryu0: so, CAAR hm.
2015-11-02T16:29:35Z ryu0: err
2015-11-02T16:29:37Z ryu0: anyway.
2015-11-02T16:29:41Z resttime joined #lisp
2015-11-02T16:29:46Z mordocai quit (Quit: switching machines)
2015-11-02T16:29:46Z ryu0: i guess i should stop questioning and just read?
2015-11-02T16:30:30Z Shinmera: Read Gentle and PCL, write the PCL practicals, write your own lib or code, and then start pondering about the deeper details if that's what you're curious about.
2015-11-02T16:30:31Z mordocai joined #lisp
2015-11-02T16:30:35Z Cymew: The only way to wrap your head around conses is to play around with CAR, CDR, CONS, LIST and those for a day or so.
2015-11-02T16:30:56Z larsen__: I noticed no mention of "Land of Lisp", what do you think about it?
2015-11-02T16:31:03Z gravicappa joined #lisp
2015-11-02T16:31:10Z Cymew: I love it! :)
2015-11-02T16:31:31Z oleo joined #lisp
2015-11-02T16:31:50Z djh: I enjoyed LoL but I couldn't recommend it as a standalone book for learnign lisp
2015-11-02T16:32:29Z mordocai: Yeah, I would recommend using Land of Lisp + other resources.
2015-11-02T16:32:34Z mordocai: Land of Lisp is just fun
2015-11-02T16:32:44Z dwchandler: larsen__: I read land of lisp. it was fun and I learned things. nothing too bad to say about it, and a lot good. however, later I read PCL and I'd recommend that over LoL for most people
2015-11-02T16:33:15Z tsoutseki joined #lisp
2015-11-02T16:34:14Z djh: I found that working through the examples in LoL was good practice for actually writing lots of lisp, whilst PCL having few practicals at the end meant I could read it whilst commuting on the train; so I worked through both at once. Worked quite well
2015-11-02T16:34:30Z djh: *until the end
2015-11-02T16:35:13Z Shinmera: I'd recommend actually writing the practicals out yourself though. Experimenting around with the code given and expanding it enhances the experience a lot.
2015-11-02T16:36:27Z djh: The Wumpus game even got my other half interested, which is quite an acheivement :)
2015-11-02T16:41:52Z fortitude joined #lisp
2015-11-02T16:42:14Z shka is lost in quasiquotes
2015-11-02T16:42:58Z Shinmera: http://cliki.net/Three%20Comma%20Programmer ?
2015-11-02T16:43:23Z shka: Shinmera: two comma
2015-11-02T16:43:25Z shka: http://paste.lisp.org/display/158253
2015-11-02T16:43:59Z shka: it is not like i need it
2015-11-02T16:44:00Z badkins quit (Read error: Connection reset by peer)
2015-11-02T16:44:15Z pt1 joined #lisp
2015-11-02T16:44:22Z shka: but i wanted to know how i can write macro that defines macro that defines macrolet
2015-11-02T16:44:31Z shka: for the sake of doing it
2015-11-02T16:44:57Z shka: and what is interesting
2015-11-02T16:45:10Z shka: i'm getting this
2015-11-02T16:45:12Z shka: (MACROLET ((TEST (&BODY B)
2015-11-02T16:45:13Z shka:              `(,* ,@B)))
2015-11-02T16:45:47Z shka: which is not exactly what i ment
2015-11-02T16:50:34Z Nikotiini joined #lisp
2015-11-02T16:51:14Z shka: i think that i don't understand `, afterall
2015-11-02T16:51:17Z shka: :/
2015-11-02T16:51:34Z warweasle joined #lisp
2015-11-02T16:55:15Z SHODAN joined #lisp
2015-11-02T16:55:55Z JuanDaugherty joined #lisp
2015-11-02T16:57:07Z davidfurman joined #lisp
2015-11-02T16:57:21Z davidfurman quit (Changing host)
2015-11-02T16:57:21Z davidfurman joined #lisp
2015-11-02T16:58:12Z Cymew quit (Ping timeout: 250 seconds)
2015-11-02T16:59:29Z pt1 quit (Remote host closed the connection)
2015-11-02T17:00:02Z xach quit (Ping timeout: 185 seconds)
2015-11-02T17:00:29Z Viaken quit (Ping timeout: 250 seconds)
2015-11-02T17:02:25Z mac_ified joined #lisp
2015-11-02T17:03:52Z scymtym_ joined #lisp
2015-11-02T17:04:56Z |nix|`` quit (Remote host closed the connection)
2015-11-02T17:04:57Z leafybasil quit (Ping timeout: 265 seconds)
2015-11-02T17:05:16Z flambard quit (Quit: kthxbai)
2015-11-02T17:09:35Z eudoxia quit (Quit: Leaving)
2015-11-02T17:10:07Z bb010g quit (Quit: Connection closed for inactivity)
2015-11-02T17:12:28Z OrangeShark joined #lisp
2015-11-02T17:12:59Z fridim_ quit (Ping timeout: 240 seconds)
2015-11-02T17:14:02Z xach quit (Ping timeout: 186 seconds)
2015-11-02T17:15:36Z Posterdati: jackdaniel:  hi
2015-11-02T17:15:51Z Posterdati: jackdani1l: hi
2015-11-02T17:16:02Z _sjs joined #lisp
2015-11-02T17:16:52Z larsen__: Posterdati: are you italian? :)
2015-11-02T17:16:52Z djinni` quit (Ping timeout: 240 seconds)
2015-11-02T17:17:08Z Posterdati: yes
2015-11-02T17:17:31Z Xach: drmeister: around now.
2015-11-02T17:18:06Z ZabaQ quit (Quit: Leaving)
2015-11-02T17:19:32Z Posterdati: larsen__: why?
2015-11-02T17:19:49Z larsen__: Posterdati: your nickname hints at a movie I love (I'm italian too)
2015-11-02T17:20:13Z Posterdati: larsen__: ok
2015-11-02T17:20:37Z varjagg joined #lisp
2015-11-02T17:21:43Z pt1 joined #lisp
2015-11-02T17:22:35Z drmeister: Xach: I'm trying to build quicklisp using clasp with the new Cleavir compiler.
2015-11-02T17:22:44Z Xach: drmeister: cool
2015-11-02T17:22:56Z drmeister: I'm getting this:  Does it speak to you at all?
2015-11-02T17:22:57Z drmeister: https://www.irccloud.com/pastebin/wUlrFJ6D/
2015-11-02T17:23:24Z Posterdati: larsen__: lo vede che stuzzica!
2015-11-02T17:23:34Z Xach: drmeister: that is part of deflate, which is code from Pierre Mai
2015-11-02T17:23:43Z Xach: drmeister: I'm not familiar with its internals, sorry
2015-11-02T17:23:53Z drmeister: Ok, that helps
2015-11-02T17:24:17Z Xach: drmeister: I *do* know that it works on every other implementation, so if it's doing something de jure unportable, it's at least de facto portable
2015-11-02T17:24:18Z larsen__: Posterdati: :)
2015-11-02T17:25:07Z drmeister: Xach: I'm made a LOT of changes to clasp (new compiler, immediate fixnums, tagged pointers) since I last built quicklisp with it.  So there may be new problems.
2015-11-02T17:25:21Z Fare: Xach: quicklisp still comes with asdf 2.26... which isn't supported anymore.
2015-11-02T17:27:48Z johann_ joined #lisp
2015-11-02T17:28:39Z Fare: drmeister, is the current asdf working properly on clasp, or do you need further patches?
2015-11-02T17:28:43Z lisse_ joined #lisp
2015-11-02T17:29:19Z mission712 quit (Disconnected by services)
2015-11-02T17:30:21Z badkins joined #lisp
2015-11-02T17:30:54Z _cosmonaut_ quit (Remote host closed the connection)
2015-11-02T17:32:12Z johann_ quit (Ping timeout: 255 seconds)
2015-11-02T17:32:43Z HDurer quit (Ping timeout: 246 seconds)
2015-11-02T17:35:04Z Quadrescence joined #lisp
2015-11-02T17:35:51Z drmeister: Fare: My submodule of ASDF works fine but is a bit old - I'm not sure what version it is.
2015-11-02T17:37:59Z jtza8 quit (Ping timeout: 264 seconds)
2015-11-02T17:38:28Z Fare: drmeister, can you try with the latest 3.1.6 release? if you can run the asdf test suite, even better.
2015-11-02T17:43:02Z samssammerz joined #lisp
2015-11-02T17:44:50Z xach quit (Ping timeout: 185 seconds)
2015-11-02T17:45:06Z Guest14 joined #lisp
2015-11-02T17:45:11Z HDurer joined #lisp
2015-11-02T17:45:38Z Guest47571 joined #lisp
2015-11-02T17:47:18Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-02T17:47:21Z jackdani1l: Posterdati: hey
2015-11-02T17:47:23Z guicho joined #lisp
2015-11-02T17:48:08Z jackdani1l is now known as jackdaniel
2015-11-02T17:51:15Z Fare quit (Quit: Leaving)
2015-11-02T17:51:45Z jackdaniel: Fare: is there any plan to finish ASDF API and freeze it? (in the future maybe)
2015-11-02T17:53:06Z Mon_Ouie joined #lisp
2015-11-02T17:56:01Z ryu0: ???
2015-11-02T17:56:07Z ryu0: how strange.
2015-11-02T17:56:47Z Posterdati: jackdani1l: I need to start ecl with swank, but I cannot connect from remote
2015-11-02T17:56:56Z faalentijn joined #lisp
2015-11-02T17:57:45Z ryu0: gentle talks about something called ED, saying it should do something when used at the REPL, but sbcl doesn't seem to understand.
2015-11-02T17:57:54Z jackdaniel: Posterdati: you have to (let ((swank::*loopback-interface* "0.0.0.0")) (swank:create-server …))
2015-11-02T17:57:58Z ryu0: hm.
2015-11-02T17:58:12Z jackdaniel: swank listens by default on the localhost only
2015-11-02T17:58:15Z Xach: ryu0: you can teach sbcl how to ed.
2015-11-02T17:58:18Z jackdaniel: it's unsafe though
2015-11-02T17:58:19Z Posterdati: jackdaniel: ah!
2015-11-02T17:58:32Z Xach: http://lispblog.xach.com/post/129215925278/my-new-favorite-slimesbclccl-trick
2015-11-02T17:58:40Z Posterdati: jackdaniel: thanks
2015-11-02T17:59:00Z jackdaniel: np
2015-11-02T17:59:01Z ryu0: Xach: what's it for though?
2015-11-02T17:59:11Z ryu0: Xach: does it test for syntax errors and such?
2015-11-02T17:59:22Z Xach: ryu0: it's for editing something.
2015-11-02T17:59:30Z ryu0: oh. right.
2015-11-02T17:59:56Z ryu0: how unusual. i'm used to using a separate program to edit things.
2015-11-02T18:00:27Z Xach: that link shows you how to have emacs do the editing, even though the command runs in sbcl
2015-11-02T18:00:33Z dfcat joined #lisp
2015-11-02T18:01:42Z Posterdati: jackdaniel: working!
2015-11-02T18:01:48Z ryu0: so what does ED offer you over using an external editor?
2015-11-02T18:02:05Z Posterdati: jackdaniel: I'm trying to launch ecl + swank from systemd
2015-11-02T18:02:19Z ryu0: i can see it probably offers some degree of language integration...
2015-11-02T18:02:41Z ryu0: hm.
2015-11-02T18:03:58Z Xach: ryu0: I use it because I have a function that returns a filename, given an object, and that filename is kind of long. So I just use something like (ed (object-pathname object)) instead of navigating in the editor.
2015-11-02T18:04:11Z Xach: and I really actually just do (edit-object object)
2015-11-02T18:04:44Z ryu0: so it's an optional feature I should check out at some point then.
2015-11-02T18:05:25Z ryu0: i'm close to finishing chapter 3. i'm on the advanced topics part now.
2015-11-02T18:05:44Z solyd joined #lisp
2015-11-02T18:05:53Z Xach: ryu0: i have used CL for a very long time but only used ed for real this year.
2015-11-02T18:06:02Z Xach: you could pretend it doesn't exist
2015-11-02T18:06:33Z ryu0: Xach: it's just i'm used to certain staples from editting other types of programs, so some things i simply can't give up.
2015-11-02T18:06:54Z ryu0: but, we'll see.
2015-11-02T18:06:57Z Xach: ryu0: like what?
2015-11-02T18:07:00Z ryu0: vim.
2015-11-02T18:07:08Z Xach: what staples?
2015-11-02T18:07:28Z malbertife joined #lisp
2015-11-02T18:07:29Z ryu0: well, i'm used to using vim. i consider it a staple for editting my source code files.
2015-11-02T18:07:33Z ryu0: among other things.
2015-11-02T18:08:13Z ryu0: i guess there's also what i use for tracking my source code changes, being git right now.
2015-11-02T18:08:34Z ryu0: but i suppose these tools can be replaced.
2015-11-02T18:09:43Z Xach: oh, you could teach ed about vim, if you wanted. but it's not like ed is something everyone uses all the time in emacs, though. it's just a thing.
2015-11-02T18:10:28Z ryu0: does the REPL debugger differ between implementations?
2015-11-02T18:10:30Z k-stz joined #lisp
2015-11-02T18:10:35Z shka: ryu0: i have vi in my emacs ;-)
2015-11-02T18:10:43Z Xach: ryu0: yes, each one is different.
2015-11-02T18:10:53Z ryu0: huh. okay.
2015-11-02T18:11:16Z ryu0: i suppose that is one thing i will just have to learn through practice.
2015-11-02T18:11:22Z larsen__: wrt reading material, is there any particular project you recommend reading to learn?
2015-11-02T18:11:34Z larsen__: I mean reading code, to be more clear
2015-11-02T18:11:58Z Xach: I quite like cl-ppcre's code. It does an interesting task, is fast, and uses a lot of CL features.
2015-11-02T18:12:11Z larsen__: thank you
2015-11-02T18:12:28Z futpib joined #lisp
2015-11-02T18:13:49Z ryu0: Xach: may i ask how CL debuggers in general differ from C debuggers? i'm used to the idea that using a debugger means a super slow program (valgrind, etc).
2015-11-02T18:14:37Z shka: ryu0: well, there is a reason why valgrind slow downs program execution
2015-11-02T18:14:43Z Xach: ryu0: I don't know, sorry. I don't use C debuggers. In CL, you can usually do things like see local variables, look at backtraces, etc.
2015-11-02T18:15:02Z shka: since it (correct me if i'm wrong) emulates cpu
2015-11-02T18:15:03Z Xach: ryu0: if you use the slime integration, you can jump to the form or function that signaled an error and try to see what's up.
2015-11-02T18:15:16Z Xach: ryu0: also, your idea about a debugger is wrong.
2015-11-02T18:16:32Z ryu0: oh?
2015-11-02T18:17:00Z vap1 joined #lisp
2015-11-02T18:17:21Z Xach: A debugger does not inherently mean a super-slow program
2015-11-02T18:17:33Z ryu0: ah.
2015-11-02T18:17:57Z ryu0: let me guess. it's just a general term for a program that helps find and fix bugs?
2015-11-02T18:18:28Z Xach: Yes.
2015-11-02T18:18:48Z jlarocco: shka: valgrind does not emulate the cpu
2015-11-02T18:18:54Z shka: oh, ok
2015-11-02T18:19:39Z vaporatorius__ quit (Ping timeout: 240 seconds)
2015-11-02T18:19:41Z ryu0: jlarocco: really? i wonder why it had issues when i used some custom ASM that were legal instructions but valgrind hiccuped on them.
2015-11-02T18:19:57Z ryu0: i forget which one it was now.
2015-11-02T18:20:42Z shka: well, my impression was that valgrind is virtual machine
2015-11-02T18:21:04Z shka: that translates code into some kind of bytecode
2015-11-02T18:21:07Z jlarocco: eh, I  guess it depends on how you look at it
2015-11-02T18:21:08Z shka: and than it runs it
2015-11-02T18:21:40Z eazar001 joined #lisp
2015-11-02T18:22:15Z shka: ryu0: anyway, debugger is just debugger
2015-11-02T18:22:29Z shka: there are some lisp twists to it
2015-11-02T18:22:39Z shka: for instance if condition was raised
2015-11-02T18:22:39Z lispyone_ quit (Remote host closed the connection)
2015-11-02T18:22:44Z shka: it may offer restart
2015-11-02T18:22:55Z shka: and you can select restart from debugger
2015-11-02T18:22:56Z jlarocco: it translates the assembly to an intermediate form, transforms it somehow, then compiles back to assembly that runs on the processor
2015-11-02T18:23:19Z icholy joined #lisp
2015-11-02T18:23:20Z shka: well, obviously at some point it has to run on cpu
2015-11-02T18:23:22Z ryu0: would that be what i've heard called a recompiler?
2015-11-02T18:23:22Z jlarocco: so possibly even more inefficient than just emulating ;-)
2015-11-02T18:23:53Z shka: but in a nutshell you will be using it to inspect stack frames
2015-11-02T18:24:14Z grouzen joined #lisp
2015-11-02T18:24:17Z shka: you can also (break)
2015-11-02T18:24:21Z jlarocco: ryu0: yes
2015-11-02T18:24:22Z icholy: With higher order functions, why is the procedure the first paramter instead of the last one?
2015-11-02T18:24:37Z shka: but honestly, i find it rather ankward to use
2015-11-02T18:24:41Z shka: icholy: convention
2015-11-02T18:24:59Z ryu0: jlarocco: i recall reading of two ways to run non-native machine code. interpretation or recompilation.
2015-11-02T18:25:10Z whartung: never really considered the condition system "the debugger", though arguably that facility is used to invoke restarts which prompt the REPL, which works as an ad hoc break point. But the restart system (in general) doesn't allow stepping/tracing per se, which I more relate the capabilit of a debugger
2015-11-02T18:25:18Z varjagg quit (Ping timeout: 255 seconds)
2015-11-02T18:25:49Z shka: icholy: and it is not even always like that
2015-11-02T18:25:55Z shka: for instance see sort
2015-11-02T18:26:24Z vaporatorius__ joined #lisp
2015-11-02T18:26:26Z icholy: shka: thanks
2015-11-02T18:27:33Z icholy quit (Client Quit)
2015-11-02T18:28:36Z johann_ joined #lisp
2015-11-02T18:29:19Z vap1 quit (Ping timeout: 240 seconds)
2015-11-02T18:30:32Z ChanServ has set mode +o fe[nl]ix
2015-11-02T18:31:05Z fe[nl]ix changed the topic of #lisp to: Common Lisp, the #1=(programmable . #1#) programming language <http://cliki.net/> <http://paste.lisp.org/new> logs:<http://ccl.clozure.com/irc-logs/lisp/>|contact op if muted|SBCL 1.3.0, ASDF 3.1.6, CMUCL 21a, ECL 16.0.0, CFFI 0.16.0, cl-launch 4.1.4, flexi-streams 1.0.15, Hunchentoot 1.2.34, Drakma 2.0.1
2015-11-02T18:31:16Z JuanDaugherty quit (Remote host closed the connection)
2015-11-02T18:32:53Z kdas_ joined #lisp
2015-11-02T18:33:26Z johann_ quit (Ping timeout: 260 seconds)
2015-11-02T18:33:41Z quasus joined #lisp
2015-11-02T18:34:01Z remi`bd joined #lisp
2015-11-02T18:34:20Z xach quit (Ping timeout: 185 seconds)
2015-11-02T18:34:33Z kdas_ quit (Read error: Connection reset by peer)
2015-11-02T18:35:23Z kushal quit (Ping timeout: 250 seconds)
2015-11-02T18:36:12Z fraya joined #lisp
2015-11-02T18:36:28Z snv1 quit (Quit: Leaving.)
2015-11-02T18:36:54Z JuanDaugherty joined #lisp
2015-11-02T18:40:37Z askatasuna quit (Quit: WeeChat 1.3)
2015-11-02T18:42:20Z guicho quit (Quit: さようなら)
2015-11-02T18:44:02Z xach quit (Ping timeout: 183 seconds)
2015-11-02T18:44:17Z earl-ducaine quit (Ping timeout: 252 seconds)
2015-11-02T18:44:18Z faalentijn quit (Ping timeout: 260 seconds)
2015-11-02T18:45:33Z warweasle quit (Remote host closed the connection)
2015-11-02T18:46:44Z OrangeShark quit (Quit: Leaving)
2015-11-02T18:47:12Z phoe_krk joined #lisp
2015-11-02T18:47:44Z phoe_krk: hey #parens
2015-11-02T18:49:22Z BitPuffin quit (Ping timeout: 246 seconds)
2015-11-02T18:49:32Z fraya left #lisp
2015-11-02T18:51:30Z paddymahoney quit (Ping timeout: 240 seconds)
2015-11-02T18:54:28Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-02T18:55:22Z warweasle joined #lisp
2015-11-02T18:56:11Z pt1 quit (Remote host closed the connection)
2015-11-02T18:58:33Z reggy joined #lisp
2015-11-02T18:59:29Z Guest14 joined #lisp
2015-11-02T19:01:06Z shka quit (Remote host closed the connection)
2015-11-02T19:01:39Z shka joined #lisp
2015-11-02T19:01:40Z raphaelss quit (Read error: Connection reset by peer)
2015-11-02T19:01:45Z malbertife quit (Quit: Leaving)
2015-11-02T19:03:32Z jewel_ joined #lisp
2015-11-02T19:05:51Z ggole quit
2015-11-02T19:06:05Z Oddity joined #lisp
2015-11-02T19:06:36Z hiroakip joined #lisp
2015-11-02T19:07:09Z jewel quit (Ping timeout: 255 seconds)
2015-11-02T19:09:59Z solyd quit (Ping timeout: 240 seconds)
2015-11-02T19:11:15Z cadadar quit (Quit: Leaving.)
2015-11-02T19:11:21Z mnoonan joined #lisp
2015-11-02T19:11:49Z earl-ducaine joined #lisp
2015-11-02T19:12:08Z EvW joined #lisp
2015-11-02T19:14:45Z TDT quit (Quit: TDT)
2015-11-02T19:15:49Z earl-ducaine quit (Remote host closed the connection)
2015-11-02T19:17:10Z freehck` quit (Ping timeout: 240 seconds)
2015-11-02T19:18:15Z lispyone_ joined #lisp
2015-11-02T19:19:31Z jtza8 joined #lisp
2015-11-02T19:24:50Z aretecode joined #lisp
2015-11-02T19:24:55Z knobo1 joined #lisp
2015-11-02T19:25:52Z schaueho joined #lisp
2015-11-02T19:26:13Z fantazo joined #lisp
2015-11-02T19:26:46Z shka: is there any way to declare dynamicly checked type?
2015-11-02T19:26:48Z shka: that is
2015-11-02T19:26:55Z shka: i want to write something like that:
2015-11-02T19:27:37Z shka: (defun foo (a b) (declare (type (integer 0 b) a) (type (integer 0) b)) ...)
2015-11-02T19:27:55Z nyef: Ah... parametric types?
2015-11-02T19:27:57Z shka: without using explicit assertion
2015-11-02T19:28:06Z shka: perhaps?
2015-11-02T19:28:29Z fe[nl]ix: you have to say somewhere, what you want to check
2015-11-02T19:28:39Z shka: that's certeinly true
2015-11-02T19:28:47Z shka: and i know how i can do that
2015-11-02T19:29:02Z znpy joined #lisp
2015-11-02T19:29:11Z nyef: Looks like parametric types to me... Which I don't believe Common Lisp does, normally.
2015-11-02T19:29:20Z jackdaniel: https://common-lisp.net/project/cdr/document/5/index.html ?
2015-11-02T19:29:21Z johann_ joined #lisp
2015-11-02T19:29:25Z shka: basicly, add new class for my parameter, satisfy function, deftype… not thanks
2015-11-02T19:29:50Z shka: jackdaniel: key here is: dynamic checking
2015-11-02T19:30:07Z jackdaniel: for checking the type at runtime you have check-type
2015-11-02T19:30:42Z Shinmera: Type declarations are a compile time optimisation. It doesn't really make sense for them to be dynamic.
2015-11-02T19:32:18Z jackdaniel: shka: you may write macro which expands into (defun name (…) (check-type …) …)
2015-11-02T19:33:23Z k-stz: quicklisp.org is down?
2015-11-02T19:33:35Z Xach: Yes.
2015-11-02T19:33:47Z Xach: My hosting provider has an ongoing network problem. This is the first in many years.
2015-11-02T19:33:51Z shka: jackdaniel: but type still needs to be know at compile time
2015-11-02T19:33:55Z shka: Shinmera: i disagree
2015-11-02T19:34:08Z shka: well, technically speaking yes
2015-11-02T19:34:09Z johann_ quit (Ping timeout: 255 seconds)
2015-11-02T19:34:09Z shookees quit (Ping timeout: 252 seconds)
2015-11-02T19:34:10Z Shinmera: shka: What, that they're a compile time optimisation?
2015-11-02T19:34:13Z Shinmera: Because they are.
2015-11-02T19:34:15Z Xach: k-stz: beta.quicklisp.org is not down, so dist updates still work fine. it is just the html website that is hard to access.
2015-11-02T19:34:28Z shka: Shinmera: it's just part of the story
2015-11-02T19:34:38Z Shinmera: You can declare a superior type and then check-type the dynamic one.
2015-11-02T19:34:43Z k-stz: Xach: I just nicht the quicklisp.lisp
2015-11-02T19:34:47Z znpy quit (Ping timeout: 265 seconds)
2015-11-02T19:34:47Z Shinmera: But other than that it doesn't make sense.
2015-11-02T19:34:48Z jackdaniel: shka: you may make it (defun name (…) (declare …)* (check-type …)* …) – it's a macro after all
2015-11-02T19:34:53Z k-stz: *need my german seeps through
2015-11-02T19:34:56Z shka: for instance, you can use those to represent constraints for arguments
2015-11-02T19:35:03Z Shinmera: You should not.
2015-11-02T19:35:07Z Shinmera: Declarations are an optimisation.
2015-11-02T19:35:09Z Xach: k-stz: it is permanently at http://beta.quicklisp.org/quicklisp.lisp
2015-11-02T19:35:21Z k-stz: Xach thanks
2015-11-02T19:35:25Z shka: Shinmera: yes, let me repeat myself
2015-11-02T19:35:26Z Shinmera: They are a promise to the compiler and if you want to /check/ types, you should use check-type.
2015-11-02T19:35:34Z shka: i want to dynamicly generate and check type
2015-11-02T19:35:42Z shka: not because i want my program to run fast
2015-11-02T19:36:00Z shka: but to express clearly constraints
2015-11-02T19:36:05Z jackdaniel: I have that impression that you work against the language
2015-11-02T19:36:13Z Shinmera: Then just use check-type like everyone else?
2015-11-02T19:36:21Z shka: jackdaniel: not really, those are just asserts
2015-11-02T19:36:28Z shka: i can write macro to do that
2015-11-02T19:36:47Z jackdaniel: I trully have that impression! promise!
2015-11-02T19:36:51Z phoe_krk: wouldn't it be also working to make a simple :type :blahblah entry in a symbol-plist of whatever you want to check and then just check that wherever you'd like?
2015-11-02T19:37:28Z shka: Shinmera: once again, i want to have DYNAMIC type based on LEXICAL scope
2015-11-02T19:37:32Z Shinmera: If you morph an existing construct to do something else you're bound to make people who have to read your code hate you.
2015-11-02T19:37:59Z phoe_krk: it's amusingly easy to create new types that way, you simply grab a new keyword. and amusingly easy to check, you simply get/getf it from symbol plist.
2015-11-02T19:38:24Z yeticry quit (Read error: Connection reset by peer)
2015-11-02T19:38:26Z shka: phoe_krk: well, yes you can do it like this
2015-11-02T19:38:40Z shka: or define class that wraps two arguments
2015-11-02T19:38:45Z phoe_krk: shka: then what's the problem?
2015-11-02T19:38:48Z shka: add type
2015-11-02T19:38:58Z shka: add satisfies function
2015-11-02T19:39:18Z shka: phoe_krk: passing integers this way is kinda silly
2015-11-02T19:39:25Z yeticry joined #lisp
2015-11-02T19:39:31Z phoe_krk: why?
2015-11-02T19:39:46Z phoe_krk: integer is a type like anything else
2015-11-02T19:40:29Z shka: phoe_krk: do you really want to cons cell, put integer in and pass it that way?
2015-11-02T19:40:37Z Shinmera: shka: (unless (typep arg `(some ,thing ,dynamic)) (error "whoa nelly!"))
2015-11-02T19:40:39Z shka: it is not exactly efficient
2015-11-02T19:40:49Z phoe_krk: shka: I don't want to cons a cell
2015-11-02T19:41:01Z shka: Shinmera: yes, i know
2015-11-02T19:41:09Z phoe_krk: shka: I want to put an entry into the symbol's symbol-plist
2015-11-02T19:41:17Z shka: ok folks, i didn't want to get flamed
2015-11-02T19:41:36Z phoe_krk: no flame here, I'm just trying to cooperatively solve a problem
2015-11-02T19:41:37Z shka: i just wanted to know
2015-11-02T19:42:25Z shka: phoe_krk: well, you still need to build plist
2015-11-02T19:42:35Z shka: and than you will have to walk over it to get property
2015-11-02T19:42:42Z phoe_krk: shka: ummm...
2015-11-02T19:42:48Z phoe_krk: clhs symbol-plist
2015-11-02T19:42:48Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/f_symb_4.htm
2015-11-02T19:43:19Z phoe_krk: isn't it, like, symbol-plist is built against a symbol and you don't have to pass it around together with the argument?
2015-11-02T19:43:21Z phoe_krk: or am I wrong?
2015-11-02T19:43:27Z lisse_ quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-02T19:43:53Z phoe_krk: let me hack it up real quick
2015-11-02T19:44:03Z shka: phoe_krk: not explicitly
2015-11-02T19:45:59Z lisse joined #lisp
2015-11-02T19:48:17Z shka quit (Quit: Konversation terminated!)
2015-11-02T19:48:20Z phoe_krk: ...hm, this seems to work, as long as you pass a symbol and not a variable.
2015-11-02T19:48:59Z Ven_ joined #lisp
2015-11-02T19:49:14Z shookees joined #lisp
2015-11-02T19:49:38Z shka joined #lisp
2015-11-02T19:50:19Z wuzzz joined #lisp
2015-11-02T19:51:36Z shka: well, asserts works
2015-11-02T19:51:50Z shka: and btw
2015-11-02T19:51:59Z vydd quit (Ping timeout: 240 seconds)
2015-11-02T19:52:04Z shka: nyef: common lisp has parametric types
2015-11-02T19:52:12Z shka: and you can deftype it
2015-11-02T19:53:25Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-02T19:53:38Z Mon_Ouie quit (Ping timeout: 265 seconds)
2015-11-02T19:54:07Z shka quit (Read error: Connection reset by peer)
2015-11-02T19:54:08Z jtza8 quit (Ping timeout: 272 seconds)
2015-11-02T19:54:18Z shka joined #lisp
2015-11-02T19:55:21Z ASau joined #lisp
2015-11-02T19:55:31Z jtza8 joined #lisp
2015-11-02T19:56:13Z oleo_ joined #lisp
2015-11-02T19:57:10Z fridim_ joined #lisp
2015-11-02T19:58:54Z oleo quit (Ping timeout: 250 seconds)
2015-11-02T20:00:16Z schaueho quit (Ping timeout: 268 seconds)
2015-11-02T20:02:50Z sjl quit (Ping timeout: 240 seconds)
2015-11-02T20:02:55Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-02T20:04:30Z leafybasil joined #lisp
2015-11-02T20:05:04Z gaya- quit (Quit: Leaving.)
2015-11-02T20:05:37Z TDT joined #lisp
2015-11-02T20:05:48Z TMM joined #lisp
2015-11-02T20:08:29Z papachan is now known as papachan_
2015-11-02T20:08:41Z Guest14 joined #lisp
2015-11-02T20:09:31Z ryu0: the gentle book says that every List object (number, symbol, list) is an expression. this seems to imply that a function call expression, say (+ 3 4), has nested expressions in 3 and 4. is this correct?
2015-11-02T20:09:57Z phoe_krk: is atom an expression?
2015-11-02T20:10:05Z phoe_krk: I doubt
2015-11-02T20:10:22Z nyef: It's pretty much correct, though I don't know that I'd use that terminology.
2015-11-02T20:10:30Z phoe_krk: hm, then, correct
2015-11-02T20:10:55Z phoe_krk: https://en.wikipedia.org/wiki/S-expression#Use_in_Lisp
2015-11-02T20:10:58Z ryu0: it said numbers evaluate to themselves... that seems to imply they are expressions.
2015-11-02T20:11:49Z Shinmera: clhs glossary/form
2015-11-02T20:11:49Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/26_glo_f.htm#form
2015-11-02T20:12:01Z phoe_krk: yes, technically, an atom is a S-expression.
2015-11-02T20:12:21Z phoe_krk: and numbers eval to themselves.
2015-11-02T20:12:59Z phoe_krk: but from what I've seen people prefer to call atoms atoms
2015-11-02T20:13:01Z ryu0: i suspect there's more things that do this beyond what the book outlined...
2015-11-02T20:13:05Z antoszka: Not only numbers, there's a number of self-evaluating objects.
2015-11-02T20:13:13Z ryu0: T and NIL for example.
2015-11-02T20:13:14Z antoszka: http://www.lispworks.com/documentation/HyperSpec/Body/03_abac.htm
2015-11-02T20:13:14Z phoe_krk: nil, t, keywords, some others
2015-11-02T20:13:22Z fikusz quit (Quit: Leaving)
2015-11-02T20:13:27Z antoszka: Well, even strings.
2015-11-02T20:13:34Z phoe_krk: ^
2015-11-02T20:14:00Z ryu0: are quoted lists included as well?
2015-11-02T20:14:22Z fortitude: does anybody have a good way to examine macrolet macros?
2015-11-02T20:14:31Z Shinmera: quoted forms don't evaluate to themselves.
2015-11-02T20:14:40Z Petit_Dejeuner` joined #lisp
2015-11-02T20:14:40Z ryu0: okay.
2015-11-02T20:14:41Z Shinmera: They evaluate to the content of the quoted form.
2015-11-02T20:14:45Z fortitude: *macrolet macro expansions, that is
2015-11-02T20:14:50Z varjagg joined #lisp
2015-11-02T20:15:11Z antoszka: ryu0: Well, no, because (QUOTE (FOO BAR)) is not the same as (FOO BAR).
2015-11-02T20:15:34Z antoszka: ryu0: For the former of which a shorthand form is '(FOO BAR)
2015-11-02T20:15:45Z ryu0: yea, the book said so...
2015-11-02T20:16:11Z ryu0: shorthand for quote function or whatever it is exactly.
2015-11-02T20:16:25Z antoszka: Exactly that.
2015-11-02T20:16:56Z tmtwd quit (Ping timeout: 272 seconds)
2015-11-02T20:16:59Z Shinmera: quote is a special operator
2015-11-02T20:17:02Z antoszka: In scheme ` , are also shorthands for QUASIQUOTE and UNQUOTE respectively, but for whatever (historical) reason they only exist in shorthand form in Common Lisp.
2015-11-02T20:17:35Z Shinmera: clhs 3.1.2.1.2.1
2015-11-02T20:17:35Z specbot: Special Forms: http://www.lispworks.com/reference/HyperSpec/Body/03_ababa.htm
2015-11-02T20:18:23Z lisse joined #lisp
2015-11-02T20:18:43Z earl-ducaine joined #lisp
2015-11-02T20:19:58Z BlueRavenGT joined #lisp
2015-11-02T20:20:18Z ryu0: hm. not bad. figured out how to use apply, sortof, even though it isn't fully explained yet...
2015-11-02T20:20:26Z ryu0: err map.
2015-11-02T20:20:32Z phoe_krk: ...wouldn't it be possible to make a reader macro that implements QUASIQUOTE and UNQUOTE?
2015-11-02T20:20:33Z kaleun joined #lisp
2015-11-02T20:20:39Z ryu0: (map 'list 'sqrt '(1 4 9 16 25))
2015-11-02T20:20:44Z Raimondi joined #lisp
2015-11-02T20:20:44Z phoe_krk: just a very, very stupid idea.
2015-11-02T20:20:51Z jackdaniel: phoe_krk: there are such things
2015-11-02T20:20:58Z jackdaniel: check fare-quasiquotation for instance
2015-11-02T20:21:05Z phoe_krk: oh, thanks
2015-11-02T20:21:11Z jackdaniel: also some implementations provide extension for it
2015-11-02T20:21:22Z hiroakip quit (Ping timeout: 272 seconds)
2015-11-02T20:21:34Z Yuuhi quit (Remote host closed the connection)
2015-11-02T20:23:56Z cosmicexplorer joined #lisp
2015-11-02T20:24:11Z futpib quit (Ping timeout: 264 seconds)
2015-11-02T20:24:47Z cosmicex` joined #lisp
2015-11-02T20:26:53Z cosmicex` quit (Client Quit)
2015-11-02T20:26:59Z cosmicexplorer quit (Client Quit)
2015-11-02T20:27:55Z cosmicexplorer joined #lisp
2015-11-02T20:28:47Z fantazo quit (Ping timeout: 252 seconds)
2015-11-02T20:30:06Z johann_ joined #lisp
2015-11-02T20:30:34Z jtza8 quit (Ping timeout: 260 seconds)
2015-11-02T20:33:46Z hiroakip joined #lisp
2015-11-02T20:34:26Z johann_ quit (Ping timeout: 240 seconds)
2015-11-02T20:34:57Z sjl joined #lisp
2015-11-02T20:35:51Z OrangeShark joined #lisp
2015-11-02T20:37:17Z cadadar joined #lisp
2015-11-02T20:39:34Z gravicappa quit (Ping timeout: 260 seconds)
2015-11-02T20:49:56Z Jesin quit (Quit: Leaving)
2015-11-02T20:51:59Z spyrosoft joined #lisp
2015-11-02T20:52:38Z samssammerz quit (Quit: Leaving)
2015-11-02T20:53:34Z faalentijn joined #lisp
2015-11-02T20:59:32Z shka quit (Remote host closed the connection)
2015-11-02T20:59:54Z shka joined #lisp
2015-11-02T21:01:35Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-02T21:05:02Z gingerale quit (Remote host closed the connection)
2015-11-02T21:05:55Z shka quit (Remote host closed the connection)
2015-11-02T21:06:20Z shka joined #lisp
2015-11-02T21:06:57Z TDT quit (Quit: TDT)
2015-11-02T21:07:25Z TDT joined #lisp
2015-11-02T21:08:00Z easye-ipad joined #lisp
2015-11-02T21:08:03Z vlatkoB_ joined #lisp
2015-11-02T21:08:22Z guaqua: are there any known issues with building sbcl with debian wheezy? http://paste.lisp.org/display/158335
2015-11-02T21:08:33Z preacherAKAnd quit (Remote host closed the connection)
2015-11-02T21:08:58Z guaqua: it seems to fail on alloc.o, with something related to pseudo-atomic.h and thread.h
2015-11-02T21:09:42Z Shinmera: Probably better to ask in #sbcl.
2015-11-02T21:10:00Z guaqua: thanks, will ask there
2015-11-02T21:10:21Z preacherAKAnd joined #lisp
2015-11-02T21:10:27Z Ven_ quit (Read error: Connection reset by peer)
2015-11-02T21:10:43Z Xach: guaqua: what version?
2015-11-02T21:10:59Z EvW quit (Ping timeout: 240 seconds)
2015-11-02T21:12:14Z vlatkoB quit (Ping timeout: 260 seconds)
2015-11-02T21:12:19Z TDT quit (Quit: TDT)
2015-11-02T21:12:34Z easye-ipad quit (Client Quit)
2015-11-02T21:12:52Z Ven_ joined #lisp
2015-11-02T21:15:31Z shka quit (Remote host closed the connection)
2015-11-02T21:15:56Z shka joined #lisp
2015-11-02T21:15:56Z shka quit (Remote host closed the connection)
2015-11-02T21:16:11Z shka joined #lisp
2015-11-02T21:17:19Z EvW joined #lisp
2015-11-02T21:19:59Z knobo1 quit (Ping timeout: 240 seconds)
2015-11-02T21:20:19Z attila_lendvai joined #lisp
2015-11-02T21:21:09Z vlatkoB_ quit (Remote host closed the connection)
2015-11-02T21:25:44Z algae quit (Quit: leaving)
2015-11-02T21:27:21Z Ven_ quit (Read error: Connection reset by peer)
2015-11-02T21:29:43Z lisse joined #lisp
2015-11-02T21:30:53Z johann_ joined #lisp
2015-11-02T21:31:10Z hiroakip quit (Ping timeout: 240 seconds)
2015-11-02T21:33:05Z shka quit (Quit: Konversation terminated!)
2015-11-02T21:33:57Z Ven_ joined #lisp
2015-11-02T21:33:57Z shka joined #lisp
2015-11-02T21:34:40Z grouzen quit (Ping timeout: 250 seconds)
2015-11-02T21:35:06Z johann_ quit (Ping timeout: 250 seconds)
2015-11-02T21:37:29Z grouzen joined #lisp
2015-11-02T21:37:59Z shka quit (Client Quit)
2015-11-02T21:40:25Z Ven_ quit (Read error: Connection reset by peer)
2015-11-02T21:44:35Z grouzen quit (Ping timeout: 244 seconds)
2015-11-02T21:45:49Z Ven_ joined #lisp
2015-11-02T21:48:18Z otwieracz: How can I map through plist?
2015-11-02T21:48:44Z otwieracz: Like (mapcar (lambda (key value) …))
2015-11-02T21:49:59Z Xach: otwieracz: loop presents one easy way. (loop for (key value) on plist by #'cddr ...)
2015-11-02T21:50:16Z Draz joined #lisp
2015-11-02T21:50:32Z otwieracz: hmm
2015-11-02T21:50:41Z otwieracz: Could you explain this?
2015-11-02T21:51:11Z Xach: otwieracz: What would you like to know?
2015-11-02T21:51:26Z otwieracz: The „by” part looks a bit weird to me.
2015-11-02T21:51:50Z djinni` joined #lisp
2015-11-02T21:51:53Z Xach: otwieracz: BY specifies the function to call on the iterated list to produce the next value to process
2015-11-02T21:52:24Z otwieracz: hmm.
2015-11-02T21:52:45Z zwdr quit (Ping timeout: 255 seconds)
2015-11-02T21:53:03Z otwieracz: How can I collect those key-values back to plist?
2015-11-02T21:53:21Z Xach: otwieracz: instead of "...", use: collect key collect value
2015-11-02T21:53:39Z zwdr joined #lisp
2015-11-02T21:54:04Z leafybasil quit
2015-11-02T21:56:02Z Ven_ quit (Read error: Connection reset by peer)
2015-11-02T21:56:04Z otwieracz: thanks!
2015-11-02T21:56:12Z Karl_Dscc joined #lisp
2015-11-02T21:57:30Z Ven_ joined #lisp
2015-11-02T21:57:38Z namespace quit (Quit: leaving)
2015-11-02T21:59:23Z preacherAKAnd quit (Quit: Konversation terminated!)
2015-11-02T22:01:21Z Viaken joined #lisp
2015-11-02T22:02:58Z axion quit (Quit: WeeChat 1.2)
2015-11-02T22:04:17Z axion joined #lisp
2015-11-02T22:05:29Z axion quit (Client Quit)
2015-11-02T22:05:52Z shookees quit (Ping timeout: 272 seconds)
2015-11-02T22:05:52Z axion joined #lisp
2015-11-02T22:07:14Z TDT joined #lisp
2015-11-02T22:09:04Z Bicyclidine joined #lisp
2015-11-02T22:10:35Z phoe_krk: ...plists really, *really* do not handle having strings as keys
2015-11-02T22:10:37Z faalentijn quit (Ping timeout: 246 seconds)
2015-11-02T22:10:56Z phoe_krk: you have to change every single function so it doesn't test against #'eq but something different
2015-11-02T22:11:26Z Ven_ quit (Read error: Connection reset by peer)
2015-11-02T22:11:52Z White_Flame: the default test tends to be #'eql, not #'eq
2015-11-02T22:12:01Z lispyone_ quit (Remote host closed the connection)
2015-11-02T22:12:08Z Xach: in getf, it is EQ.
2015-11-02T22:12:10Z Shinmera: getf is specified to test with EQ
2015-11-02T22:12:14Z Bicyclidine: getf is old and weird.
2015-11-02T22:12:39Z White_Flame: the spec says "identical"
2015-11-02T22:12:50Z Shinmera: Yes, and identical is specified to be EQ
2015-11-02T22:13:06Z Shinmera: clhs glossary/identical
2015-11-02T22:13:06Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/26_glo_i.htm#identical
2015-11-02T22:13:16Z White_Flame: ok, I read the image saving/loading stuff recently
2015-11-02T22:13:30Z OrangeShark quit (Read error: Connection reset by peer)
2015-11-02T22:13:34Z phoe_krk: ...I dislike alists because technically it's possible to overwrite values by appending a new one to the front, not modifying the former
2015-11-02T22:13:42Z phoe_krk: do common functions do that to alists?
2015-11-02T22:13:46Z Bicyclidine: phoe_krk: you know you can do that with plists, right?
2015-11-02T22:13:46Z White_Flame: phoe_krk: but that's the advantage of them...
2015-11-02T22:13:46Z Xach: phoe_krk: it is the same for plists.
2015-11-02T22:14:04Z Xach: and it's also a very nice property for certain kinds of code.
2015-11-02T22:14:06Z White_Flame: and you can setf car for an alist as well
2015-11-02T22:14:06Z wtbrk quit (Ping timeout: 250 seconds)
2015-11-02T22:14:07Z phoe_krk: White_Flame: so they can grow to arbitrary size?
2015-11-02T22:14:19Z White_Flame: phoe_krk: so you can enter & exit scoped bindings
2015-11-02T22:14:21Z phoe_krk: Bicyclidine: that's right, didn't think of that before.
2015-11-02T22:14:25Z Xach: It nicely mirrors temporary shadowing.
2015-11-02T22:14:55Z Bicyclidine: it is in fact common for plists, since most plists in lisp now are keyword arguments, and (apply #'some-fun :key value kvs-from-elsewhere) is common
2015-11-02T22:14:59Z phoe_krk: Xach: I don't want to end up with an alist that hosts only a fixed number of values but can cons itself to be arbitrarily large
2015-11-02T22:15:18Z White_Flame: ok, "same" implies eql, "identical" implies eq.  had that overlapped
2015-11-02T22:15:40Z Xach: phoe_krk: that is a noble goal, along the lines of not wanting to build a boat with a hole in the bottom
2015-11-02T22:15:50Z zeroish quit (Read error: Connection reset by peer)
2015-11-02T22:16:03Z Xach: with practice, it becomes less likely
2015-11-02T22:16:11Z phoe_krk: Xach: I don't see the reference. You wouldn't build a boat with a hole in the bottom and you wouldn't create a data structure with an obvious possibility of a memory leak.
2015-11-02T22:16:20Z Bicyclidine: White_Flame: and compile file stuff has "similar" which is completely different. it is pretty good.
2015-11-02T22:16:23Z phoe_krk: s/create/design/
2015-11-02T22:16:50Z pyx joined #lisp
2015-11-02T22:16:55Z pyx quit (Client Quit)
2015-11-02T22:17:06Z Bicyclidine: saying alists have a possibility of a memory leak makes as much sense as saying arrays have a possibility of a memory leak
2015-11-02T22:17:07Z White_Flame: phoe_krk: some features are unbounded in memory use, but still practical
2015-11-02T22:17:12Z White_Flame: like scopes
2015-11-02T22:17:17Z Bicyclidine: you can just put stuff in an array, and it sticks around as long as you use the array!
2015-11-02T22:17:54Z phoe_krk: Bicyclidine: you can't shadow values with an array by sticking some more memory over it
2015-11-02T22:18:26Z White_Flame: phoe_krk: sure, any search that allows duplicates from the test will allow shadowing
2015-11-02T22:19:26Z White_Flame: a plist built & searched from the head is very comparable to an extendable vector searched from the tail
2015-11-02T22:19:29Z Bicyclidine: well, maybe not array, a FIFO or stack
2015-11-02T22:20:38Z OrangeShark joined #lisp
2015-11-02T22:20:40Z Bicyclidine: i mean, you could conceivably forget to pop everything, and up with an infinite unused part
2015-11-02T22:20:45Z Bicyclidine: but it doesn't happen very often
2015-11-02T22:21:08Z White_Flame: the only time I've ever had a remote possibility of that was a tail-recursing main function
2015-11-02T22:21:47Z White_Flame: and there, I just had to tell the compiler to TCO it even in safe/debug/slow configurations
2015-11-02T22:22:15Z phoe_krk: ...I don't need the ability or even a possibility of shadowing. I need a simple map.
2015-11-02T22:22:32Z White_Flame: then use a hashtable?
2015-11-02T22:22:54Z phoe_krk: White_Flame: sounds overly complex, plus I'll need to search both by the key and the value.
2015-11-02T22:22:56Z White_Flame: it has better support for destructive modifications
2015-11-02T22:22:57Z Shinmera: Or just write some simple wrappers around an alist that ensure size or duplicate-less-ness.
2015-11-02T22:23:04Z phoe_krk: I'll just use alist and ensure that, Shinmera
2015-11-02T22:23:06Z Xach: Or use an alist, and access it in a way that maintains your required properties.
2015-11-02T22:23:12Z scottj left #lisp
2015-11-02T22:23:20Z phoe_krk: First check if a value exists, if yes, modify it, if not, push a new acons
2015-11-02T22:23:32Z White_Flame: clhs pushnew
2015-11-02T22:23:32Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/m_pshnew.htm
2015-11-02T22:23:37Z Xach: phoe_krk: that is a very typical pattern
2015-11-02T22:23:37Z Bicyclidine: i mean, hashtables already exist in lisp, you don't need to sweat the complexity
2015-11-02T22:23:48Z Xach: keep in mind the principles of http://xach.com/lisp/security/
2015-11-02T22:23:56Z White_Flame: well, for optimization you could do it yourself, rather than try to build on that
2015-11-02T22:24:14Z White_Flame: Bicyclidine: searching by key, not just value, is a valid reason to move from hashtables
2015-11-02T22:24:17Z varjagg quit (Ping timeout: 252 seconds)
2015-11-02T22:24:20Z White_Flame: if performance isn't a concern
2015-11-02T22:24:24Z Xach: (that is a joke)
2015-11-02T22:24:47Z White_Flame: if performance is a concern, then having 2 mirrored hashtables (k->v, v->k) could work
2015-11-02T22:24:51Z Bicyclidine: is this from an actual book?
2015-11-02T22:25:53Z Shinmera laughs heartily
2015-11-02T22:25:53Z badkins quit (Read error: Connection reset by peer)
2015-11-02T22:26:03Z Xach: Bicyclidine: yes. sold for real money.
2015-11-02T22:26:11Z phoe_krk: Xach: what the hell is this
2015-11-02T22:26:16Z Bicyclidine: a computer wrote this, right? i should get in on this market
2015-11-02T22:26:21Z White_Flame: wat
2015-11-02T22:27:06Z phoe_krk: Xach: people get rich over such things, correct?
2015-11-02T22:27:31Z Xach: Everything I've heard suggests that technical books are not an effective path to riches.
2015-11-02T22:27:45Z phoe_krk: then wtf is this
2015-11-02T22:27:55Z Shinmera: It's funny, that's what.
2015-11-02T22:27:56Z Bicyclidine: if you released this as an ebook you could maybe get a few bucks from people who don't know better
2015-11-02T22:28:04Z Bicyclidine: like those people who sell wikipedia articles on amazon
2015-11-02T22:28:09Z White_Flame: people get paid over such things, doubtful they get rich, so there's still incentive to crank out garbage
2015-11-02T22:29:31Z Xach: heh, the reviews on http://www.amazon.com/Programmers-Ultimate-Security-DeskRef-encyclopedia/dp/1932266720 are from Peter Seibel and nikodemus
2015-11-02T22:30:02Z White_Flame: "Don't buy unless you intend to sue the author. " :-D
2015-11-02T22:30:41Z Xach put up those screenshots 10 years ago, finds them funny on an annual basis
2015-11-02T22:31:03Z Shinmera: 32$ for Kindle, what a bargain!
2015-11-02T22:31:59Z johann_ joined #lisp
2015-11-02T22:34:06Z faalentijn joined #lisp
2015-11-02T22:36:14Z johann_ quit (Ping timeout: 260 seconds)
2015-11-02T22:37:28Z quazimodo joined #lisp
2015-11-02T22:37:32Z quazimod1 joined #lisp
2015-11-02T22:38:38Z k-stz quit (Remote host closed the connection)
2015-11-02T22:39:21Z knobo1 joined #lisp
2015-11-02T22:39:32Z quazimodo quit (Remote host closed the connection)
2015-11-02T22:39:32Z quazimod1 quit (Remote host closed the connection)
2015-11-02T22:39:40Z quazimodo joined #lisp
2015-11-02T22:40:37Z lispyone_ joined #lisp
2015-11-02T22:41:05Z k-stz joined #lisp
2015-11-02T22:44:46Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-02T22:45:25Z ajtulloch joined #lisp
2015-11-02T22:46:22Z Petit_Dejeuner`: "Ensure that only one instance of this function can be called at any given moment." Uh.
2015-11-02T22:47:42Z briantrice joined #lisp
2015-11-02T22:48:06Z Petit_Dejeuner`: nreverse encryption
2015-11-02T22:50:59Z LiamH quit (Quit: Leaving.)
2015-11-02T22:52:09Z ajf- joined #lisp
2015-11-02T22:55:50Z mrSpec quit (Remote host closed the connection)
2015-11-02T22:56:06Z TDT quit (Quit: TDT)
2015-11-02T22:56:58Z warweasle quit (Remote host closed the connection)
2015-11-02T22:58:26Z zeroish joined #lisp
2015-11-02T22:58:32Z ajtulloch quit (Read error: Connection reset by peer)
2015-11-02T22:58:42Z ajtulloch joined #lisp
2015-11-02T23:01:46Z Shinmera quit (Quit: しつれいしなければならないんです。)
2015-11-02T23:02:10Z theethicalegoist joined #lisp
2015-11-02T23:03:01Z ajtulloch quit (Remote host closed the connection)
2015-11-02T23:07:24Z badkins joined #lisp
2015-11-02T23:08:04Z theethicalegoist quit (Quit: Leaving)
2015-11-02T23:08:25Z fridim_ quit (Ping timeout: 265 seconds)
2015-11-02T23:10:30Z ivan4th joined #lisp
2015-11-02T23:11:58Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-02T23:12:31Z znpy joined #lisp
2015-11-02T23:12:38Z Ven_ joined #lisp
2015-11-02T23:13:22Z OrangeShark quit (Read error: Connection reset by peer)
2015-11-02T23:13:49Z cadadar quit (Quit: Leaving.)
2015-11-02T23:15:04Z lisse joined #lisp
2015-11-02T23:17:34Z Jesin joined #lisp
2015-11-02T23:19:34Z OrangeShark joined #lisp
2015-11-02T23:19:39Z wuzzz quit (Ping timeout: 246 seconds)
2015-11-02T23:21:30Z Ven_ quit (Ping timeout: 260 seconds)
2015-11-02T23:24:47Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-02T23:25:38Z lisse joined #lisp
2015-11-02T23:25:54Z stepnem quit (Ping timeout: 255 seconds)
2015-11-02T23:26:27Z angavrilov quit (Remote host closed the connection)
2015-11-02T23:27:06Z tsoutseki quit (Quit: Leaving)
2015-11-02T23:28:25Z s00pcan quit (Remote host closed the connection)
2015-11-02T23:28:25Z lispyone_ quit (Remote host closed the connection)
2015-11-02T23:29:16Z s00pcan joined #lisp
2015-11-02T23:32:18Z spyrosoft left #lisp
2015-11-02T23:32:23Z johann_ joined #lisp
2015-11-02T23:34:40Z Nikotiini quit (Remote host closed the connection)
2015-11-02T23:35:30Z cosmicexplorer quit (Ping timeout: 260 seconds)
2015-11-02T23:36:46Z johann_ quit (Ping timeout: 240 seconds)
2015-11-02T23:37:15Z mordocai quit (Remote host closed the connection)
2015-11-02T23:45:29Z phoe_krk: Petit_Dejeuner`: isn't it almost like "encrypting" something with rot13?
2015-11-02T23:46:18Z Bicyclidine: more like encrypting something with a fish
2015-11-02T23:48:56Z earl-ducaine quit (Remote host closed the connection)
2015-11-02T23:49:24Z ajtulloch joined #lisp
2015-11-02T23:51:55Z zacharias quit (Ping timeout: 252 seconds)
2015-11-02T23:52:27Z ajtulloch quit (Remote host closed the connection)
2015-11-02T23:54:24Z ajtulloch joined #lisp
2015-11-02T23:55:09Z White_Flame: I think a relevant stupid security move is more like "keep a magic string backwards in memory".  However a desctructive reverse is not applicable to that situation
2015-11-02T23:59:21Z briantrice quit (Quit: briantrice)
2015-11-03T00:05:51Z cluck joined #lisp
2015-11-03T00:07:11Z k-stz quit (Remote host closed the connection)
2015-11-03T00:07:26Z znpy quit (Ping timeout: 240 seconds)
2015-11-03T00:07:41Z vhost- is now known as dmk
2015-11-03T00:08:07Z dmk is now known as dmv
2015-11-03T00:09:21Z ajtulloch quit (Remote host closed the connection)
2015-11-03T00:13:19Z ajtulloch joined #lisp
2015-11-03T00:13:25Z jason_m joined #lisp
2015-11-03T00:14:49Z phoe_krk: Why?
2015-11-03T00:14:54Z phoe_krk: Destructive reverse the magic string.
2015-11-03T00:14:59Z phoe_krk: There, security problem solved.
2015-11-03T00:15:13Z phoe_krk: ...with a "hey we need to cryptanalyze that" problem emerging.
2015-11-03T00:16:05Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T00:17:08Z remi`bd quit (Quit: leaving)
2015-11-03T00:17:35Z Karl_Dscc quit (Remote host closed the connection)
2015-11-03T00:17:55Z heddwch joined #lisp
2015-11-03T00:17:56Z Ven_ joined #lisp
2015-11-03T00:18:00Z lispyone_ joined #lisp
2015-11-03T00:18:01Z ajtulloch quit (Ping timeout: 265 seconds)
2015-11-03T00:18:17Z ajtulloch joined #lisp
2015-11-03T00:20:29Z TDT joined #lisp
2015-11-03T00:22:40Z papachan_ is now known as papachan
2015-11-03T00:22:48Z ajf- quit (Ping timeout: 250 seconds)
2015-11-03T00:25:01Z Ven_ quit (Ping timeout: 246 seconds)
2015-11-03T00:29:11Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-03T00:30:16Z fortitude quit (Quit: Leaving)
2015-11-03T00:33:25Z johann_ joined #lisp
2015-11-03T00:36:26Z JammyHammy quit (Read error: Connection reset by peer)
2015-11-03T00:37:17Z bb010g joined #lisp
2015-11-03T00:38:30Z johann_ quit (Ping timeout: 272 seconds)
2015-11-03T00:40:22Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-03T00:40:39Z harish_ quit (Ping timeout: 240 seconds)
2015-11-03T00:40:44Z ogamita joined #lisp
2015-11-03T00:42:50Z tsoutseki joined #lisp
2015-11-03T00:45:30Z reggy quit (Ping timeout: 240 seconds)
2015-11-03T00:46:34Z reggy joined #lisp
2015-11-03T00:47:33Z jleija joined #lisp
2015-11-03T00:48:18Z jleija quit (Client Quit)
2015-11-03T00:48:36Z jleija joined #lisp
2015-11-03T00:49:10Z pjb: phoe_krk: yes, I read the CLHS as meaning that it should signal an error. This is why I have a com.informatimago.common-lisp.lisp-reader.package:rename-package to remove the name from the old package before assigning it to the new package.  I'd admit it's a little anal, but I didn't write the standard.
2015-11-03T00:50:57Z Petit_Dejeuner` quit (Ping timeout: 255 seconds)
2015-11-03T00:50:58Z pjb: I mean, cf. how com.informatimago.common-lisp.cesarum.package:add-nickname does it.
2015-11-03T00:52:20Z BlueRavenGT quit (Ping timeout: 265 seconds)
2015-11-03T00:52:43Z Petit_Dejeuner` joined #lisp
2015-11-03T00:57:03Z phoe_krk: https://twitter.com/BobRossGameDev/status/660894018964844545
2015-11-03T00:57:07Z phoe_krk: this is wonderfully lispy
2015-11-03T00:58:20Z pjb: ryu0: there are FOUR rounding functions in CL, so just choose the one that matches your pre-conceptions!  TRUNCATE ROUND FLOOR CEILING
2015-11-03T00:59:21Z _sjs quit (Ping timeout: 268 seconds)
2015-11-03T00:59:57Z briantrice joined #lisp
2015-11-03T01:01:28Z tetheno joined #lisp
2015-11-03T01:01:41Z briantrice quit (Client Quit)
2015-11-03T01:02:26Z Bicyclidine quit (Ping timeout: 268 seconds)
2015-11-03T01:02:58Z ajtulloch quit (Ping timeout: 265 seconds)
2015-11-03T01:03:01Z pjb: ryu0: if you write an application, it's usually as easy to target conforming CL and portability libraries than to target implementation specific APIs.  I would advise you to choose conforming Cl and portability libraries over implementation and platform specific APIs unless you really cannot do otherwise.
2015-11-03T01:03:54Z pillton: Or write it such that addressing portability later is easy.
2015-11-03T01:03:58Z zacharias joined #lisp
2015-11-03T01:04:33Z tetheno quit (Client Quit)
2015-11-03T01:04:46Z Zabriskie joined #lisp
2015-11-03T01:04:54Z pillton: In my experience, Bike has already done it. :)
2015-11-03T01:09:36Z phoe_krk: pjb: I was so confused about these rounding functions at first.
2015-11-03T01:13:17Z tsoutseki quit (Quit: Leaving)
2015-11-03T01:15:53Z lispyone_ quit (Remote host closed the connection)
2015-11-03T01:16:51Z briantrice joined #lisp
2015-11-03T01:18:18Z lispyone_ joined #lisp
2015-11-03T01:21:05Z yrdz quit (Remote host closed the connection)
2015-11-03T01:21:18Z pjb: jackdaniel: using both a type declaration and a check-type on the same variable with the same type is dumb, because the type declaration implies that the check-type is dead code and therefore not generated!
2015-11-03T01:21:20Z briantrice quit (Client Quit)
2015-11-03T01:21:20Z yrdz joined #lisp
2015-11-03T01:21:40Z Ven_ joined #lisp
2015-11-03T01:22:27Z pjb: jackdaniel: more generally, if (subtypep t1 t2) then (locally (declare (type t1 x)) (check-type x t2)) makes the check-type call dead code.
2015-11-03T01:22:56Z pjb: Never use declare type.  Use check-type.
2015-11-03T01:23:43Z pjb: Note: the use of check-type, notably in inlined functions, doesn't prevent the compiler to avoid generating the type check, if it can determine that the variable is always bound to a value of the given type.
2015-11-03T01:25:30Z aretecode quit (Ping timeout: 240 seconds)
2015-11-03T01:29:02Z lispyone_ quit (Remote host closed the connection)
2015-11-03T01:29:06Z Ven_ quit (Ping timeout: 240 seconds)
2015-11-03T01:31:59Z Petit_Dejeuner quit (Ping timeout: 264 seconds)
2015-11-03T01:33:52Z johann_ joined #lisp
2015-11-03T01:36:33Z BitPuffin|osx joined #lisp
2015-11-03T01:37:49Z EvW quit (Ping timeout: 246 seconds)
2015-11-03T01:38:07Z johann_ quit (Ping timeout: 244 seconds)
2015-11-03T01:38:10Z scymtym_ quit (Ping timeout: 246 seconds)
2015-11-03T01:39:04Z Bicyclidine joined #lisp
2015-11-03T01:41:46Z Petit_Dejeuner` quit (Ping timeout: 240 seconds)
2015-11-03T01:42:09Z FreeBirdLjj joined #lisp
2015-11-03T01:42:28Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-03T01:43:01Z FreeBirdLjj joined #lisp
2015-11-03T01:43:19Z cyphase quit (Ping timeout: 240 seconds)
2015-11-03T01:43:57Z trinitr0n quit (Quit: Lost terminal)
2015-11-03T01:45:10Z cyphase joined #lisp
2015-11-03T01:45:23Z sunwukong joined #lisp
2015-11-03T01:45:28Z finder joined #lisp
2015-11-03T01:45:40Z finder quit (Client Quit)
2015-11-03T01:46:15Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-03T01:46:23Z Bicyclidine quit (Ping timeout: 244 seconds)
2015-11-03T01:47:30Z trinitr0n joined #lisp
2015-11-03T01:48:23Z Bicyclidine joined #lisp
2015-11-03T01:48:26Z lisse joined #lisp
2015-11-03T01:48:36Z trinitr0n quit (Client Quit)
2015-11-03T01:52:28Z trinitr0n joined #lisp
2015-11-03T01:53:18Z trinitr0n quit (Client Quit)
2015-11-03T01:54:27Z trinitr0n joined #lisp
2015-11-03T01:55:38Z trinitr0n quit (Client Quit)
2015-11-03T01:56:35Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-03T01:58:33Z radioninja quit (Ping timeout: 265 seconds)
2015-11-03T01:58:46Z ASau quit (Ping timeout: 260 seconds)
2015-11-03T01:58:51Z trinitr0n joined #lisp
2015-11-03T02:02:50Z harish_ joined #lisp
2015-11-03T02:07:23Z Bicyclidine quit (Ping timeout: 264 seconds)
2015-11-03T02:07:47Z mordocai joined #lisp
2015-11-03T02:08:26Z davidfurman quit (Ping timeout: 272 seconds)
2015-11-03T02:09:10Z DeadTrickster quit (Ping timeout: 240 seconds)
2015-11-03T02:09:32Z radioninja joined #lisp
2015-11-03T02:09:33Z DeadTrickster joined #lisp
2015-11-03T02:09:35Z fitzsim joined #lisp
2015-11-03T02:13:53Z Bicyclidine joined #lisp
2015-11-03T02:14:17Z cpc26 joined #lisp
2015-11-03T02:16:06Z quasus quit (Ping timeout: 240 seconds)
2015-11-03T02:19:22Z cpc26_ joined #lisp
2015-11-03T02:20:31Z cpc26 quit (Ping timeout: 246 seconds)
2015-11-03T02:22:23Z Bicyclidine quit (Ping timeout: 264 seconds)
2015-11-03T02:25:00Z _sjs joined #lisp
2015-11-03T02:25:20Z yaewa joined #lisp
2015-11-03T02:27:04Z moei quit (Ping timeout: 265 seconds)
2015-11-03T02:29:13Z Bicyclidine joined #lisp
2015-11-03T02:34:38Z johann_ joined #lisp
2015-11-03T02:36:15Z zacharias_ joined #lisp
2015-11-03T02:36:47Z Bicyclidine quit (Ping timeout: 268 seconds)
2015-11-03T02:38:00Z cmoney joined #lisp
2015-11-03T02:39:05Z johann_ quit (Ping timeout: 244 seconds)
2015-11-03T02:39:24Z zacharias quit (Ping timeout: 255 seconds)
2015-11-03T02:42:10Z phoe_krk: pjb: I have this defnickname somewhat working, though I'll be changing the structure from plist to alist as getf doesn't work well with strings (they don't compare with #'eq).
2015-11-03T02:42:22Z phoe_krk: maybe in 3-4 days I'll find the time to overhaul that.
2015-11-03T02:42:54Z aap_ joined #lisp
2015-11-03T02:43:57Z ogamita quit (Quit: ogamita)
2015-11-03T02:45:38Z pjb: You can write your own accessors.
2015-11-03T02:46:23Z aap quit (Ping timeout: 264 seconds)
2015-11-03T02:47:19Z phoe_krk: pjb: I know, but I ended up finding it's too much of a hassle
2015-11-03T02:47:28Z pjb: (defun pll-getf (pll indicator &key default (test 'eql) (key 'identity)) (loop :for (k v) :on pll :when (funcall test indicator (funcall key k)) :do (return v) :finally (return default)))
2015-11-03T02:47:31Z phoe_krk: general assoc and rassoc will work for me.
2015-11-03T02:47:36Z pjb: a one liner is too much of a hassle???
2015-11-03T02:47:39Z pjb: what the fuck?
2015-11-03T02:48:01Z cmoney quit (Remote host closed the connection)
2015-11-03T02:48:08Z BlueRavenGT joined #lisp
2015-11-03T02:48:30Z phoe_krk: I'm a beginning lisper and right now one-liners like these are actually 10+ minutes of research for me. I want to make it work right now and later I'll think up my own way of doing it
2015-11-03T02:55:50Z Draz quit (Quit: Leaving)
2015-11-03T02:56:24Z cpc26_ quit (Remote host closed the connection)
2015-11-03T02:56:44Z cpc26 joined #lisp
2015-11-03T03:02:34Z loke: phoe_krk: In general, using alists is more common (and easier to read)
2015-11-03T03:08:50Z joshe joined #lisp
2015-11-03T03:10:23Z lisse joined #lisp
2015-11-03T03:11:56Z Ukari joined #lisp
2015-11-03T03:12:18Z yaewa quit (Quit: Leaving...)
2015-11-03T03:16:49Z cmoney joined #lisp
2015-11-03T03:19:54Z s00pcan quit (Ping timeout: 255 seconds)
2015-11-03T03:20:04Z Zabriskie quit (Quit: This computer has gone to sleep)
2015-11-03T03:21:36Z s00pcan joined #lisp
2015-11-03T03:22:23Z jleija quit (Ping timeout: 252 seconds)
2015-11-03T03:23:45Z oleba` joined #lisp
2015-11-03T03:24:28Z jleija joined #lisp
2015-11-03T03:24:50Z oleba quit (Ping timeout: 240 seconds)
2015-11-03T03:25:04Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T03:27:05Z heddwch joined #lisp
2015-11-03T03:28:58Z zophy joined #lisp
2015-11-03T03:28:59Z jleija quit (Ping timeout: 264 seconds)
2015-11-03T03:33:59Z aleamb quit (Ping timeout: 240 seconds)
2015-11-03T03:35:16Z Ven_ joined #lisp
2015-11-03T03:35:31Z briantrice joined #lisp
2015-11-03T03:35:36Z Oladon joined #lisp
2015-11-03T03:35:43Z johann_ joined #lisp
2015-11-03T03:36:18Z TDT quit (Quit: TDT)
2015-11-03T03:37:38Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T03:38:04Z hqingyi joined #lisp
2015-11-03T03:38:07Z cmoney quit (Remote host closed the connection)
2015-11-03T03:38:36Z heddwch joined #lisp
2015-11-03T03:39:00Z anderoonies joined #lisp
2015-11-03T03:39:06Z anderoonies quit (Client Quit)
2015-11-03T03:40:03Z johann_ quit (Ping timeout: 265 seconds)
2015-11-03T03:40:09Z Ven_ quit (Ping timeout: 255 seconds)
2015-11-03T03:43:17Z jason_m quit (Ping timeout: 252 seconds)
2015-11-03T03:43:47Z xrash joined #lisp
2015-11-03T03:45:35Z ebrasca joined #lisp
2015-11-03T03:46:57Z aleamb joined #lisp
2015-11-03T03:47:54Z Bahman joined #lisp
2015-11-03T03:48:01Z badkins quit (Remote host closed the connection)
2015-11-03T03:48:16Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T03:54:11Z heddwch joined #lisp
2015-11-03T03:57:09Z PlasmaStar quit (Max SendQ exceeded)
2015-11-03T03:57:35Z PlasmaStar joined #lisp
2015-11-03T03:59:23Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T04:00:36Z heddwch joined #lisp
2015-11-03T04:01:51Z Bahman quit (Quit: Ave atque vale)
2015-11-03T04:03:47Z beach joined #lisp
2015-11-03T04:03:55Z beach: Good morning everyone!
2015-11-03T04:04:22Z blubjr: hi beach
2015-11-03T04:13:21Z White_Flame: re
2015-11-03T04:16:32Z kp666 joined #lisp
2015-11-03T04:21:53Z Bahman joined #lisp
2015-11-03T04:24:27Z beach: White_Flame: Were you the one suggesting porting LLVM to Common Lisp?
2015-11-03T04:24:47Z White_Flame: I thought it would be an interesting idea
2015-11-03T04:24:51Z White_Flame: nothing more than that
2015-11-03T04:24:59Z beach: I think it IS an interesting idea.
2015-11-03T04:25:16Z White_Flame: I also think it could be made much smaller in the process
2015-11-03T04:25:16Z beach: Right, I didn't mean to hold you to it. :)
2015-11-03T04:25:23Z beach: Definitely so.
2015-11-03T04:25:50Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-03T04:26:12Z beach: And it is a well-defined project.  No need to invent a specification.
2015-11-03T04:30:19Z cyphase quit (Ping timeout: 240 seconds)
2015-11-03T04:31:00Z cmoney joined #lisp
2015-11-03T04:33:06Z BitPuffin|osx quit (Ping timeout: 260 seconds)
2015-11-03T04:33:28Z cmoney quit (Remote host closed the connection)
2015-11-03T04:33:59Z papachan is now known as papachan_
2015-11-03T04:36:08Z johann_ joined #lisp
2015-11-03T04:36:44Z Ven_ joined #lisp
2015-11-03T04:37:37Z cmoney joined #lisp
2015-11-03T04:40:27Z johann_ quit (Ping timeout: 255 seconds)
2015-11-03T04:40:33Z phf: we can beat those javascript guys at their own game
2015-11-03T04:40:43Z hqingyi quit (Remote host closed the connection)
2015-11-03T04:41:01Z Ven_ quit (Ping timeout: 244 seconds)
2015-11-03T04:41:51Z Meow-J joined #lisp
2015-11-03T04:42:26Z beach: phf: What's your plan for doing that?
2015-11-03T04:43:37Z phf: i will run clang on top of llvm on top of cmucl in order to easily integrate with c++ software
2015-11-03T04:44:17Z phf: of course i meant to say clasp rather then clang
2015-11-03T04:47:23Z beach: In what way is that the "game" of the "javascript guys"?
2015-11-03T04:47:40Z beach apologizes in advance for his ignorance.
2015-11-03T04:47:58Z Bike: probably a joke about everything compiling to js
2015-11-03T04:48:41Z radioninja quit (Ping timeout: 265 seconds)
2015-11-03T04:50:10Z zophy quit (Ping timeout: 250 seconds)
2015-11-03T04:51:38Z Ukari quit (Quit: Leaving.)
2015-11-03T04:52:49Z radioninja joined #lisp
2015-11-03T04:53:41Z phf: bike has it
2015-11-03T04:54:48Z zophy joined #lisp
2015-11-03T04:56:41Z phf: of course the point of javascript these days is not so much to solve simple dom manipulation problems, but to serve as a substrate for various feats of byzantine engineering
2015-11-03T04:57:02Z theBlackDragon quit (Ping timeout: 260 seconds)
2015-11-03T05:00:14Z locus joined #lisp
2015-11-03T05:02:05Z Guest14 joined #lisp
2015-11-03T05:03:55Z theBlackDragon joined #lisp
2015-11-03T05:04:18Z sunwukong quit (Quit: Leaving)
2015-11-03T05:06:10Z cluck quit (Remote host closed the connection)
2015-11-03T05:07:31Z locus quit (Quit: This computer has gone to sleep)
2015-11-03T05:07:51Z cpc26: I blame google
2015-11-03T05:08:15Z tmtwd joined #lisp
2015-11-03T05:08:33Z White_Flame: and then there's webasm coming down the pike
2015-11-03T05:09:34Z zophy quit (Ping timeout: 246 seconds)
2015-11-03T05:09:44Z phf: i of course blame systemd
2015-11-03T05:09:50Z White_Flame: I think that having HLLs with embedded or referenced compilation rules to bring them down to webasm might be okay, but I don't think that's the direction they're going in.  I bet it's all going to be AoT compiled into webasm, if it ever catches on
2015-11-03T05:14:12Z cpc26: google wants binaries to cover up the code and extend the c++ fetish and looks like Mozilla et. al. just wants to do proofs in ML and with "New Flash/web-assembly" nobody has to argue about the JS issues which Eich will never be a lisp, not even a Scheme... The rest is just Enterprise Quality brought down to JS.
2015-11-03T05:15:16Z cpc26: I have no doubt it will be AOT unless google runs out of money
2015-11-03T05:15:40Z cpc26: but then you could write in CL and not even use parenscript
2015-11-03T05:16:17Z locus joined #lisp
2015-11-03T05:16:43Z aeth: On the one hand, web browsers are the only reason I can get away with not having Windows installed. On the other hand, websites these days are barely usable thanks to unnecessary JavaScript. Wasm will probably make things worse.
2015-11-03T05:17:02Z aeth: Except to have to buy new phones and tablets just to be able to run simple websites where only the text is relevant.
2015-11-03T05:17:05Z aeth: *Expect
2015-11-03T05:17:30Z cpc26: oh yeah it is not getting better - systemd for everyone
2015-11-03T05:17:37Z cpc26: I am going back to gopher
2015-11-03T05:18:08Z LilSusieCrabCake joined #lisp
2015-11-03T05:18:26Z dlowe quit (Ping timeout: 240 seconds)
2015-11-03T05:18:28Z aeth: Eventually the bloat will get so bad that the web itself will be open for disruption. Which sounds like a huge, impossible task today, but performance is terrible and getting worse with time.
2015-11-03T05:19:07Z aeth: Iirc, Facebook is trying to do this on mobile. Let's hope a less centralized project wins.
2015-11-03T05:19:34Z pjb: cpc26: you can always build your own distribution, or use FreeBSD.
2015-11-03T05:19:35Z aeth: It's mostly just text, but the web does it so badly now.
2015-11-03T05:19:38Z emma quit (Ping timeout: 250 seconds)
2015-11-03T05:20:12Z cpc26: oh yeah I don't use those pedestrian systemd based distros or bsd
2015-11-03T05:20:16Z emma joined #lisp
2015-11-03T05:20:16Z emma quit (Changing host)
2015-11-03T05:20:16Z emma joined #lisp
2015-11-03T05:20:20Z aeth: pjb: FreeBSD probably dosn't run everything that Linux can run, unfortunately.
2015-11-03T05:20:31Z dlowe joined #lisp
2015-11-03T05:20:36Z cpc26: yeah nobody seems to use bsd
2015-11-03T05:20:45Z cpc26: guix looks nice
2015-11-03T05:21:13Z pjb: cpc26: actually, here, we should have the goal of building a lisp-based system.  There's LispOS where the whole architecture is based on lisp, but I have also another project, "LEP" which would be to use a unix kernel (linux or bsd), and to rewrite all the userspace in lisp, from init to the user experience (ie. à la Android).
2015-11-03T05:21:38Z pjb: aeth: indeed. In this conception, a linux kernel is only used for the device drivers.
2015-11-03T05:21:40Z aeth: pjb: The latter project is probably more important. These days, the kernel is very unimportant imo.
2015-11-03T05:21:47Z pjb: You can throw away everything else written in C.
2015-11-03T05:21:58Z aeth: The kernel is unimportant relative to the work required to replace it usefully, at least.
2015-11-03T05:22:03Z pjb: aeth: just linke in Android, indeed.
2015-11-03T05:22:09Z pjb: like
2015-11-03T05:22:33Z pjb: So, I have an example with emacs: http://informatimago.com/linux/emacs-on-user-mode-linux.html
2015-11-03T05:22:38Z aeth: Being able to run Linux binaries and Linux drivers is basically a necessity, at least until you get some network effects.
2015-11-03T05:23:09Z pjb: And started some "LEP" with ccl: http://git.informatimago.com/viewgit/index.php?a=summary&p=public/lep
2015-11-03T05:23:15Z cmoney quit (Remote host closed the connection)
2015-11-03T05:23:24Z pjb: aeth: we're in #lisp, we don't need network effects.
2015-11-03T05:23:40Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-03T05:23:41Z pjb: You can always virtualize.
2015-11-03T05:23:54Z phf: chuck moore dat shit
2015-11-03T05:23:59Z aeth: Virtualizing will cause a performance penalty.
2015-11-03T05:24:15Z aeth: pjb: Also, the reason we're using Common Lisp instead of designing and implementing our own Lisp/Scheme/whatever is network effects.
2015-11-03T05:24:47Z pjb: Yes, but the point of lispos and lep is NOT to use anything GNU/Linux.
2015-11-03T05:24:57Z aeth: Common Lisp is not perfect. It's API is not generic enough and the ordering and names could use improvement. I bring this up all the time but if you turn a elt into an nth or vice versa, you have to swap the order of the index and the list/sequence.
2015-11-03T05:25:07Z aeth: s/It's/Its
2015-11-03T05:25:11Z pjb: Ie. you wouldn't write a bash in lisp, that would be pointless.
2015-11-03T05:25:20Z pjb: You wouldn't write systemd in lisp, equaly pointless.
2015-11-03T05:25:54Z aeth: pjb: Right, writing bash in Lisp would be pointless when you can just port or directly use bash.
2015-11-03T05:25:59Z pjb: Or you can just start using Mezzano and improve it.
2015-11-03T05:26:10Z beach: pjb: Does LEP mean anything?
2015-11-03T05:26:25Z aeth: But unless you want to wait 15 years to use it as your system, you'll want to be able to run C/C++/etc. binaries.
2015-11-03T05:26:45Z beach: 15 years is not long.
2015-11-03T05:27:27Z pjb: aeth: and you don't want to run C/C++ binaries.
2015-11-03T05:27:41Z pjb: They are full of bugs, including security bugs.
2015-11-03T05:28:05Z cpc26: even symbolics used C?
2015-11-03T05:28:25Z moei joined #lisp
2015-11-03T05:28:40Z White_Flame: if such binaries are converted to Lisp from the machine code level, there's still a possibility of having runtime array bound checks and such, depending on the level of automated reverse engineering involved
2015-11-03T05:28:45Z pjb: I don't think they had any program written in C. They offered a Zeta-C compiler for customers who had to compile C libraries on their systems.
2015-11-03T05:28:56Z pjb: I'm currently implementing a C to CL translator.
2015-11-03T05:28:57Z cpc26: oh right
2015-11-03T05:29:02Z aeth: pjb: Of course most C++ programs are nightmares when you look at the source code, open source or not. But there's a lot of them. So the only way to have a complete system is to use them.
2015-11-03T05:29:03Z pjb: (Well, I was last month).
2015-11-03T05:29:23Z pjb: aeth: you don't want to sell lispOS to people who write C or C++ programs!
2015-11-03T05:29:39Z pjb: You want to have a 100% pure lisp system for people who write lisp programs.
2015-11-03T05:29:43Z White_Flame: you can, if that allows them to use hot code replacement, etc
2015-11-03T05:29:48Z pjb: So already, that's about 500 programmers world wide.
2015-11-03T05:29:56Z pjb: talk of a network effect!
2015-11-03T05:30:03Z aeth: But if it can't run a web browser when Unix can, people will use Unix.
2015-11-03T05:30:14Z pjb: Who care about people?
2015-11-03T05:30:14Z aeth: You don't have to include it in your default install.
2015-11-03T05:30:16Z beach: pjb: Can you say more about your C to Common Lisp translator?
2015-11-03T05:30:37Z aeth: pjb: The only thing that matters when making a software project is people.
2015-11-03T05:30:41Z pjb: beach: cpp is implemented. Last I was debugging the C11 parser.
2015-11-03T05:30:55Z pjb: I intend to make it able to translate the C sources of GNU emacs.
2015-11-03T05:31:03Z OrangeShark quit (Quit: Leaving)
2015-11-03T05:31:12Z beach: pjb: How are you planning to deal with the low-level C constructs such as &?
2015-11-03T05:31:15Z White_Flame: and convert them into elisp?
2015-11-03T05:31:32Z pjb: beach: by respecting the C11 standard to the letter.
2015-11-03T05:31:48Z pjb: and praying for the sources of GNU emacs to be clean enough. :-)
2015-11-03T05:31:56Z beach: Heh!
2015-11-03T05:32:03Z beach: pjb: Do you want help with that?
2015-11-03T05:32:04Z Draz joined #lisp
2015-11-03T05:32:17Z gingerale joined #lisp
2015-11-03T05:32:31Z pjb: I'm currently distracted by other projects, so not right now. But when I come back to that project, sure.
2015-11-03T05:32:39Z grouzen joined #lisp
2015-11-03T05:32:53Z beach: pjb: I can definitely see myself contributing to such a project.
2015-11-03T05:33:01Z beach: So keep us updated.
2015-11-03T05:34:23Z beach: pjb: You never said whether LEP stands for anything?
2015-11-03T05:34:26Z pjb: Probably two back ends would be useful. One producing "low level" lisp code, unmaintainable, just to be compiled and run. Another translating to a higher level lisp source, that could be used to fork and switch the maintainance from C to CL.
2015-11-03T05:34:40Z Guest14 joined #lisp
2015-11-03T05:34:49Z pjb: LEP - Lisp Empowered Program  :-) http://git.informatimago.com/viewgit/index.php?a=viewblob&p=public/lep&h=09c1d9449cccaf929d023c17455806a29671df41&hb=9a00fa5632e63e0edc1f43c1f66cef22cde09091&f=README
2015-11-03T05:35:55Z cyphase joined #lisp
2015-11-03T05:36:01Z beach: Thanks.
2015-11-03T05:36:26Z cyphase is now known as Guest32406
2015-11-03T05:36:27Z pjb: Whoah! It's already been 2 years since the last commit :-(
2015-11-03T05:36:38Z beach: Time flies like an arrow.
2015-11-03T05:36:54Z johann_ joined #lisp
2015-11-03T05:38:10Z Ven_ joined #lisp
2015-11-03T05:38:10Z jackdaniel: pjb: as far as I understand declarations are promises to compiler which it's safe to ignore. Hence check-type has sense combined with declare. Unless I'm wrong?
2015-11-03T05:38:15Z beach: pjb: So replace all user-level code.  Does that include the dynamic linker?
2015-11-03T05:40:17Z beach: jackdaniel: If you use check-type, I would say declarations are redundant.
2015-11-03T05:40:24Z s00pcan quit (Ping timeout: 265 seconds)
2015-11-03T05:40:47Z jackdaniel: given smart enough compiler (ECL doesn't deduce declaration from check-type (yet))
2015-11-03T05:40:57Z ebrasca quit (Remote host closed the connection)
2015-11-03T05:41:11Z beach: jackdaniel: We can work on that. :)
2015-11-03T05:41:25Z johann_ quit (Ping timeout: 250 seconds)
2015-11-03T05:41:51Z dlowe quit (Ping timeout: 250 seconds)
2015-11-03T05:42:19Z locus quit (Quit: This computer has gone to sleep)
2015-11-03T05:42:21Z jackdaniel: yeah, it's on the roadmap. It doesn't change a fact that putting declaration *and* check-type might have desired effects (regarding pjb's remark from backlog)
2015-11-03T05:42:31Z jackdaniel: s/a fact/the fact/
2015-11-03T05:42:59Z jackdaniel: :-)
2015-11-03T05:43:16Z preacherAKAnd joined #lisp
2015-11-03T05:43:58Z pjb: jackdaniel: (defun f (x) (declare (integer x)) (check-type x integer) (+ 1 x))  Since you promise you never pass anything else than an integer to f, the check-type is useless.  If the compiler takes into account the declaration it will deadcode the check-type.  And if it doesn't since you never pass a non integer, it is useless and slowing down your program for nothing, since you've promised it would never be a non integer.
2015-11-03T05:44:43Z Bike: i've done (defun ... (check-type ... type) (locally (declare type ...) ...)) once or twice
2015-11-03T05:44:54Z pjb: beach: yes, that would include the dynamic linker.  For a start, we'd use save-lisp-image, since we'd only have a lisp implementation.  Of course, you could write a compiler generating new executables.
2015-11-03T05:44:55Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-03T05:45:05Z Ven_ quit (Ping timeout: 244 seconds)
2015-11-03T05:45:19Z pjb: Bike: here, the declare is useless, because the compiler can trivially infer it from the check-type.
2015-11-03T05:45:26Z pjb: It is just plain silly to use both.
2015-11-03T05:45:30Z Bike: unless it doesn't
2015-11-03T05:45:35Z jackdaniel: pjb: mere ability isn't a guarantee
2015-11-03T05:46:50Z pjb: beach: now, of course, at the beginning there may still be a need to use some C libraries (notably those used by the CL implementation, and therefore the dynamic linker might have to be included.
2015-11-03T05:48:18Z __uu___ joined #lisp
2015-11-03T05:48:41Z badkins joined #lisp
2015-11-03T05:48:48Z beach: pjb: Got it.
2015-11-03T05:49:32Z dlowe joined #lisp
2015-11-03T05:49:37Z beach: pjb: A project like this one: http://metamodular.com/POSIX-API/posix-api.html would be useful for your purpose.
2015-11-03T05:50:18Z beach: My thinking with that project is to go directly to the kernel system calls, rather than going through libc.
2015-11-03T05:50:19Z futpib joined #lisp
2015-11-03T05:51:52Z pjb: Indeed. Syscalls should be the only place where we'd do FFI.  Elsewhere we could have lisp data everywhere.
2015-11-03T05:52:58Z beach: Well, I was thinking of not doing FFI in the sense of using the C calling conventions.  Instead, I was thinking of doing the interface imposed by the kernel, as in passing things in the right registers, etc.
2015-11-03T05:53:19Z beach: But, yeah, there are some C-isms in the kernel interface as well.
2015-11-03T05:53:24Z beach: Structs, etc.
2015-11-03T05:53:26Z pjb: The data forms.
2015-11-03T05:53:28Z pjb: formats.
2015-11-03T05:53:30Z badkins quit (Ping timeout: 268 seconds)
2015-11-03T05:53:32Z beach: Yeah.
2015-11-03T05:53:48Z pjb: Happily, there's no syscall using floats AFAIK.
2015-11-03T05:56:31Z Guest32406 quit (Quit: cyphase.com)
2015-11-03T05:59:59Z cpc26 quit (Ping timeout: 240 seconds)
2015-11-03T06:01:07Z cpc26 joined #lisp
2015-11-03T06:02:39Z shookees joined #lisp
2015-11-03T06:02:45Z tsoutseki joined #lisp
2015-11-03T06:05:46Z wizzo quit (Quit: ZNC - http://znc.in)
2015-11-03T06:06:18Z wizzo joined #lisp
2015-11-03T06:06:18Z wizzo quit (Changing host)
2015-11-03T06:06:18Z wizzo joined #lisp
2015-11-03T06:10:33Z Colleen quit (Remote host closed the connection)
2015-11-03T06:14:43Z grouzen quit (Ping timeout: 252 seconds)
2015-11-03T06:16:52Z gingerale quit (Remote host closed the connection)
2015-11-03T06:18:08Z tmtwd quit (Ping timeout: 250 seconds)
2015-11-03T06:19:07Z nzambe quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-11-03T06:20:03Z grouzen joined #lisp
2015-11-03T06:20:44Z malbertife joined #lisp
2015-11-03T06:22:11Z ramky joined #lisp
2015-11-03T06:22:46Z zacharias_ quit (Ping timeout: 260 seconds)
2015-11-03T06:23:34Z schaueho joined #lisp
2015-11-03T06:24:16Z smokeink joined #lisp
2015-11-03T06:33:03Z clop quit (Ping timeout: 252 seconds)
2015-11-03T06:37:43Z johann_ joined #lisp
2015-11-03T06:41:51Z beach left #lisp
2015-11-03T06:41:59Z johann_ quit (Ping timeout: 240 seconds)
2015-11-03T06:42:01Z clop joined #lisp
2015-11-03T06:42:40Z pt1 joined #lisp
2015-11-03T06:43:07Z mrSpec joined #lisp
2015-11-03T06:43:29Z Raimondi quit (Quit: The road to wisdom?—Well, it's plain and simple to express: Err and err and err again, but less and less and less.  — Piet Hein)
2015-11-03T06:45:11Z Raimondi joined #lisp
2015-11-03T06:45:18Z shookees quit (Ping timeout: 260 seconds)
2015-11-03T06:45:35Z __uu___ quit (Read error: Connection timed out)
2015-11-03T06:45:49Z BlueRavenGT quit (Ping timeout: 246 seconds)
2015-11-03T06:47:36Z sdothum quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-11-03T06:48:43Z mordocai quit (Quit: sleep)
2015-11-03T06:48:57Z Ven_ joined #lisp
2015-11-03T06:50:42Z schaueho quit (Ping timeout: 244 seconds)
2015-11-03T06:50:44Z pt1 quit (Remote host closed the connection)
2015-11-03T06:52:19Z faalentijn quit (Ping timeout: 240 seconds)
2015-11-03T06:55:23Z Ven_ quit (Ping timeout: 264 seconds)
2015-11-03T06:57:37Z Shinmera joined #lisp
2015-11-03T06:58:54Z mac_ified quit
2015-11-03T07:00:37Z vlatkoB joined #lisp
2015-11-03T07:04:54Z Jesin quit (Ping timeout: 255 seconds)
2015-11-03T07:07:38Z Draz quit (Quit: Leaving)
2015-11-03T07:09:23Z aleamb quit (Quit: Saliendo)
2015-11-03T07:13:08Z Bahman quit (Quit: Ave atque vale)
2015-11-03T07:13:14Z aap_ is now known as aap
2015-11-03T07:14:43Z snv joined #lisp
2015-11-03T07:15:27Z zacharias_ joined #lisp
2015-11-03T07:16:01Z solyd joined #lisp
2015-11-03T07:17:50Z futpib quit (Ping timeout: 260 seconds)
2015-11-03T07:21:50Z tralala joined #lisp
2015-11-03T07:24:17Z clop quit (Ping timeout: 244 seconds)
2015-11-03T07:24:34Z Jesin joined #lisp
2015-11-03T07:27:11Z freehck joined #lisp
2015-11-03T07:29:59Z harish_ quit (Ping timeout: 260 seconds)
2015-11-03T07:36:39Z pt1 joined #lisp
2015-11-03T07:36:44Z clop joined #lisp
2015-11-03T07:38:24Z johann_ joined #lisp
2015-11-03T07:38:44Z FreeBird_ joined #lisp
2015-11-03T07:41:10Z FreeBirdLjj quit (Ping timeout: 240 seconds)
2015-11-03T07:42:31Z solyd quit (Ping timeout: 246 seconds)
2015-11-03T07:43:10Z johann_ quit (Ping timeout: 265 seconds)
2015-11-03T07:45:24Z malbertife quit (Ping timeout: 255 seconds)
2015-11-03T07:48:49Z yeticry quit (Read error: Connection reset by peer)
2015-11-03T07:49:47Z yeticry joined #lisp
2015-11-03T07:49:51Z badkins joined #lisp
2015-11-03T07:51:12Z reggy quit (Quit: Leaving)
2015-11-03T07:54:06Z badkins quit (Ping timeout: 240 seconds)
2015-11-03T07:55:39Z shookees joined #lisp
2015-11-03T07:56:43Z faalentijn joined #lisp
2015-11-03T07:59:18Z gigetoo quit (Ping timeout: 272 seconds)
2015-11-03T07:59:40Z Cymew joined #lisp
2015-11-03T08:00:10Z flambard joined #lisp
2015-11-03T08:00:57Z wizzo quit (Quit: ZNC - http://znc.in)
2015-11-03T08:01:31Z wizzo joined #lisp
2015-11-03T08:03:10Z Beetny joined #lisp
2015-11-03T08:03:33Z Raimondi quit (Read error: Connection reset by peer)
2015-11-03T08:04:50Z Raimondi joined #lisp
2015-11-03T08:07:08Z psy_ joined #lisp
2015-11-03T08:07:54Z yeticry quit (Ping timeout: 260 seconds)
2015-11-03T08:08:37Z yeticry joined #lisp
2015-11-03T08:10:34Z cadadar joined #lisp
2015-11-03T08:11:15Z kushal joined #lisp
2015-11-03T08:11:21Z _cosmonaut_ joined #lisp
2015-11-03T08:13:03Z scymtym_ joined #lisp
2015-11-03T08:18:02Z radioninja quit (Ping timeout: 260 seconds)
2015-11-03T08:19:11Z remi`bd joined #lisp
2015-11-03T08:20:50Z Mon_Ouie joined #lisp
2015-11-03T08:21:46Z johns` joined #lisp
2015-11-03T08:22:06Z cadadar quit (Quit: Leaving.)
2015-11-03T08:23:35Z angavrilov joined #lisp
2015-11-03T08:26:50Z faalentijn quit (Ping timeout: 250 seconds)
2015-11-03T08:31:07Z faalentijn joined #lisp
2015-11-03T08:33:25Z mvilleneuve joined #lisp
2015-11-03T08:39:14Z johann_ joined #lisp
2015-11-03T08:41:40Z happy-dude quit (Quit: Connection closed for inactivity)
2015-11-03T08:41:42Z mrSpec: Hello! Is anyone using RCL under CCL? I have the feeling that it worked for me fine few weeks ago, and still does under SBCL. Anyway, now on CCL I see error like this: http://paste.lisp.org/display/158385
2015-11-03T08:42:46Z HDurer quit (Ping timeout: 260 seconds)
2015-11-03T08:43:46Z johann_ quit (Ping timeout: 246 seconds)
2015-11-03T08:44:59Z flambard quit (Ping timeout: 240 seconds)
2015-11-03T08:46:09Z smokeink quit (Ping timeout: 255 seconds)
2015-11-03T08:46:35Z gigetoo joined #lisp
2015-11-03T08:47:53Z smokeink joined #lisp
2015-11-03T08:51:29Z harish_ joined #lisp
2015-11-03T08:51:49Z nostoi joined #lisp
2015-11-03T08:51:59Z Mon_Ouie quit (Ping timeout: 240 seconds)
2015-11-03T08:52:06Z fridim_ joined #lisp
2015-11-03T08:54:02Z HDurer joined #lisp
2015-11-03T08:55:03Z Quadrescence quit (Quit: This computer has gone to sleep)
2015-11-03T08:59:21Z HDurer quit (Ping timeout: 252 seconds)
2015-11-03T08:59:39Z psy_ quit (Ping timeout: 240 seconds)
2015-11-03T09:00:40Z psy_ joined #lisp
2015-11-03T09:03:05Z johann_ joined #lisp
2015-11-03T09:03:24Z flambard joined #lisp
2015-11-03T09:04:59Z kalzz quit (Ping timeout: 264 seconds)
2015-11-03T09:06:06Z shookees quit (Ping timeout: 260 seconds)
2015-11-03T09:06:35Z Harag joined #lisp
2015-11-03T09:06:53Z cadadar joined #lisp
2015-11-03T09:08:35Z akkad: mrSpec good to use ccl. as sbcl is under a non gpl friendly license
2015-11-03T09:09:13Z akkad: so it's not truly free.
2015-11-03T09:09:44Z briantrice quit (Quit: briantrice)
2015-11-03T09:09:48Z HDurer joined #lisp
2015-11-03T09:10:32Z mrSpec: akkad: hehe, thx for info, however It's not the biggest issue for me now ;)
2015-11-03T09:11:05Z mrSpec: I downgraded quicklisp to "http://beta.quicklisp.org/dist/quicklisp/2015-09-24/distinfo.txt" and it solved the problem.
2015-11-03T09:11:51Z jlarocco_ quit (Read error: Connection reset by peer)
2015-11-03T09:11:53Z _cosmona` joined #lisp
2015-11-03T09:12:10Z johann_ quit (Read error: Connection reset by peer)
2015-11-03T09:12:32Z mrSpec: So it must be somehow related to CFFI update.
2015-11-03T09:12:50Z resttime quit (Quit: Bye bye!)
2015-11-03T09:12:56Z johann_ joined #lisp
2015-11-03T09:14:03Z LilSusieCrabCake: Does it make y'all sad that #clojure has almost twice as many people as this room?
2015-11-03T09:14:53Z blubjr: whats that
2015-11-03T09:16:11Z LilSusieCrabCake: It's a Hickey lang that lets you improve write Java with a Lispy crust
2015-11-03T09:17:00Z LilSusieCrabCake: my bad peepz I been hittin the J sauce to haird ... love y'all lispy critterz <3
2015-11-03T09:17:07Z LilSusieCrabCake goes to bed
2015-11-03T09:19:23Z gaya- joined #lisp
2015-11-03T09:21:29Z kalzz joined #lisp
2015-11-03T09:24:06Z jackdaniel: lol
2015-11-03T09:27:19Z eazar001 quit (Ping timeout: 240 seconds)
2015-11-03T09:27:26Z jlarocco_ joined #lisp
2015-11-03T09:27:44Z MaggieAndEazar joined #lisp
2015-11-03T09:31:48Z kalzz quit (Ping timeout: 268 seconds)
2015-11-03T09:34:15Z nostoi quit (Quit: Verlassend)
2015-11-03T09:39:40Z pjb: LilSusieCrabCake: yes, it makes me sad.
2015-11-03T09:40:30Z pjb: LilSusieCrabCake: on the other hand, if as I would wish, Rickey had made clojure a CL library, I can admit he wouldn't have attracted those lispers.  All in all, few CLispers left CL for clojure: they are newbies.
2015-11-03T09:40:56Z pjb: You can "write java" with a true CL crust using ABCL.
2015-11-03T09:41:09Z Karl_Dscc joined #lisp
2015-11-03T09:42:44Z Nikotiini joined #lisp
2015-11-03T09:47:28Z kalzz joined #lisp
2015-11-03T09:48:12Z splittist: akkad: what do you mean about sbcl's 'license'?
2015-11-03T09:48:47Z Ober: splittist: it was pretty straight forward I thought
2015-11-03T09:49:03Z Ober: != gpl, vs gpl.
2015-11-03T09:50:49Z badkins joined #lisp
2015-11-03T09:50:57Z White_Flame: "gpl friendly" is what was asked.  I don't understand how SBCL's public domain statement would be unfriendly to use in GPL projects
2015-11-03T09:53:01Z stepnem joined #lisp
2015-11-03T09:54:23Z splittist: There are a handful of BSD(ish) files inherited from The Ancients
2015-11-03T09:55:05Z badkins quit (Ping timeout: 252 seconds)
2015-11-03T09:57:33Z White_Flame: can't BSD code imported into GPL projects assume the GPL license?  Isn't that within what BSD allows?
2015-11-03T09:58:31Z _cosmona` quit (Remote host closed the connection)
2015-11-03T09:58:31Z _cosmonaut_ quit (Remote host closed the connection)
2015-11-03T09:59:17Z _cosmonaut_ joined #lisp
2015-11-03T09:59:32Z loke: White_Flame: That depends if it's the 3-clause or 2-clause license, right?
2015-11-03T09:59:46Z splittist: Actually, there are in ccl as well e.g. LOOP http://trac.clozure.com/ccl/browser/release/1.11/source/library/loop.lisp
2015-11-03T10:00:19Z loke: There aren't many Lisp-based GPL'ed projects out there, are ther?
2015-11-03T10:00:34Z heddwch quit (Read error: Connection reset by peer)
2015-11-03T10:00:56Z White_Flame: loke: the 3rd clause is about not using author names to promote the derived product.  No clue if that has contention with GPL
2015-11-03T10:02:10Z LilSusieCrabCake quit (Ping timeout: 272 seconds)
2015-11-03T10:04:28Z _cosmonaut_ quit (Remote host closed the connection)
2015-11-03T10:04:54Z heddwch joined #lisp
2015-11-03T10:04:58Z _cosmonaut_ joined #lisp
2015-11-03T10:06:51Z jackdaniel: maybe he means that some companies invest in open source to have non-gpl'ed free software alternatives? (not sure, just guessing)
2015-11-03T10:08:19Z guicho joined #lisp
2015-11-03T10:08:38Z guicho quit (Client Quit)
2015-11-03T10:08:51Z guicho joined #lisp
2015-11-03T10:09:04Z guicho: minion: any updates?
2015-11-03T10:09:04Z minion: please stop playing with me... i am not a toy
2015-11-03T10:10:59Z leafybas_ joined #lisp
2015-11-03T10:14:22Z vlatkoB quit (Remote host closed the connection)
2015-11-03T10:14:41Z leafybas_ quit (Remote host closed the connection)
2015-11-03T10:15:08Z leafybas_ joined #lisp
2015-11-03T10:15:38Z vlatkoB joined #lisp
2015-11-03T10:16:43Z quazimodo quit (Ping timeout: 252 seconds)
2015-11-03T10:20:31Z Karl_Dscc quit (Remote host closed the connection)
2015-11-03T10:22:17Z guicho quit (Quit: さようなら)
2015-11-03T10:23:59Z larsen__ is now known as larsen
2015-11-03T10:24:05Z johann_ quit (Remote host closed the connection)
2015-11-03T10:26:46Z zacharias_ is now known as zacharias
2015-11-03T10:28:36Z preacherAKAnd quit (Quit: Konversation terminated!)
2015-11-03T10:29:11Z FreeBird_ quit (Ping timeout: 252 seconds)
2015-11-03T10:30:42Z easye: Beginners question: does CL dictate an endian-ness for {WRITE,READ}-BYTE and COPY-SEQUENCE?  Or is it implementation dependent?
2015-11-03T10:31:37Z easye: I guess stupid question, as individual bytes don't really need an endian-ness described.
2015-11-03T10:32:51Z easye has another cup of coffee to wake up, and stop bothering #lisp.
2015-11-03T10:34:44Z euandreh joined #lisp
2015-11-03T10:35:31Z Shinmera: When you do restore integers and so forth from a byte representation you need to handle endianness yourself, yes.
2015-11-03T10:35:46Z easye: Right.  But if I am just dealing with bytes, it doesn't matter.
2015-11-03T10:36:03Z easye: Sorry to rubber duck #lisp
2015-11-03T10:41:00Z ggole joined #lisp
2015-11-03T10:42:01Z EvW joined #lisp
2015-11-03T10:46:50Z EvW quit (Ping timeout: 265 seconds)
2015-11-03T10:58:27Z alchemis7 quit (Remote host closed the connection)
2015-11-03T10:59:05Z loke: easye: Well, anything other than (UNSIGNED-BYTE 8) is very poorly defined in CL
2015-11-03T10:59:39Z loke: I was playing around with odd sizes like (UNSIGNED-BYTE 9) or 3 or whatever, and all CL
2015-11-03T10:59:46Z loke: I was playing around with odd sizes like (UNSIGNED-BYTE 9) or 3 or whatever, and all CL's I tried did different thigns.
2015-11-03T11:00:34Z loke: The most interesting one was Clisp which actually supports arbitrary byte sizes. I.e. (UNSIGNED-BYTE 3) does what you'd hope it does.
2015-11-03T11:01:37Z papachan_ is now known as papachan
2015-11-03T11:01:59Z alchemis7 joined #lisp
2015-11-03T11:03:54Z ZabaQ joined #lisp
2015-11-03T11:11:52Z euandreh quit (Remote host closed the connection)
2015-11-03T11:13:06Z euandreh joined #lisp
2015-11-03T11:15:12Z leafyba__ joined #lisp
2015-11-03T11:17:25Z XachX: Ub8 is also not defined. It happens to do what you want everywhere though.
2015-11-03T11:17:38Z manuel_ joined #lisp
2015-11-03T11:18:20Z leafybas_ quit (Ping timeout: 244 seconds)
2015-11-03T11:18:38Z euandreh quit (Remote host closed the connection)
2015-11-03T11:19:16Z lisp375 joined #lisp
2015-11-03T11:19:36Z leafyba__ quit (Remote host closed the connection)
2015-11-03T11:20:03Z leafybas_ joined #lisp
2015-11-03T11:20:10Z euandreh joined #lisp
2015-11-03T11:22:38Z euandreh quit (Remote host closed the connection)
2015-11-03T11:22:59Z Karl_Dscc joined #lisp
2015-11-03T11:23:27Z lisp375 quit (Ping timeout: 246 seconds)
2015-11-03T11:24:37Z varjag quit (Ping timeout: 250 seconds)
2015-11-03T11:24:52Z johann_ joined #lisp
2015-11-03T11:26:41Z euandreh joined #lisp
2015-11-03T11:28:27Z euandreh quit (Remote host closed the connection)
2015-11-03T11:29:51Z johann_ quit (Ping timeout: 265 seconds)
2015-11-03T11:30:46Z faalentijn quit (Ping timeout: 260 seconds)
2015-11-03T11:32:16Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T11:34:27Z heddwch joined #lisp
2015-11-03T11:36:44Z euandreh joined #lisp
2015-11-03T11:37:39Z lnostdal quit (Ping timeout: 240 seconds)
2015-11-03T11:37:48Z snv quit (Read error: Connection reset by peer)
2015-11-03T11:37:59Z johns` quit (Ping timeout: 264 seconds)
2015-11-03T11:37:59Z snv joined #lisp
2015-11-03T11:38:12Z euandreh quit (Remote host closed the connection)
2015-11-03T11:41:52Z duikboot joined #lisp
2015-11-03T11:41:58Z duikboot_ joined #lisp
2015-11-03T11:41:59Z Xof quit (Ping timeout: 240 seconds)
2015-11-03T11:42:07Z euandreh joined #lisp
2015-11-03T11:44:23Z euandreh quit (Remote host closed the connection)
2015-11-03T11:45:54Z euandreh joined #lisp
2015-11-03T11:47:37Z Ethan- joined #lisp
2015-11-03T11:49:11Z MaggieAndEazar quit (Quit: Connection closed for inactivity)
2015-11-03T11:50:17Z lnostdal joined #lisp
2015-11-03T11:51:38Z badkins joined #lisp
2015-11-03T11:53:23Z varjag joined #lisp
2015-11-03T11:54:27Z euandreh quit (Remote host closed the connection)
2015-11-03T11:55:42Z euandreh joined #lisp
2015-11-03T11:55:46Z badkins quit (Ping timeout: 240 seconds)
2015-11-03T11:56:05Z pjb: easye: so it is not a entirely stupid question.  From the point of view of lisp, binary files are files of a finite subtype of integer or its subtypes signed-byte and unsigned-byte.  In this point of view, there's no notion of endianness, since integers are integers.  But from the point of view of external processes, the lisp binary files thus created will have a specific format.
2015-11-03T11:56:08Z pjb: clhs open
2015-11-03T11:56:08Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/f_open.htm
2015-11-03T11:56:26Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T11:56:33Z pjb: easye: notice that by default, the :external-format argument doesn't apply to binary files (but an implementation could have such an extension).
2015-11-03T11:57:15Z pjb: easye: so the actual file format, and how the bits of the finite subtype of integers that are stored in the binary file are laid out in this file, is entirely implementation specific.
2015-11-03T11:57:35Z pjb: easye: ie. cf. the documentation of your implementation, it should tell you how the bytes are written.
2015-11-03T11:58:32Z rszeno joined #lisp
2015-11-03T11:58:54Z s00pcan joined #lisp
2015-11-03T11:58:57Z badkins joined #lisp
2015-11-03T12:00:18Z euandreh quit (Ping timeout: 265 seconds)
2015-11-03T12:01:02Z pjb: easye: for example, clisp will write bytes of a multiple of 8 bits in little endian (even on hosts that use natively big endian), so that the binary files written by clisp can be copied to any system where clisp runs and read back smoothly.
2015-11-03T12:03:57Z pjb: easye: for byte sizes that are not multiple of 8 bits, clisp writes a header to indicate the actual end-of-file and packs the bits.
2015-11-03T12:05:49Z heddwch joined #lisp
2015-11-03T12:06:31Z pjb: easye: clisp has extensions functions in the EXT package to read and write bytes in different byte orders.
2015-11-03T12:07:12Z Beetny quit (Ping timeout: 268 seconds)
2015-11-03T12:11:30Z s00pcan quit (Ping timeout: 240 seconds)
2015-11-03T12:12:10Z EvW joined #lisp
2015-11-03T12:13:32Z s00pcan joined #lisp
2015-11-03T12:15:47Z s00pcan quit (Remote host closed the connection)
2015-11-03T12:15:50Z faalentijn joined #lisp
2015-11-03T12:16:31Z s00pcan joined #lisp
2015-11-03T12:25:38Z johann_ joined #lisp
2015-11-03T12:29:11Z euandreh joined #lisp
2015-11-03T12:30:22Z johann_ quit (Ping timeout: 272 seconds)
2015-11-03T12:31:25Z Uptime quit (Quit: cya)
2015-11-03T12:32:26Z marvi joined #lisp
2015-11-03T12:32:26Z marvi quit (Changing host)
2015-11-03T12:32:26Z marvi joined #lisp
2015-11-03T12:32:46Z eagleflo quit (Ping timeout: 240 seconds)
2015-11-03T12:32:46Z ft quit (Ping timeout: 240 seconds)
2015-11-03T12:32:50Z Uptime joined #lisp
2015-11-03T12:33:31Z euandreh quit (Ping timeout: 250 seconds)
2015-11-03T12:33:40Z ft joined #lisp
2015-11-03T12:33:50Z eagleflo joined #lisp
2015-11-03T12:33:59Z larsen quit (Ping timeout: 240 seconds)
2015-11-03T12:34:02Z Mon_Ouie joined #lisp
2015-11-03T12:34:15Z larsen joined #lisp
2015-11-03T12:37:23Z flambard_ joined #lisp
2015-11-03T12:40:30Z flambard quit (Ping timeout: 272 seconds)
2015-11-03T12:40:39Z duikboot_ quit (Quit: Leaving)
2015-11-03T12:41:42Z flambard_ is now known as flambard
2015-11-03T12:45:13Z lispyone_ joined #lisp
2015-11-03T12:46:10Z quasus joined #lisp
2015-11-03T12:49:45Z lispyone_ quit (Ping timeout: 268 seconds)
2015-11-03T12:50:30Z Mon_Ouie quit (Ping timeout: 255 seconds)
2015-11-03T12:51:44Z eudoxia joined #lisp
2015-11-03T12:52:06Z BitPuffin joined #lisp
2015-11-03T12:52:27Z shookees joined #lisp
2015-11-03T12:57:24Z przl joined #lisp
2015-11-03T13:01:18Z BitPuffin quit (Ping timeout: 255 seconds)
2015-11-03T13:03:42Z danlentz_ joined #lisp
2015-11-03T13:07:01Z remi`bd quit (Quit: leaving)
2015-11-03T13:11:26Z ZabaQ_ joined #lisp
2015-11-03T13:14:26Z ZabaQ quit (Ping timeout: 240 seconds)
2015-11-03T13:16:32Z sdothum joined #lisp
2015-11-03T13:19:24Z freehck quit (Remote host closed the connection)
2015-11-03T13:19:38Z freehck joined #lisp
2015-11-03T13:21:20Z ZabaQ_ quit (Quit: Leaving)
2015-11-03T13:21:26Z dandersen joined #lisp
2015-11-03T13:21:52Z ZabaQ_ joined #lisp
2015-11-03T13:21:57Z ZabaQ_ is now known as ZabaQ
2015-11-03T13:22:18Z pjb` joined #lisp
2015-11-03T13:22:18Z rtoym_ quit (Ping timeout: 240 seconds)
2015-11-03T13:22:18Z ryan_vw quit (Ping timeout: 240 seconds)
2015-11-03T13:22:23Z ryan_vw joined #lisp
2015-11-03T13:22:26Z duikboot quit (Ping timeout: 240 seconds)
2015-11-03T13:22:26Z jlarocco_ quit (Ping timeout: 240 seconds)
2015-11-03T13:22:26Z dkcl quit (Ping timeout: 240 seconds)
2015-11-03T13:22:26Z gniourf quit (Ping timeout: 240 seconds)
2015-11-03T13:22:26Z pjb quit (Ping timeout: 240 seconds)
2015-11-03T13:22:37Z rtoym joined #lisp
2015-11-03T13:22:48Z jlarocco_ joined #lisp
2015-11-03T13:23:09Z duikboot joined #lisp
2015-11-03T13:23:17Z gniourf joined #lisp
2015-11-03T13:23:58Z quazimodo joined #lisp
2015-11-03T13:26:26Z johann_ joined #lisp
2015-11-03T13:26:57Z BitPuffin joined #lisp
2015-11-03T13:28:16Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T13:28:24Z DGASAU quit (Read error: Connection reset by peer)
2015-11-03T13:28:43Z DGASAU joined #lisp
2015-11-03T13:30:50Z johann_ quit (Ping timeout: 240 seconds)
2015-11-03T13:35:05Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-03T13:35:17Z danlentz_ joined #lisp
2015-11-03T13:38:08Z shookees quit (Ping timeout: 272 seconds)
2015-11-03T13:46:30Z manuel_ quit (Quit: manuel_)
2015-11-03T13:46:31Z heddwch joined #lisp
2015-11-03T13:49:20Z dandersen is now known as dkcl
2015-11-03T13:49:40Z Meow-J quit (Quit: Connection closed for inactivity)
2015-11-03T13:50:31Z mac_ified joined #lisp
2015-11-03T13:50:59Z pjb` is now known as pjb
2015-11-03T13:51:22Z shookees joined #lisp
2015-11-03T13:51:28Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T13:52:16Z Karl_Dscc quit (Remote host closed the connection)
2015-11-03T13:52:32Z faalentijn quit (Read error: Connection reset by peer)
2015-11-03T13:53:34Z heddwch joined #lisp
2015-11-03T13:53:47Z ramky quit (Ping timeout: 252 seconds)
2015-11-03T13:56:24Z lispyone_ joined #lisp
2015-11-03T13:57:11Z Cymew quit (Ping timeout: 264 seconds)
2015-11-03T13:57:53Z lispyone_ quit (Remote host closed the connection)
2015-11-03T13:58:19Z Cymew joined #lisp
2015-11-03T13:58:43Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T13:58:57Z leafyba__ joined #lisp
2015-11-03T13:59:40Z lispyone_ joined #lisp
2015-11-03T14:00:04Z Petit_Dejeuner joined #lisp
2015-11-03T14:00:54Z manuel_ joined #lisp
2015-11-03T14:02:06Z grouzen quit (Ping timeout: 265 seconds)
2015-11-03T14:02:16Z leafybas_ quit (Ping timeout: 246 seconds)
2015-11-03T14:03:10Z TDT joined #lisp
2015-11-03T14:03:35Z heddwch joined #lisp
2015-11-03T14:03:43Z manuel_ quit (Client Quit)
2015-11-03T14:03:47Z nzambe joined #lisp
2015-11-03T14:04:22Z mishoo_ joined #lisp
2015-11-03T14:04:43Z angavrilov quit (Remote host closed the connection)
2015-11-03T14:05:02Z Ethan- quit (Remote host closed the connection)
2015-11-03T14:05:04Z angavrilov joined #lisp
2015-11-03T14:07:17Z lisse joined #lisp
2015-11-03T14:13:13Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T14:14:48Z m0li quit (Ping timeout: 250 seconds)
2015-11-03T14:14:52Z duikboot quit (Quit: Leaving)
2015-11-03T14:16:25Z przl_ joined #lisp
2015-11-03T14:16:32Z Karl_Dscc joined #lisp
2015-11-03T14:16:46Z faalentijn joined #lisp
2015-11-03T14:20:28Z shookees quit (Ping timeout: 246 seconds)
2015-11-03T14:21:22Z Meow-J joined #lisp
2015-11-03T14:23:06Z grouzen joined #lisp
2015-11-03T14:23:32Z algae joined #lisp
2015-11-03T14:23:37Z usrml joined #lisp
2015-11-03T14:24:03Z EvW1 joined #lisp
2015-11-03T14:24:39Z EvW quit (Ping timeout: 246 seconds)
2015-11-03T14:24:40Z EvW1 is now known as EvW
2015-11-03T14:24:42Z ramky joined #lisp
2015-11-03T14:24:45Z nowhere_man joined #lisp
2015-11-03T14:27:08Z m0li joined #lisp
2015-11-03T14:27:12Z johann_ joined #lisp
2015-11-03T14:28:10Z sjl quit (Ping timeout: 246 seconds)
2015-11-03T14:28:59Z lnostdal quit (Ping timeout: 240 seconds)
2015-11-03T14:30:27Z warweasle joined #lisp
2015-11-03T14:31:45Z johann_ quit (Ping timeout: 255 seconds)
2015-11-03T14:32:45Z rszeno quit (Quit: Leaving.)
2015-11-03T14:38:44Z Colleen joined #lisp
2015-11-03T14:41:39Z lnostdal joined #lisp
2015-11-03T14:42:42Z kp666 quit (Remote host closed the connection)
2015-11-03T14:44:23Z varjag quit (Ping timeout: 250 seconds)
2015-11-03T14:46:15Z tmtwd joined #lisp
2015-11-03T14:46:33Z usrml quit (Ping timeout: 250 seconds)
2015-11-03T14:50:36Z pt1_ joined #lisp
2015-11-03T14:51:28Z tralala quit (Quit: out)
2015-11-03T14:52:59Z pt1 quit (Ping timeout: 240 seconds)
2015-11-03T14:55:10Z OrangeShark joined #lisp
2015-11-03T14:58:11Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-03T14:59:22Z Walex joined #lisp
2015-11-03T14:59:25Z DeadTrickster quit (Ping timeout: 252 seconds)
2015-11-03T15:00:30Z EvW quit (Ping timeout: 240 seconds)
2015-11-03T15:02:51Z sjl joined #lisp
2015-11-03T15:02:53Z manuel_ joined #lisp
2015-11-03T15:03:27Z przl_ quit (Ping timeout: 250 seconds)
2015-11-03T15:03:36Z przl quit (Ping timeout: 244 seconds)
2015-11-03T15:03:56Z ajf- joined #lisp
2015-11-03T15:04:17Z Kruppe- joined #lisp
2015-11-03T15:04:34Z Kruppe quit (Read error: Connection reset by peer)
2015-11-03T15:05:03Z przl joined #lisp
2015-11-03T15:10:06Z papachan is now known as papachan_
2015-11-03T15:14:13Z leafyba__ quit (Remote host closed the connection)
2015-11-03T15:14:40Z leafybas_ joined #lisp
2015-11-03T15:15:10Z papachan joined #lisp
2015-11-03T15:19:00Z mgs` joined #lisp
2015-11-03T15:19:55Z tmtwd quit (Ping timeout: 265 seconds)
2015-11-03T15:20:08Z Cymew quit (Ping timeout: 244 seconds)
2015-11-03T15:20:28Z lisse joined #lisp
2015-11-03T15:24:10Z kdas_ joined #lisp
2015-11-03T15:24:51Z kushal quit (Ping timeout: 255 seconds)
2015-11-03T15:24:53Z mgs` quit (Changing host)
2015-11-03T15:24:53Z mgs` joined #lisp
2015-11-03T15:27:38Z Colleen_ joined #lisp
2015-11-03T15:27:40Z mordocai joined #lisp
2015-11-03T15:27:57Z johann_ joined #lisp
2015-11-03T15:28:18Z mgs` left #lisp
2015-11-03T15:28:24Z TDT quit (Quit: TDT)
2015-11-03T15:28:27Z Colleen quit (Quit: See you, space cowboy...)
2015-11-03T15:28:27Z Colleen_ is now known as Colleen
2015-11-03T15:28:28Z kdas_ quit (Quit: Leaving)
2015-11-03T15:28:36Z freehck quit (Quit: BB everybody. C u later at home! Holiday's tomorrow! Hooray! :))
2015-11-03T15:29:16Z TDT joined #lisp
2015-11-03T15:29:38Z Yuuhi joined #lisp
2015-11-03T15:31:24Z m6s joined #lisp
2015-11-03T15:32:29Z psy_ quit (Ping timeout: 250 seconds)
2015-11-03T15:32:32Z johann_ quit (Ping timeout: 244 seconds)
2015-11-03T15:32:56Z kushal joined #lisp
2015-11-03T15:35:03Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-03T15:39:31Z aretecode joined #lisp
2015-11-03T15:40:22Z _sjs quit (Ping timeout: 272 seconds)
2015-11-03T15:49:04Z papachan: when i try to load my project on my other desktop i have this error:
2015-11-03T15:49:08Z papachan: http://paste.lisp.org/display/158411
2015-11-03T15:50:38Z pjb: papachan: is there a system "example" distributed by quicklisp?
2015-11-03T15:51:11Z papachan: no
2015-11-03T15:51:16Z papachan: its my local project name
2015-11-03T15:51:23Z pjb: therefore?
2015-11-03T15:51:28Z Devon joined #lisp
2015-11-03T15:51:57Z lisse joined #lisp
2015-11-03T15:52:32Z papachan: i dont get it
2015-11-03T15:52:58Z pjb: Did you copy your system to your other desktop?
2015-11-03T15:53:09Z johann_ joined #lisp
2015-11-03T15:53:25Z heddwch joined #lisp
2015-11-03T15:53:27Z Xach: papachan: Where is your example.asd file located?
2015-11-03T15:55:10Z Devon: Any lispers in Grenoble?
2015-11-03T15:58:33Z papachan: Devon: french?
2015-11-03T15:59:01Z ZabaQ quit (Quit: Leaving)
2015-11-03T15:59:11Z papachan: pjb: my system? i have installed quicklisp yes
2015-11-03T15:59:25Z papachan: Xach: at my root path
2015-11-03T15:59:35Z Xach: papachan: In /?
2015-11-03T15:59:59Z pjb: papachan: since your system named "example" is not distributed by quicklisp, then installing quicklisp won't help you having it installed on your other desktop.
2015-11-03T16:00:30Z pjb: papachan: I will assume you didn't install your "example" system on your other desktop. Therefore the solution is to install your "example" system on your other desktop.
2015-11-03T16:00:47Z shka joined #lisp
2015-11-03T16:01:01Z jocuman joined #lisp
2015-11-03T16:01:07Z pjb: papachan: despite having network interfaces, computers are not telepaths!
2015-11-03T16:01:44Z papachan: http://paste.lisp.org/display/158414
2015-11-03T16:02:01Z pjb: So what?
2015-11-03T16:02:06Z pjb: This paste doesn't say anything.
2015-11-03T16:02:11Z Xach: You can safely ignore pjb
2015-11-03T16:02:19Z m6s quit (Ping timeout: 246 seconds)
2015-11-03T16:02:27Z pjb: AFAIK, it's the example on your first desktop, not on your other desktop, and it doesn't even mention the directory where it's installed!
2015-11-03T16:03:05Z Xach: papachan: Where are those files located?
2015-11-03T16:03:20Z lispyone_ quit (Remote host closed the connection)
2015-11-03T16:03:27Z pjb: You can safely ignore Xach now, for having no more information than me.
2015-11-03T16:03:49Z Petit_Dejeuner` joined #lisp
2015-11-03T16:04:22Z Xach: It isn't safe to ignore me. I can sneak up when you least expect it.
2015-11-03T16:05:47Z lispyone_ joined #lisp
2015-11-03T16:05:49Z pjb: Devon: there's one: http://github-awards.com/users?utf8=%E2%9C%93&type=city&language=Common+Lisp&city=Grenoble
2015-11-03T16:06:36Z lispyon__ joined #lisp
2015-11-03T16:09:23Z euandreh joined #lisp
2015-11-03T16:09:24Z cross joined #lisp
2015-11-03T16:10:04Z lispyone_ quit (Ping timeout: 250 seconds)
2015-11-03T16:11:03Z lispyon__ quit (Remote host closed the connection)
2015-11-03T16:16:09Z vydd joined #lisp
2015-11-03T16:19:09Z Cthulhux`: Xach: *sneaks* *pokes you in the back* https://github.com/ceramic/ceramic/issues/18
2015-11-03T16:19:35Z smokeink quit (Remote host closed the connection)
2015-11-03T16:20:46Z euandreh quit (Remote host closed the connection)
2015-11-03T16:21:14Z euandreh joined #lisp
2015-11-03T16:21:36Z Xach adds it to todo.org
2015-11-03T16:21:42Z Cthulhux`: :D
2015-11-03T16:21:58Z Cthulhux`: you haven't even done that yet? while talking about ignoring...
2015-11-03T16:22:08Z ramky_ joined #lisp
2015-11-03T16:22:45Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T16:24:37Z otjura joined #lisp
2015-11-03T16:24:43Z ramky quit (Ping timeout: 244 seconds)
2015-11-03T16:25:10Z heddwch joined #lisp
2015-11-03T16:25:25Z eudoxia: Cthulhux`: while you're here, i meant to reply on GH but forgot
2015-11-03T16:25:40Z eudoxia: i wrote a teeny tiny library that does sort of what buildapp does
2015-11-03T16:25:42Z Cthulhux`: eudoxia, no problem, we all need to wait for Xach :P
2015-11-03T16:25:52Z Cthulhux`: oh, neat
2015-11-03T16:25:53Z _sjs joined #lisp
2015-11-03T16:25:55Z eudoxia: it fires a copy of the current running impl
2015-11-03T16:26:07Z eudoxia: so if you're running SBCL it runs SBCL, CCL then CCL, etc.
2015-11-03T16:26:16Z eudoxia: loads a system and dumps an executable using UIOP
2015-11-03T16:26:28Z eudoxia: i'm gonna integrate it with Ceramic, uh, soon
2015-11-03T16:26:38Z euandreh quit (Remote host closed the connection)
2015-11-03T16:26:45Z euandreh joined #lisp
2015-11-03T16:26:47Z Cthulhux`: lol
2015-11-03T16:26:53Z Cthulhux`: soon? :D
2015-11-03T16:27:16Z Guest14 joined #lisp
2015-11-03T16:27:39Z eudoxia: i want to upload them and submit them to Quicklisp first
2015-11-03T16:27:58Z eudoxia: then update Ceramic so by the next QL release they'll be there
2015-11-03T16:28:01Z Cthulhux`: :-)
2015-11-03T16:28:10Z Cthulhux`: keep me posted on github, i can use git :p
2015-11-03T16:28:56Z ebrasca joined #lisp
2015-11-03T16:29:37Z Nikotiini quit (Ping timeout: 246 seconds)
2015-11-03T16:30:54Z Guest14 quit (Client Quit)
2015-11-03T16:31:41Z TDT quit (Quit: TDT)
2015-11-03T16:31:43Z pt1_ quit (Ping timeout: 246 seconds)
2015-11-03T16:32:15Z erjoalgo joined #lisp
2015-11-03T16:35:38Z grouzen quit (Ping timeout: 250 seconds)
2015-11-03T16:37:17Z jtza8 joined #lisp
2015-11-03T16:37:50Z lispyone_ joined #lisp
2015-11-03T16:39:27Z shka: why serapeum:drop-while is not exported from package?
2015-11-03T16:39:44Z pjb: It is exported.
2015-11-03T16:39:49Z pjb: Since it has only a single colon!
2015-11-03T16:41:07Z flambard quit (Quit: kthxbai)
2015-11-03T16:42:03Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-03T16:42:16Z shka: pjb: The symbol "DROP-WHILE" is not external in the SERAPEUM package.
2015-11-03T16:42:31Z pjb: It is, since you wrote: serapeum:drop-while
2015-11-03T16:42:40Z shka: right
2015-11-03T16:42:42Z pjb: You couldn't read that if it wasn't exported.
2015-11-03T16:42:49Z shka: silly me
2015-11-03T16:42:56Z shka: but it is not external
2015-11-03T16:42:59Z Bike: shka: because they chose not to?
2015-11-03T16:43:06Z shka: uh
2015-11-03T16:43:11Z shka: but it is usefull!
2015-11-03T16:43:15Z pjb: exported and external are the same.
2015-11-03T16:43:29Z Bike: oh, cripes, utility library
2015-11-03T16:43:37Z pjb: If serapeum::drop-while wasn't exported, then reading serapeum:drop-while would signal an error!
2015-11-03T16:43:53Z Bike: https://github.com/TBRSS/serapeum/blob/master/package.lisp there's something called "drop"
2015-11-03T16:44:10Z shka: no
2015-11-03T16:44:21Z shka: it is not in the export list
2015-11-03T16:44:28Z Bike: pjb's just being weird
2015-11-03T16:44:52Z Bike: hm, drop-while looks like something that was intended for export
2015-11-03T16:44:54Z Bike: might wanna file a bug
2015-11-03T16:45:04Z preacherAKAnd joined #lisp
2015-11-03T16:45:06Z shka: Bike: ok, thanks for sanity check
2015-11-03T16:45:11Z pjb: shka: there are other ways to export symbols than mentionning their names in the export list of a defpackage form!
2015-11-03T16:45:31Z shka: pjb: they choosed the first approach
2015-11-03T16:45:37Z pjb: shka: (find-symbol "DROP-WHILE" "SERAPEUM")
2015-11-03T16:45:46Z Bike: listen, shka got a read error
2015-11-03T16:46:03Z Bike: you're the one who was complaining about treating things in a legalistic mathematical framework before
2015-11-03T16:46:11Z pjb: Bike: no, no mention of errors from shka in the backlog.
2015-11-03T16:46:14Z shka: SERAPEUM::DROP-WHILE
2015-11-03T16:46:16Z shka: :INTERNAL
2015-11-03T16:46:20Z shka: pjb: happy now?
2015-11-03T16:46:24Z pjb: Yes.
2015-11-03T16:46:25Z shka: IT IS INTERNAL
2015-11-03T16:46:28Z pjb: Ok.
2015-11-03T16:46:38Z shka: sorry
2015-11-03T16:46:41Z pjb: But before that you only showed us an exported symbol.
2015-11-03T16:46:42Z Bike: as imlpied by 'The symbol "DROP-WHILE" is not external in the SERAPEUM package', which is obviously an error
2015-11-03T16:46:46Z shka: i shouldn't get irritated
2015-11-03T16:46:48Z Bike: shka, don't apologize, pjb's being mean
2015-11-03T16:46:55Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T16:46:56Z resttime joined #lisp
2015-11-03T16:48:41Z heddwch joined #lisp
2015-11-03T16:49:10Z phoe_krk: come on
2015-11-03T16:49:10Z phoe_krk: guys
2015-11-03T16:49:12Z phoe_krk: make love
2015-11-03T16:49:14Z phoe_krk: not importable code
2015-11-03T16:49:30Z phoe_krk: s/importable code/war/
2015-11-03T16:49:38Z jackdaniel: but not here
2015-11-03T16:49:41Z jackdaniel: ;)
2015-11-03T16:50:04Z phoe_krk: would love be a generic?
2015-11-03T16:50:07Z bb010g quit (Quit: Connection closed for inactivity)
2015-11-03T16:53:06Z shka_ joined #lisp
2015-11-03T16:53:08Z shka quit (Ping timeout: 244 seconds)
2015-11-03T16:53:13Z shka_: https://github.com/TBRSS/serapeum/issues/7
2015-11-03T16:53:22Z aeth quit (Ping timeout: 260 seconds)
2015-11-03T16:53:31Z shka_: i feel so usefull
2015-11-03T16:54:23Z pjb: now write a patch and make a pull request!
2015-11-03T16:54:51Z shka_: i considered doing this
2015-11-03T16:55:19Z shka_: but solving this pull request would take more time than actually just adding those symbols to export list manually
2015-11-03T16:55:31Z shka_: so i will just skip that
2015-11-03T16:56:00Z erjoalgo quit (Ping timeout: 250 seconds)
2015-11-03T16:56:06Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T16:56:07Z jackdaniel: that's a true FOSS spirit
2015-11-03T16:56:30Z Bike: yeah, might as well, it's two lines
2015-11-03T16:57:28Z shka_: jackdaniel: let's be practical here
2015-11-03T16:57:43Z shka_: btw
2015-11-03T16:58:01Z shka_: this library has some really interesting functions
2015-11-03T16:58:47Z erjoalgo joined #lisp
2015-11-03T16:58:59Z Denommus joined #lisp
2015-11-03T16:59:33Z zadock joined #lisp
2015-11-03T16:59:41Z zacharias quit (Ping timeout: 252 seconds)
2015-11-03T16:59:57Z LiamH joined #lisp
2015-11-03T17:00:07Z Bike: why would it take more time than that?
2015-11-03T17:00:48Z Guest14 joined #lisp
2015-11-03T17:01:12Z aeth joined #lisp
2015-11-03T17:02:15Z ajtulloch joined #lisp
2015-11-03T17:03:18Z ajtulloc_ joined #lisp
2015-11-03T17:04:40Z heddwch joined #lisp
2015-11-03T17:05:46Z m6s joined #lisp
2015-11-03T17:05:46Z gingerale joined #lisp
2015-11-03T17:06:10Z m6s is now known as Guest3689
2015-11-03T17:07:13Z ajtulloch quit (Ping timeout: 265 seconds)
2015-11-03T17:07:24Z Petit_Dejeuner` quit (Ping timeout: 246 seconds)
2015-11-03T17:07:28Z Takumo left #lisp
2015-11-03T17:08:00Z pjb: Bike: I was about to clone it and push a patch. But then, I realized how complex the procedure was going to be: 1- clone the repo on github 2- clone the clone locally 3- patch the file 4- commit (with a meaningful commit message) 5- push the patch to the clone on github 6- go to the github web to post a pull request.  The lesson here is that providing small patches is too costly.
2015-11-03T17:10:03Z shka_: pjb: see?
2015-11-03T17:13:13Z TDT joined #lisp
2015-11-03T17:13:22Z DeadTrickster joined #lisp
2015-11-03T17:13:34Z eudoxia: nah github's web ui has a shortcut for all that
2015-11-03T17:13:55Z eudoxia: you just click on the pencil button over the file and you can make the changes, then it automatically creates a fork, branch, commit and PR
2015-11-03T17:14:42Z erjoalgo quit (Ping timeout: 260 seconds)
2015-11-03T17:14:58Z Guest3689 quit (Quit: WeeChat 1.4-dev)
2015-11-03T17:15:11Z mgs1 joined #lisp
2015-11-03T17:15:31Z mgs1 is now known as mgs`
2015-11-03T17:15:44Z mgs` quit (Changing host)
2015-11-03T17:15:44Z mgs` joined #lisp
2015-11-03T17:16:22Z jtza8 quit (Ping timeout: 250 seconds)
2015-11-03T17:17:13Z shka_: eudoxia: i didn't knew that
2015-11-03T17:17:51Z eudoxia: it's new
2015-11-03T17:17:58Z TDT quit (Client Quit)
2015-11-03T17:18:24Z jtza8 joined #lisp
2015-11-03T17:19:18Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T17:19:56Z johann_ quit (Remote host closed the connection)
2015-11-03T17:21:09Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-03T17:23:44Z shka_: good to know
2015-11-03T17:23:49Z EvW joined #lisp
2015-11-03T17:25:54Z mathrick quit (Ping timeout: 250 seconds)
2015-11-03T17:29:47Z leafyba__ joined #lisp
2015-11-03T17:30:05Z TDT joined #lisp
2015-11-03T17:31:03Z heddwch joined #lisp
2015-11-03T17:31:16Z happy-dude joined #lisp
2015-11-03T17:32:55Z leafybas_ quit (Ping timeout: 244 seconds)
2015-11-03T17:33:52Z papachan: hello eudoxia
2015-11-03T17:33:56Z eudoxia: hi
2015-11-03T17:34:13Z papachan: how its doing with your project lucerne?
2015-11-03T17:34:26Z leafyba__ quit (Ping timeout: 260 seconds)
2015-11-03T17:34:33Z eudoxia: haven't really worked on it recently
2015-11-03T17:34:34Z eudoxia: why
2015-11-03T17:35:08Z papachan: because i dtect some weird problem when you start scaffold at travis-ci file
2015-11-03T17:35:31Z akkad notes the Bay lisp user group meeting was moved to Franz hq
2015-11-03T17:35:54Z eudoxia: ah probably
2015-11-03T17:37:27Z mgs` quit (Ping timeout: 252 seconds)
2015-11-03T17:37:33Z TDT quit (Quit: TDT)
2015-11-03T17:38:30Z kushal quit (Quit: Leaving)
2015-11-03T17:40:28Z cadadar quit (Quit: Leaving.)
2015-11-03T17:40:55Z eudoxia: so what's the problem
2015-11-03T17:42:39Z briantrice joined #lisp
2015-11-03T17:47:10Z Nikotiini joined #lisp
2015-11-03T17:50:09Z kushal joined #lisp
2015-11-03T17:50:57Z futpib joined #lisp
2015-11-03T17:55:07Z Posterdati: jackdaniel: hi
2015-11-03T17:55:20Z jackdaniel: Posterdati: o/
2015-11-03T17:55:36Z Posterdati: jackdaniel: I saw that slime-2.14 still didn't solve the mips, mipsel missing specs
2015-11-03T17:56:01Z jackdaniel: but it got merged, right?
2015-11-03T17:56:15Z Posterdati: I didn't recall
2015-11-03T17:57:02Z _cosmonaut_ quit (Remote host closed the connection)
2015-11-03T17:57:29Z heddwch quit (Ping timeout: 265 seconds)
2015-11-03T17:58:13Z jackdaniel: then just bump on your PR :-) how did your systemd experiment worked?
2015-11-03T17:58:13Z Draz joined #lisp
2015-11-03T17:58:15Z heddwch joined #lisp
2015-11-03T17:59:34Z scymtym quit (Ping timeout: 246 seconds)
2015-11-03T18:01:27Z ajtulloc_ quit (Remote host closed the connection)
2015-11-03T18:01:56Z Posterdati: jackdaniel: I was able to launch a hunchentoot session belonging to user "lisp"
2015-11-03T18:02:02Z Posterdati: after boot
2015-11-03T18:02:34Z jackdaniel: great :)
2015-11-03T18:02:49Z Posterdati: I'm writing the test jig software for the adio board
2015-11-03T18:04:44Z przl quit (Ping timeout: 265 seconds)
2015-11-03T18:08:47Z Patzy joined #lisp
2015-11-03T18:08:51Z Patzy quit (Client Quit)
2015-11-03T18:09:09Z Patzy joined #lisp
2015-11-03T18:09:49Z xrash quit (Remote host closed the connection)
2015-11-03T18:10:30Z Devon quit (Ping timeout: 240 seconds)
2015-11-03T18:11:23Z warweasle` joined #lisp
2015-11-03T18:12:01Z warweasle` quit (Remote host closed the connection)
2015-11-03T18:12:28Z warweasle` joined #lisp
2015-11-03T18:14:19Z warweasle` quit (Remote host closed the connection)
2015-11-03T18:14:27Z BlueRavenGT joined #lisp
2015-11-03T18:17:23Z briantrice quit (Quit: briantrice)
2015-11-03T18:18:18Z ggole quit (Ping timeout: 260 seconds)
2015-11-03T18:18:47Z pt1 joined #lisp
2015-11-03T18:18:57Z warweasle` joined #lisp
2015-11-03T18:19:16Z warweasle` quit (Remote host closed the connection)
2015-11-03T18:19:19Z jtza8 quit (Ping timeout: 240 seconds)
2015-11-03T18:19:45Z Guest14 joined #lisp
2015-11-03T18:19:45Z warweasle` joined #lisp
2015-11-03T18:20:08Z Kruppe- quit (Quit: ZNC - http://znc.in)
2015-11-03T18:20:51Z agumonkey joined #lisp
2015-11-03T18:21:04Z Kruppe joined #lisp
2015-11-03T18:21:40Z guaqua: was there some new fashionable executable-creation library? (or basically something that would create an executable and parse command line parameters)
2015-11-03T18:23:16Z MoALTz_ joined #lisp
2015-11-03T18:26:15Z MoALTz quit (Ping timeout: 250 seconds)
2015-11-03T18:26:31Z ajtulloch joined #lisp
2015-11-03T18:28:24Z TDT joined #lisp
2015-11-03T18:28:38Z eudoxia: maybe you're looking for Roswell
2015-11-03T18:32:13Z kdas_ joined #lisp
2015-11-03T18:34:38Z scymtym joined #lisp
2015-11-03T18:35:26Z kushal quit (Ping timeout: 244 seconds)
2015-11-03T18:37:33Z guaqua: eudoxia: thanks, that was it. dunno though if it's actually worth switching to from clon... :)
2015-11-03T18:37:39Z TDT quit (Quit: TDT)
2015-11-03T18:40:07Z wtbrk joined #lisp
2015-11-03T18:40:14Z scharan quit (Ping timeout: 272 seconds)
2015-11-03T18:40:20Z ebrasca: I don't understand something about macros.
2015-11-03T18:42:50Z otwieracz: Xach: hey!
2015-11-03T18:43:42Z otwieracz: Xach: Looks like 2.14 (2015-06-01) is the latest slime available in Quicklisp.
2015-11-03T18:43:56Z otwieracz: Xach: (or at least I've recieved it with (ql:quickload :swank) on clear QL installation.
2015-11-03T18:44:20Z otwieracz: Xach: However, https://github.com/slime/slime/blob/master/ChangeLog here is 2015-10.18. SLIME is outdated in QL or I missing something?
2015-11-03T18:44:35Z EvW quit (Ping timeout: 264 seconds)
2015-11-03T18:45:00Z Xach: otwieracz: I use slime releases
2015-11-03T18:45:18Z attila_lendvai joined #lisp
2015-11-03T18:45:18Z attila_lendvai quit (Changing host)
2015-11-03T18:45:18Z attila_lendvai joined #lisp
2015-11-03T18:45:34Z Xach: when there is a 2.15 or 2.14.1 or 3.0 or whatever, it will be reflected in quicklisp
2015-11-03T18:46:13Z otwieracz: 2.15 is the latest.
2015-11-03T18:46:41Z Xach: otwieracz: How can you tell?
2015-11-03T18:46:45Z otwieracz: https://github.com/slime/slime/releases
2015-11-03T18:47:23Z Xach: Ok. I have been using https://common-lisp.net/project/slime/slime_latest.tar.gz, which I think has not been updated
2015-11-03T18:47:38Z Xach: I'd like to write some code to scrape github for release info, but I haven't done it yet.
2015-11-03T18:47:40Z otwieracz: However, It did not solved my problem. :-(
2015-11-03T18:47:49Z otwieracz: So no hurry in updating.
2015-11-03T18:47:58Z manuel_ quit (Quit: manuel_)
2015-11-03T18:49:36Z jtza8 joined #lisp
2015-11-03T18:49:57Z BitPuffin quit (Ping timeout: 246 seconds)
2015-11-03T18:51:01Z pt1 quit (Remote host closed the connection)
2015-11-03T18:51:39Z hiroakip joined #lisp
2015-11-03T18:52:14Z radioninja joined #lisp
2015-11-03T18:53:59Z sjl quit (Ping timeout: 240 seconds)
2015-11-03T18:54:33Z TDT joined #lisp
2015-11-03T18:54:49Z jewel_ quit (Ping timeout: 252 seconds)
2015-11-03T18:55:56Z eazar001 joined #lisp
2015-11-03T18:57:23Z gravicappa joined #lisp
2015-11-03T18:58:39Z TDT quit (Client Quit)
2015-11-03T18:59:30Z EvW joined #lisp
2015-11-03T19:00:49Z TDT joined #lisp
2015-11-03T19:07:16Z cadadar joined #lisp
2015-11-03T19:07:23Z bb010g joined #lisp
2015-11-03T19:08:06Z otjura quit (Ping timeout: 260 seconds)
2015-11-03T19:09:11Z balle quit (Read error: Connection reset by peer)
2015-11-03T19:09:33Z ariqz joined #lisp
2015-11-03T19:09:37Z ariqz left #lisp
2015-11-03T19:10:39Z BlueRavenGT quit (Read error: Connection reset by peer)
2015-11-03T19:10:51Z ASau joined #lisp
2015-11-03T19:11:01Z jewel_ joined #lisp
2015-11-03T19:11:35Z gaya- quit (Quit: Leaving.)
2015-11-03T19:14:16Z papachan: eudoxia: sorry i was out to lunch
2015-11-03T19:14:21Z eudoxia: ok
2015-11-03T19:14:29Z papachan: well its not a big problem
2015-11-03T19:14:37Z wizzo quit (Ping timeout: 252 seconds)
2015-11-03T19:14:48Z papachan: i will take a look and create an issue or maybe find something so i can PR to you
2015-11-03T19:15:22Z eudoxia: ok
2015-11-03T19:15:43Z ajtulloc_ joined #lisp
2015-11-03T19:16:07Z wizzo joined #lisp
2015-11-03T19:16:08Z blorp joined #lisp
2015-11-03T19:16:40Z blorp left #lisp
2015-11-03T19:16:50Z ajtulloc_ quit (Read error: Connection reset by peer)
2015-11-03T19:17:18Z ajtulloc_ joined #lisp
2015-11-03T19:17:31Z remi`bd joined #lisp
2015-11-03T19:17:53Z briantrice joined #lisp
2015-11-03T19:18:00Z shka joined #lisp
2015-11-03T19:18:12Z ajtulloch quit (Ping timeout: 265 seconds)
2015-11-03T19:19:18Z shka_ quit (Ping timeout: 255 seconds)
2015-11-03T19:19:39Z kdas_ quit (Ping timeout: 240 seconds)
2015-11-03T19:19:54Z warweasle quit (Remote host closed the connection)
2015-11-03T19:21:24Z ramky_ quit (Remote host closed the connection)
2015-11-03T19:23:23Z mgs` joined #lisp
2015-11-03T19:24:37Z BlueRavenGT joined #lisp
2015-11-03T19:25:47Z schaueho joined #lisp
2015-11-03T19:27:32Z vlatkoB quit (Remote host closed the connection)
2015-11-03T19:29:05Z tsoutseki quit (Ping timeout: 250 seconds)
2015-11-03T19:29:21Z TDT quit (Quit: TDT)
2015-11-03T19:29:41Z shookees joined #lisp
2015-11-03T19:34:39Z gingerale quit (Remote host closed the connection)
2015-11-03T19:36:34Z eudoxia_ joined #lisp
2015-11-03T19:36:48Z eudoxia_ quit (Read error: Connection reset by peer)
2015-11-03T19:40:00Z eudoxia quit (Ping timeout: 255 seconds)
2015-11-03T19:41:59Z tsoutseki joined #lisp
2015-11-03T19:42:49Z johns` joined #lisp
2015-11-03T19:46:45Z Yanez joined #lisp
2015-11-03T19:51:13Z scymtym_ quit (Ping timeout: 246 seconds)
2015-11-03T19:56:58Z TDT joined #lisp
2015-11-03T19:58:25Z przl joined #lisp
2015-11-03T19:59:19Z erjoalgo joined #lisp
2015-11-03T19:59:49Z mgs` quit (Quit: WeeChat 1.4-dev)
2015-11-03T20:00:37Z derrida quit (Quit: I quit, yo.)
2015-11-03T20:04:46Z ajtulloc_ quit (Remote host closed the connection)
2015-11-03T20:07:50Z gravicappa quit (Remote host closed the connection)
2015-11-03T20:10:46Z erjoalgo: Hi. Does anyone know why (truename "asd[]asd" ) fails for any pathname with []?
2015-11-03T20:11:42Z erjoalgo: touch "asd[]asd". then (truename "asd[]asd" ) raises condition
2015-11-03T20:11:52Z farhaven quit (Ping timeout: 250 seconds)
2015-11-03T20:11:56Z mvilleneuve joined #lisp
2015-11-03T20:12:13Z euandreh_ joined #lisp
2015-11-03T20:12:15Z przl quit (Quit: leaving)
2015-11-03T20:13:04Z shka quit (Quit: Konversation terminated!)
2015-11-03T20:13:09Z mordocai: erjoalgo: (truename "~/asd\\[\\]asd")
2015-11-03T20:13:19Z shka joined #lisp
2015-11-03T20:13:25Z mordocai: erjoalgo: Have to escape [], I believe they are used for wildcards
2015-11-03T20:13:26Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-03T20:14:53Z White_Flame: clhs make-pathname
2015-11-03T20:14:53Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/f_mk_pn.htm
2015-11-03T20:14:57Z White_Flame: search for {
2015-11-03T20:14:59Z White_Flame: erm [
2015-11-03T20:15:16Z White_Flame: seems to be a directory specifier
2015-11-03T20:15:30Z ajtulloch joined #lisp
2015-11-03T20:15:37Z euandreh quit (Ping timeout: 268 seconds)
2015-11-03T20:15:55Z mordocai: Ah, yeah. In any case, my guess that they needed to be escaped worked out lol
2015-11-03T20:16:10Z mvilleneuve quit (Ping timeout: 240 seconds)
2015-11-03T20:16:33Z White_Flame: right, it also will yell about unbalanced brackets when doing (truename "[")
2015-11-03T20:16:41Z schaueho quit (Ping timeout: 265 seconds)
2015-11-03T20:16:46Z mvilleneuve joined #lisp
2015-11-03T20:16:49Z ajtulloch quit (Read error: Connection reset by peer)
2015-11-03T20:16:54Z euandreh_ quit (Ping timeout: 255 seconds)
2015-11-03T20:17:07Z emaczen joined #lisp
2015-11-03T20:17:10Z ajtulloch joined #lisp
2015-11-03T20:17:28Z attila_lendvai joined #lisp
2015-11-03T20:17:28Z attila_lendvai quit (Changing host)
2015-11-03T20:17:28Z attila_lendvai joined #lisp
2015-11-03T20:17:58Z White_Flame: it's also interesting that the canonicalized outputted name of that file is #P"/home/user/asd\\[]asd" with only the open bracket escaped
2015-11-03T20:18:04Z ASau quit (Remote host closed the connection)
2015-11-03T20:18:36Z Yuuhi quit (Remote host closed the connection)
2015-11-03T20:18:56Z mordocai: Yeah, escaping just the first works for me
2015-11-03T20:19:05Z erjoalgo: ahh, I see. thanks, escaping should be simple enough!
2015-11-03T20:19:46Z Xach: erjoalgo: Whether it works, or fails, will depend on the implementation.
2015-11-03T20:20:20Z shka quit (Quit: Konversation terminated!)
2015-11-03T20:20:34Z quatro42 joined #lisp
2015-11-03T20:22:18Z quatro42 quit (Client Quit)
2015-11-03T20:23:24Z mvilleneuve quit (Ping timeout: 246 seconds)
2015-11-03T20:23:55Z dkcl quit (Remote host closed the connection)
2015-11-03T20:24:22Z dkcl joined #lisp
2015-11-03T20:24:40Z scymtym_ joined #lisp
2015-11-03T20:25:32Z emaczen: What is the recommended way to run processes? Is there a compatibility library?
2015-11-03T20:25:59Z jackdaniel: processes like a separate processes, not a threads?
2015-11-03T20:26:03Z zadock quit (Quit: Leaving)
2015-11-03T20:26:38Z Posterdati: jackdaniel: could not compile iolib on ecl
2015-11-03T20:26:38Z knobo1 quit (Ping timeout: 260 seconds)
2015-11-03T20:26:41Z briantrice quit (Quit: briantrice)
2015-11-03T20:26:42Z ajtulloch quit (Remote host closed the connection)
2015-11-03T20:26:44Z Posterdati: jackdaniel: :(
2015-11-03T20:26:59Z jackdaniel: Posterdati: how so? what's the error?
2015-11-03T20:27:06Z emaczen: jackdaniel: I want to start nodejs and evaluate some javascript code
2015-11-03T20:27:10Z dkcl quit (Remote host closed the connection)
2015-11-03T20:27:11Z jackdaniel: do you have libfixposix?
2015-11-03T20:27:17Z dandersen joined #lisp
2015-11-03T20:27:17Z Posterdati: yes
2015-11-03T20:27:35Z jackdaniel: emaczen: I'd go with (uiop:run-program …)
2015-11-03T20:27:37Z Posterdati: I just changed user
2015-11-03T20:27:49Z jackdaniel: and what is the error?
2015-11-03T20:29:40Z Posterdati: http://paste.lisp.org/display/158431
2015-11-03T20:29:48Z jackdaniel: emaczen: you can bind your own streams as i/o and run any arbitrary program portably
2015-11-03T20:29:53Z MoALTz_ is now known as MoALTz
2015-11-03T20:30:11Z jackdaniel: well, semiportably - as far as uiop supports given implementation
2015-11-03T20:30:32Z ajtulloch joined #lisp
2015-11-03T20:30:56Z jackdaniel: aa, that one
2015-11-03T20:31:24Z Posterdati: jackdaniel: http://paste.lisp.org/display/158431
2015-11-03T20:31:24Z jackdaniel: it's iolib bug I've noticed recently. When I'll have time I'll try to provide a fix - but if you'll fix it make a pull request against iolib
2015-11-03T20:31:31Z jackdaniel: I'll have more time for the other stuff
2015-11-03T20:31:51Z Posterdati: what is the problem?
2015-11-03T20:32:10Z jackdaniel: the problem is that (don't know why) iolib gives argument "   -D…" – this spaces are taken as one of the arguments
2015-11-03T20:32:15Z Posterdati: grovel.lisp?
2015-11-03T20:32:35Z ozihcs joined #lisp
2015-11-03T20:32:38Z jackdaniel: so the argument doesn't start with "-" and isn't considered as an option of the program (g++) but a file with a very weird name
2015-11-03T20:32:53Z jackdaniel: idk where iolib "creates" the commands, it might be the file grovel
2015-11-03T20:33:27Z Posterdati: problem is c::*cc-flags*
2015-11-03T20:34:06Z Posterdati: CL-USER> c::*cc-flags*
2015-11-03T20:34:06Z Posterdati: "   -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -g -O2 -fPIC -D_THREAD_SAFE -Dlinux"
2015-11-03T20:34:07Z jackdaniel: hm
2015-11-03T20:34:27Z jackdaniel: the solution would be splitting the sequence on #\space
2015-11-03T20:35:06Z ozihcs left #lisp
2015-11-03T20:35:09Z dandersen is now known as dkcl
2015-11-03T20:35:39Z jackdaniel: hm,in grovel at line 279 I think
2015-11-03T20:36:42Z Posterdati: yes I noticed that
2015-11-03T20:36:47Z jackdaniel: split-sequence is already imported by the package
2015-11-03T20:37:03Z Posterdati: how can we strip initial spaces?
2015-11-03T20:37:15Z jackdaniel: I think that split sequence will whip them out
2015-11-03T20:37:16Z dkcl quit (Remote host closed the connection)
2015-11-03T20:37:27Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-03T20:39:32Z jackdaniel: (split-sequence:split-sequence #\ "   daniel bah dah" :remove-empty-subseqs t)
2015-11-03T20:41:06Z jackdaniel: Posterdati: could you fix it in iolib and make a pull request?
2015-11-03T20:41:24Z Posterdati: #+ecl (split-sequence:split-sequence c::*cc-flags* :remove-empty-subseqs t)
2015-11-03T20:41:54Z jackdaniel: yeah, that should do (if split-sequence is directly imported in the package you may omit the package specifier)
2015-11-03T20:42:08Z ajtulloch quit (Remote host closed the connection)
2015-11-03T20:42:27Z Shinmera: If you just need to trim.. (string-left-trim " " string)
2015-11-03T20:42:42Z jackdaniel: Shinmera: parameters needs to be separated
2015-11-03T20:42:49Z jackdaniel: if used like iolib does
2015-11-03T20:42:54Z Shinmera: Sure, but just primitively splitting by space is not a good idea either.
2015-11-03T20:42:56Z jackdaniel: other way it will be passed as one argument
2015-11-03T20:43:04Z Shinmera: You'll need a proper parser to do it Right™
2015-11-03T20:43:18Z Posterdati: not compiling either
2015-11-03T20:43:47Z jackdaniel: Posterdati: another error?
2015-11-03T20:44:00Z Posterdati: yes
2015-11-03T20:44:10Z erjoalgo quit (Ping timeout: 240 seconds)
2015-11-03T20:44:44Z Posterdati: http://paste.lisp.org/display/158431#1
2015-11-03T20:44:58Z mvilleneuve joined #lisp
2015-11-03T20:46:24Z jackdaniel: I don't see loading the swank from the grovel…
2015-11-03T20:46:56Z jackdaniel: have you removed the cache?
2015-11-03T20:47:19Z Posterdati: no, wait
2015-11-03T20:47:30Z ajtulloch joined #lisp
2015-11-03T20:48:37Z Posterdati: I removed iolib from .cache
2015-11-03T20:50:13Z Posterdati: The function IOLIB-GROVEL::SPLIT-SEQUENCE is undefined.
2015-11-03T20:50:32Z jackdaniel: then use the direct specifier (I tought it's imported)
2015-11-03T20:50:36Z jackdaniel: thought
2015-11-03T20:50:53Z jackdaniel: like you originally did
2015-11-03T20:51:14Z Posterdati: ok
2015-11-03T20:51:56Z Posterdati: #+ecl (split-sequence:split-sequence c::*cc-flags* :remove-empty-subseqs t)
2015-11-03T20:52:10Z jackdaniel: Shinmera: yeah, for situations when user escapes the space or keeps it in the "". Fortunately it's not the case here (with cc-flags) and split-sequence gives the correct result (list of the arguments)
2015-11-03T20:52:17Z jackdaniel: Posterdati: looks OK to me
2015-11-03T20:52:27Z Posterdati: ok
2015-11-03T20:52:33Z Posterdati: seems compiling
2015-11-03T20:52:37Z jackdaniel: good :-)
2015-11-03T20:52:41Z jackdaniel: I'm leaving in 5 minutes
2015-11-03T20:52:47Z oleo__ joined #lisp
2015-11-03T20:52:51Z Posterdati: ok
2015-11-03T20:54:00Z Posterdati: ;;; Internal error:
2015-11-03T20:54:01Z Posterdati: ;;;   ** There is no package with the name SPLIT-SEQUENCE.
2015-11-03T20:54:06Z jackdaniel: ow
2015-11-03T20:54:32Z jackdaniel: then I had to make mistake - it's not enlisted as dependency
2015-11-03T20:55:10Z Posterdati: there's no split sequence in the asd
2015-11-03T20:55:19Z oleo_ quit (Ping timeout: 250 seconds)
2015-11-03T20:55:27Z marvi quit (Quit: Bye)
2015-11-03T20:56:00Z marvi joined #lisp
2015-11-03T20:56:00Z marvi quit (Changing host)
2015-11-03T20:56:00Z marvi joined #lisp
2015-11-03T20:56:13Z jackdaniel: I've found it in base/pkgdcl.lisp (via find-grep)
2015-11-03T20:57:00Z Posterdati: iolib.asd
2015-11-03T20:57:16Z Posterdati: line 91
2015-11-03T20:57:59Z Posterdati: same error
2015-11-03T20:58:00Z Posterdati: grrrrr
2015-11-03T20:58:11Z kaleun quit (Quit: Leaving)
2015-11-03T20:58:22Z jackdaniel: you may either add dependency in system :iolib/grovel on :iolib/base (preferable) or directly on :split-sequence
2015-11-03T20:58:42Z josemanuel joined #lisp
2015-11-03T20:58:56Z jackdaniel: or no, prefered (used in definitions) is directly requireing split-sequence
2015-11-03T20:59:16Z jackdaniel: add in line 90 :split-sequence after :alexandria
2015-11-03T20:59:24Z euandreh joined #lisp
2015-11-03T20:59:29Z jdz quit (Ping timeout: 252 seconds)
2015-11-03T21:00:04Z Posterdati: I did but I've got this
2015-11-03T21:00:18Z Posterdati: http://paste.lisp.org/display/158431#1
2015-11-03T21:00:56Z Draz quit (Quit: Leaving)
2015-11-03T21:01:01Z jackdaniel: did you remove a cache after modifying asd?
2015-11-03T21:01:18Z jackdaniel: also restart :0 might have the same effect (not sure though)
2015-11-03T21:01:19Z Posterdati: yes
2015-11-03T21:01:52Z jackdaniel: weird, especially that I don't see any form like that in file grovel
2015-11-03T21:02:27Z ajtulloch quit (Remote host closed the connection)
2015-11-03T21:03:14Z ajtulloch joined #lisp
2015-11-03T21:03:34Z lispyone_ quit (Remote host closed the connection)
2015-11-03T21:04:20Z Posterdati: not working
2015-11-03T21:05:13Z jackdaniel: derp
2015-11-03T21:05:30Z jackdaniel: it should be #+ecl (split-sequence:split-sequence #\  c::*cc-flags* :remove-empty-subseqs t)
2015-11-03T21:05:37Z jackdaniel: delimiter is a first argument
2015-11-03T21:06:09Z jdz joined #lisp
2015-11-03T21:06:09Z jackdaniel: (split-sequence:split-sequence #\space c::*cc-flags* :remove-empty-subseqs t)
2015-11-03T21:06:12Z jackdaniel: to make it more readable
2015-11-03T21:06:27Z mvilleneuve_ joined #lisp
2015-11-03T21:07:16Z jackdaniel: and it loads fine for me now (after fixes both in iolib.asd file and grovel.lisp)
2015-11-03T21:07:39Z Posterdati: quickloading now
2015-11-03T21:08:01Z briantrice joined #lisp
2015-11-03T21:08:15Z Posterdati: compiling...
2015-11-03T21:09:11Z Denommus quit (Read error: Connection reset by peer)
2015-11-03T21:09:12Z k-stz joined #lisp
2015-11-03T21:09:22Z jackdaniel: Posterdati: may I assume you'll make a PR for iolib project on github if it'll work or should I add it to my todo list? (I'm going to bed now)
2015-11-03T21:09:24Z Posterdati: still compiling...
2015-11-03T21:09:26Z mvilleneuve quit (Ping timeout: 260 seconds)
2015-11-03T21:09:56Z Posterdati: let's talk about it tomorrow, I'm going to bed too :)
2015-11-03T21:13:46Z snv quit (Quit: Leaving.)
2015-11-03T21:16:54Z euandreh_ joined #lisp
2015-11-03T21:17:51Z euandreh quit (Ping timeout: 250 seconds)
2015-11-03T21:20:45Z Posterdati: compiling
2015-11-03T21:20:50Z Posterdati: good
2015-11-03T21:22:28Z lisse joined #lisp
2015-11-03T21:22:54Z ajtulloch quit (Remote host closed the connection)
2015-11-03T21:23:00Z Jesin quit (Quit: Leaving)
2015-11-03T21:25:00Z ghard quit (Ping timeout: 246 seconds)
2015-11-03T21:25:39Z euandreh_ quit (Remote host closed the connection)
2015-11-03T21:26:09Z ajtulloch joined #lisp
2015-11-03T21:26:15Z euandreh joined #lisp
2015-11-03T21:26:33Z Jesin joined #lisp
2015-11-03T21:29:26Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-03T21:29:51Z jackdaniel: Posterdati: I already made a PR
2015-11-03T21:30:29Z jackdaniel: good night all o/
2015-11-03T21:30:39Z euandreh quit (Ping timeout: 252 seconds)
2015-11-03T21:31:36Z grouzen joined #lisp
2015-11-03T21:31:37Z quazimodo quit (Ping timeout: 244 seconds)
2015-11-03T21:31:43Z Posterdati: ok
2015-11-03T21:31:50Z mishoo_ quit (Ping timeout: 260 seconds)
2015-11-03T21:31:53Z Posterdati: compilation went ok
2015-11-03T21:32:00Z Posterdati: thanks
2015-11-03T21:32:19Z Posterdati: I hope they fixes ioctl too
2015-11-03T21:32:39Z EvW quit (Ping timeout: 240 seconds)
2015-11-03T21:33:43Z pt1 joined #lisp
2015-11-03T21:34:50Z briantrice quit (Quit: briantrice)
2015-11-03T21:36:33Z EvW joined #lisp
2015-11-03T21:38:02Z dkcl joined #lisp
2015-11-03T21:38:49Z attila_lendvai joined #lisp
2015-11-03T21:39:14Z tsoutseki quit (Quit: Leaving)
2015-11-03T21:40:49Z mvilleneuve_ quit (Quit: This computer has gone to sleep)
2015-11-03T21:41:01Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-03T21:41:39Z mvilleneuve_ joined #lisp
2015-11-03T21:42:59Z briantrice joined #lisp
2015-11-03T21:45:53Z lispyone joined #lisp
2015-11-03T21:47:54Z euandreh joined #lisp
2015-11-03T21:48:05Z pt1__ joined #lisp
2015-11-03T21:48:09Z hiroakip quit (Quit: Ex-Chat)
2015-11-03T21:49:36Z pt1 quit (Ping timeout: 272 seconds)
2015-11-03T21:50:45Z cadadar left #lisp
2015-11-03T21:51:17Z malbertife joined #lisp
2015-11-03T21:53:06Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-03T21:54:43Z euandreh quit (Remote host closed the connection)
2015-11-03T21:57:01Z dkcl quit (Remote host closed the connection)
2015-11-03T21:57:34Z fridim_ quit (Ping timeout: 246 seconds)
2015-11-03T21:58:27Z Denommus joined #lisp
2015-11-03T21:58:32Z warweasle` quit (Quit: There's a snake in my boot!)
2015-11-03T21:58:36Z malbertife quit (Ping timeout: 255 seconds)
2015-11-03T21:58:36Z algae quit (Quit: leaving)
2015-11-03T22:00:01Z jtza8 quit (Remote host closed the connection)
2015-11-03T22:00:14Z farhaven joined #lisp
2015-11-03T22:01:56Z Firedancer quit (Ping timeout: 250 seconds)
2015-11-03T22:07:23Z mrSpec quit (Remote host closed the connection)
2015-11-03T22:07:53Z dkcl joined #lisp
2015-11-03T22:08:08Z Firedancer joined #lisp
2015-11-03T22:08:36Z mvilleneuve_ quit (Quit: This computer has gone to sleep)
2015-11-03T22:12:09Z briantrice quit (Quit: briantrice)
2015-11-03T22:12:20Z cyphase joined #lisp
2015-11-03T22:25:31Z dkcl quit (Remote host closed the connection)
2015-11-03T22:26:04Z ASau joined #lisp
2015-11-03T22:30:07Z bb010g quit (Quit: Connection closed for inactivity)
2015-11-03T22:32:58Z BlueRavenGT quit (Ping timeout: 260 seconds)
2015-11-03T22:34:52Z wtbrk quit (Ping timeout: 250 seconds)
2015-11-03T22:35:30Z EvW quit (Remote host closed the connection)
2015-11-03T22:35:35Z shookees quit (Ping timeout: 264 seconds)
2015-11-03T22:35:49Z EvW joined #lisp
2015-11-03T22:38:55Z pt1__ quit (Remote host closed the connection)
2015-11-03T22:39:56Z kobain joined #lisp
2015-11-03T22:39:57Z ajtulloch quit (Remote host closed the connection)
2015-11-03T22:40:32Z kobain quit (Max SendQ exceeded)
2015-11-03T22:42:10Z preacherAKAnd quit (Quit: Konversation terminated!)
2015-11-03T22:44:41Z ajtulloch joined #lisp
2015-11-03T22:49:08Z quazimodo joined #lisp
2015-11-03T22:49:36Z ASau` joined #lisp
2015-11-03T22:50:00Z josemanuel quit (Quit: Saliendo)
2015-11-03T22:50:09Z shookees joined #lisp
2015-11-03T22:50:40Z faalentijn quit (Ping timeout: 244 seconds)
2015-11-03T22:52:18Z ASau quit (Ping timeout: 272 seconds)
2015-11-03T22:53:15Z ASau` is now known as ASau
2015-11-03T22:53:21Z Denommus` joined #lisp
2015-11-03T22:54:48Z Denommus quit (Ping timeout: 250 seconds)
2015-11-03T22:55:35Z faalentijn joined #lisp
2015-11-03T22:59:45Z briantrice joined #lisp
2015-11-03T23:00:21Z faalentijn quit (Read error: Connection reset by peer)
2015-11-03T23:00:54Z faalentijn joined #lisp
2015-11-03T23:01:41Z happy-dude quit (Quit: Connection closed for inactivity)
2015-11-03T23:02:39Z Shinmera quit (Quit: しつれいしなければならないんです。)
2015-11-03T23:06:27Z leafybas_ joined #lisp
2015-11-03T23:06:46Z lispyone quit (Remote host closed the connection)
2015-11-03T23:06:47Z drmeister: How does one use loop to repeatedly call a function until a certain condition is met?
2015-11-03T23:08:19Z Denommus` quit (Quit: going home)
2015-11-03T23:09:06Z lnostdal_ joined #lisp
2015-11-03T23:09:35Z failproofshark: drmeister: loop :until (some form) :do blah
2015-11-03T23:10:43Z drmeister: I need to put the result of calling the function into a variable.
2015-11-03T23:11:17Z phoe_krk: perhaps :do (blah (setf variable thing)) :until (something)?
2015-11-03T23:11:19Z lnostdal quit (Ping timeout: 240 seconds)
2015-11-03T23:11:20Z phoe_krk: I mean, reverse the order?
2015-11-03T23:12:07Z phoe_krk: wait, I complicate it too much.
2015-11-03T23:12:41Z phoe_krk: Result of calling a function; which result? There is going to be a result for each calling of the function in the loop.
2015-11-03T23:13:02Z drmeister: I thought there was a keyword to loop over a closure that does something like traverse a closed over list.
2015-11-03T23:13:06Z White_Flame: would DO suffice instead?
2015-11-03T23:14:38Z drmeister: With do it would look like (loop do (setf x (foo)) until (null x)) - correct?
2015-11-03T23:14:54Z drmeister: Wrapped in a LET
2015-11-03T23:15:03Z White_Flame: (loop for a = (foo) until (...test a....))
2015-11-03T23:15:43Z drmeister: Really? For works that way? I did not know that.
2015-11-03T23:16:04Z failproofshark: yep
2015-11-03T23:16:37Z White_Flame: (loop for x = (foo) when (..test a...) return a), to get the final value
2015-11-03T23:16:46Z White_Flame: (loop for a = (foo) when (..test a...) return a), to get the final value
2015-11-03T23:16:59Z drmeister: Thank you - that works
2015-11-03T23:17:14Z phoe_krk: ...
2015-11-03T23:17:15Z phoe_krk: =
2015-11-03T23:17:21Z phoe_krk: yes, correct and wonderful
2015-11-03T23:17:23Z phoe_krk: wow
2015-11-03T23:17:38Z White_Flame: FORX=1TO10:PRINT"LISP":NEXT
2015-11-03T23:20:33Z White_Flame: oh, when I mentioned DO above, I meant (do ..) instead of (loop ...)
2015-11-03T23:20:50Z White_Flame: but I think loop might be shorter here, not sure
2015-11-03T23:21:15Z lisse joined #lisp
2015-11-03T23:21:50Z drmeister: Is "with" only done once and "for" is done every iteration?
2015-11-03T23:21:51Z TDT quit (Quit: TDT)
2015-11-03T23:23:03Z White_Flame: correct
2015-11-03T23:23:12Z White_Flame: "The with construct initializes variables that are local to a loop. The variables are initialized one time only."
2015-11-03T23:24:09Z White_Flame: (do ((a (foo) (foo))) ((..test a...) a))
2015-11-03T23:24:25Z White_Flame: not as nice as loop imo
2015-11-03T23:25:45Z sjl joined #lisp
2015-11-03T23:25:51Z lisse quit (Client Quit)
2015-11-03T23:29:42Z lispyone joined #lisp
2015-11-03T23:30:05Z sjl__ joined #lisp
2015-11-03T23:30:19Z futpib quit (Ping timeout: 240 seconds)
2015-11-03T23:30:33Z sjl quit (Ping timeout: 252 seconds)
2015-11-03T23:32:18Z peterhil joined #lisp
2015-11-03T23:33:58Z JuanDaugherty quit (Quit: Hibernate, reboot, etc.)
2015-11-03T23:35:06Z briantrice quit (Quit: briantrice)
2015-11-03T23:36:58Z k-stz quit (Remote host closed the connection)
2015-11-03T23:38:13Z mordocai quit (Quit: going home)
2015-11-03T23:43:16Z EvW1 joined #lisp
2015-11-03T23:44:39Z EvW quit (Ping timeout: 240 seconds)
2015-11-03T23:44:39Z EvW1 is now known as EvW
2015-11-03T23:45:06Z lisse joined #lisp
2015-11-03T23:46:12Z ASau quit (Remote host closed the connection)
2015-11-03T23:46:52Z ASau joined #lisp
2015-11-03T23:47:53Z TDT joined #lisp
2015-11-03T23:49:21Z lispyone quit (Remote host closed the connection)
2015-11-03T23:51:06Z briantrice joined #lisp
2015-11-03T23:55:52Z stepnem quit (Ping timeout: 246 seconds)
2015-11-04T00:02:50Z gniourf quit (Ping timeout: 240 seconds)
2015-11-04T00:04:41Z gniourf joined #lisp
2015-11-04T00:10:30Z _sjs quit (Ping timeout: 260 seconds)
2015-11-04T00:11:35Z Yanez quit (Ping timeout: 265 seconds)
2015-11-04T00:12:43Z LiamH quit (Quit: Leaving.)
2015-11-04T00:20:02Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-04T00:21:03Z Niac joined #lisp
2015-11-04T00:26:58Z lisse joined #lisp
2015-11-04T00:27:13Z johns` quit (Ping timeout: 268 seconds)
2015-11-04T00:28:27Z tmtwd joined #lisp
2015-11-04T00:30:06Z Karl_Dscc quit (Remote host closed the connection)
2015-11-04T00:31:20Z Draz joined #lisp
2015-11-04T00:31:55Z jleija joined #lisp
2015-11-04T00:35:37Z quasus quit (Quit: WeeChat 1.3)
2015-11-04T00:37:17Z harish_ quit (Ping timeout: 252 seconds)
2015-11-04T00:38:42Z quasus joined #lisp
2015-11-04T00:39:54Z xificurC quit (Ping timeout: 260 seconds)
2015-11-04T00:41:04Z grouzen quit (Quit: Lost terminal)
2015-11-04T00:41:59Z zeroish quit (Ping timeout: 240 seconds)
2015-11-04T00:45:33Z _sjs joined #lisp
2015-11-04T00:45:35Z karswell joined #lisp
2015-11-04T00:46:46Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-04T00:48:47Z scymtym_ quit (Ping timeout: 264 seconds)
2015-11-04T00:51:11Z remi`bd quit (Quit: leaving)
2015-11-04T00:59:04Z jasom: drmeister: note that both with and for each only establish a single binding
2015-11-04T00:59:17Z jasom: drmeister: so if you close over a "for" variable you will likely not get what you expect
2015-11-04T01:01:08Z ajtulloc_ joined #lisp
2015-11-04T01:01:22Z ajtulloch quit (Ping timeout: 265 seconds)
2015-11-04T01:03:51Z lisse joined #lisp
2015-11-04T01:06:05Z lispyone joined #lisp
2015-11-04T01:06:27Z lispyone quit (Remote host closed the connection)
2015-11-04T01:07:27Z lisse quit (Client Quit)
2015-11-04T01:08:49Z ajtulloc_ quit (Remote host closed the connection)
2015-11-04T01:12:33Z ebrasca quit (Remote host closed the connection)
2015-11-04T01:15:21Z ajtulloch joined #lisp
2015-11-04T01:15:23Z quasus quit (Ping timeout: 265 seconds)
2015-11-04T01:15:27Z JammyHammy joined #lisp
2015-11-04T01:16:58Z Nikotiini quit (Remote host closed the connection)
2015-11-04T01:17:03Z ajtulloch quit (Read error: Connection reset by peer)
2015-11-04T01:17:35Z ajtulloch joined #lisp
2015-11-04T01:20:06Z EvW quit (Ping timeout: 240 seconds)
2015-11-04T01:22:09Z ajtulloch quit (Ping timeout: 265 seconds)
2015-11-04T01:27:32Z drmeister: jasom - thank you,  I don't quite understand what you mean by "close over a "for" variable".
2015-11-04T01:28:08Z drmeister: I'm not actually closing over anything in CL.  It's a C++ function that returns successive elements of a spanning tree.
2015-11-04T01:29:25Z euandreh joined #lisp
2015-11-04T01:29:57Z bb010g joined #lisp
2015-11-04T01:30:08Z quasus joined #lisp
2015-11-04T01:30:09Z Xach: drmeister: if you did someting like e.g. (loop for i in list collect (lambda () <do something with i>))
2015-11-04T01:30:28Z Xach: each lambda would refer to the same i, not to successive values in the list.
2015-11-04T01:34:56Z drmeister: Ohhh.
2015-11-04T01:35:19Z drmeister: Here's what I'm doing:
2015-11-04T01:36:14Z drmeister: http://paste.lisp.org/display/158448
2015-11-04T01:36:20Z peterhil quit (Ping timeout: 272 seconds)
2015-11-04T01:37:24Z drmeister: Line 4.  Successive calls to (chem:next spanning-loop (lambda (a b) t)) return each successive atom in a spanning tree of a molecule (represented by an undirected graph)
2015-11-04T01:38:34Z drmeister: Lines 10-22 I want every "for" form to be evaluated and assigned to a variable every iteration of the loop
2015-11-04T01:39:41Z lispyone joined #lisp
2015-11-04T01:39:52Z drmeister: Whoops, last line has a typo
2015-11-04T01:40:14Z drmeister: http://paste.lisp.org/display/158448#1
2015-11-04T01:40:20Z drmeister: It should return the atom-tree
2015-11-04T01:40:31Z quasus quit (Ping timeout: 265 seconds)
2015-11-04T01:40:59Z briantrice quit (Quit: briantrice)
2015-11-04T01:41:23Z drmeister: This is me, finally getting a chance to eat some of my nummy dog food and write some code in Cando to build some damn molecules.
2015-11-04T01:42:04Z Bike: very exciting
2015-11-04T01:42:22Z drmeister: And writing loads of typos.
2015-11-04T01:42:28Z drmeister: missing '=' all over the place
2015-11-04T01:43:05Z drmeister: It's nice, I'm doing it in slime and it seems pretty robust.  No crashing in an hour of use.
2015-11-04T01:48:33Z LilSusieCrabCake joined #lisp
2015-11-04T01:48:41Z FreeBirdLjj joined #lisp
2015-11-04T01:50:22Z FreeBirdLjj quit (Client Quit)
2015-11-04T01:52:10Z emaczen quit (Ping timeout: 272 seconds)
2015-11-04T01:54:08Z harish_ joined #lisp
2015-11-04T01:54:11Z euandreh quit
2015-11-04T01:54:20Z FreeBirdLjj joined #lisp
2015-11-04T01:56:29Z leafybas_ quit (Remote host closed the connection)
2015-11-04T01:57:02Z leafybas_ joined #lisp
2015-11-04T01:59:32Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-04T02:00:36Z peterhil joined #lisp
2015-11-04T02:01:47Z leafybas_ quit (Ping timeout: 265 seconds)
2015-11-04T02:02:26Z drmeister: Hitting C-c C-c compiles typical forms in 1.5 seconds.  That's thanks to stassats speed-up of the cclasp compiler by about 3x.  Freakin' awesome.
2015-11-04T02:15:53Z drmeister: This is what you get when you build a molecule using an "atom-tree".  The molecule is an undirected graph. You pick one root atom to start and you traverse a spanning-tree. You build a collection of nodes where every node points back to the three nodes that precede it that point back up the spanning tree to the root. Then you write in distances, angles and
2015-11-04T02:15:53Z drmeister: dihedral angles that tell each node how far, what angle and what dihedral angle it makes with the previous three nodes respectively.
2015-11-04T02:16:14Z drmeister: Then you start at the root and follow the directions, building each node/atom position from the ones that are already built.
2015-11-04T02:16:14Z drmeister: http://i.imgur.com/r16m4KG.png
2015-11-04T02:17:06Z drmeister: It looks terrible because the dihedral angles are tricky to get right - so I punted on that for now and just randomly assign them 60, 180, 240 degrees.
2015-11-04T02:17:40Z drmeister: Also, this molecule has lots and lots of fused rings - and those are tricky to build because they have to close properly.
2015-11-04T02:21:22Z fiddlerwoaroof: clhs assoc
2015-11-04T02:21:22Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/f_assocc.htm
2015-11-04T02:23:39Z smokeink joined #lisp
2015-11-04T02:29:58Z harish_ quit (Remote host closed the connection)
2015-11-04T02:38:52Z briantrice joined #lisp
2015-11-04T02:41:14Z aap_ joined #lisp
2015-11-04T02:42:47Z impulse joined #lisp
2015-11-04T02:43:58Z kanru quit (Remote host closed the connection)
2015-11-04T02:44:48Z aap quit (Ping timeout: 265 seconds)
2015-11-04T02:46:22Z defaultxr joined #lisp
2015-11-04T02:51:11Z briantrice quit (Quit: briantrice)
2015-11-04T02:54:33Z TDT quit (Quit: TDT)
2015-11-04T02:56:29Z userm joined #lisp
2015-11-04T02:57:04Z kanru joined #lisp
2015-11-04T02:57:26Z briantrice joined #lisp
2015-11-04T02:57:32Z leafybas_ joined #lisp
2015-11-04T02:59:42Z lisse joined #lisp
2015-11-04T03:00:16Z joneshf-laptop quit (Ping timeout: 265 seconds)
2015-11-04T03:02:28Z leafybas_ quit (Ping timeout: 272 seconds)
2015-11-04T03:02:56Z guaqua quit (Read error: Connection reset by peer)
2015-11-04T03:03:06Z Subfusc quit (Ping timeout: 246 seconds)
2015-11-04T03:04:25Z JammyHammy quit (Read error: Connection reset by peer)
2015-11-04T03:04:30Z peterhil quit (Ping timeout: 246 seconds)
2015-11-04T03:05:06Z micro_ quit (Ping timeout: 240 seconds)
2015-11-04T03:05:09Z userm: I'm attempted to use create a parenscript library of functions I later want to use in another package, but I can't see how to get it to work. Here's what I've tried boiled down to a simple example https://gist.github.com/anonymous/944c2e99dcf46da4edde
2015-11-04T03:05:58Z vydd quit (Ping timeout: 260 seconds)
2015-11-04T03:06:04Z JammyHammy joined #lisp
2015-11-04T03:06:30Z Subfusc joined #lisp
2015-11-04T03:07:20Z micro_ joined #lisp
2015-11-04T03:07:28Z harish joined #lisp
2015-11-04T03:07:33Z rtra quit (Ping timeout: 268 seconds)
2015-11-04T03:07:44Z micro_ is now known as Guest52186
2015-11-04T03:08:58Z heddwch quit (Ping timeout: 265 seconds)
2015-11-04T03:08:59Z userm: If both the library and the library user packages are merged under one package, it works properly though. I think it must be package related, but think also I might have misunderstanding how parenscript works
2015-11-04T03:10:28Z pchrist quit (Ping timeout: 246 seconds)
2015-11-04T03:11:37Z pchrist joined #lisp
2015-11-04T03:13:05Z rtra joined #lisp
2015-11-04T03:15:24Z heddwch joined #lisp
2015-11-04T03:15:40Z pillton: userm: You need to export symbols from the pslibrary package.
2015-11-04T03:16:52Z pillton: Also, I would get in the habit of using strings for symbol names.
2015-11-04T03:17:14Z pillton: Sorry, symbol names in defpackage forms.
2015-11-04T03:19:17Z Xach prefers #:uninterned-symbols
2015-11-04T03:20:05Z heddwch quit (Ping timeout: 265 seconds)
2015-11-04T03:20:07Z pillton: I did too until recently.
2015-11-04T03:21:27Z pillton: I was under the impression that by using uninterned symbols that the user's preference for readtable-case would translate naturally to libraries the user had not written.
2015-11-04T03:22:13Z heddwch joined #lisp
2015-11-04T03:24:35Z Xach: i do it to avoid being gratuitously incompatible with mlisp
2015-11-04T03:25:07Z pillton: Haha
2015-11-04T03:25:19Z badkins quit (Remote host closed the connection)
2015-11-04T03:26:51Z badkins joined #lisp
2015-11-04T03:26:56Z badkins quit (Remote host closed the connection)
2015-11-04T03:30:29Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-04T03:34:46Z zyoung quit (Remote host closed the connection)
2015-11-04T03:35:07Z cmoney joined #lisp
2015-11-04T03:36:26Z shookees quit (Ping timeout: 260 seconds)
2015-11-04T03:39:44Z cmoney quit (Client Quit)
2015-11-04T03:40:59Z aretecode quit (Ping timeout: 264 seconds)
2015-11-04T03:43:05Z Draz quit (Quit: Leaving)
2015-11-04T03:46:36Z joneshf-laptop joined #lisp
2015-11-04T03:46:44Z aretecode joined #lisp
2015-11-04T03:47:49Z userm: That was it! Can't believe I spent the whole evening on it
2015-11-04T03:50:01Z mbuf joined #lisp
2015-11-04T03:50:09Z jleija quit (Quit: leaving)
2015-11-04T03:51:04Z johann_ joined #lisp
2015-11-04T03:54:03Z Quadrescence joined #lisp
2015-11-04T03:56:26Z blt joined #lisp
2015-11-04T03:57:26Z thodg joined #lisp
2015-11-04T03:58:34Z leafybas_ joined #lisp
2015-11-04T04:00:30Z pJ- joined #lisp
2015-11-04T04:02:15Z vydd joined #lisp
2015-11-04T04:03:02Z leafybas_ quit (Ping timeout: 260 seconds)
2015-11-04T04:03:02Z ASau quit (Ping timeout: 260 seconds)
2015-11-04T04:04:48Z lispyone quit (Remote host closed the connection)
2015-11-04T04:05:00Z briantrice quit (Quit: briantrice)
2015-11-04T04:05:45Z ASau joined #lisp
2015-11-04T04:06:06Z pJ- quit (Remote host closed the connection)
2015-11-04T04:06:39Z jfe` joined #lisp
2015-11-04T04:07:15Z blubjr` joined #lisp
2015-11-04T04:08:13Z s00pcan quit (Remote host closed the connection)
2015-11-04T04:08:29Z vydd quit (Ping timeout: 252 seconds)
2015-11-04T04:09:16Z NhanH_ joined #lisp
2015-11-04T04:09:19Z CEnnis91_ joined #lisp
2015-11-04T04:09:37Z Guest46854 joined #lisp
2015-11-04T04:10:29Z oskarth_ joined #lisp
2015-11-04T04:10:37Z Meow-J_ joined #lisp
2015-11-04T04:10:44Z clop2 joined #lisp
2015-11-04T04:10:46Z Bike_ joined #lisp
2015-11-04T04:11:28Z abbe quit (Ping timeout: 240 seconds)
2015-11-04T04:11:28Z Meow-J quit (Ping timeout: 240 seconds)
2015-11-04T04:11:28Z CEnnis91 quit (Ping timeout: 240 seconds)
2015-11-04T04:11:29Z wolf_mozart quit (Ping timeout: 240 seconds)
2015-11-04T04:11:36Z otwieracz quit (Ping timeout: 240 seconds)
2015-11-04T04:11:36Z NhanH quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z lnostdal_ quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z jfe quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z ktx quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z sigjuice quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z oskarth quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z SAL9000 quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z gko quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z cyphase quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z Uptime quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z clop quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z blubjr quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z DANtheBEASTman quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z Bike quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z ineiros quit (Ping timeout: 240 seconds)
2015-11-04T04:11:37Z ineiros joined #lisp
2015-11-04T04:11:40Z pocket joined #lisp
2015-11-04T04:12:24Z abbe joined #lisp
2015-11-04T04:13:01Z blubjr` is now known as blubjr
2015-11-04T04:13:27Z CEnnis91_ is now known as CEnnis91
2015-11-04T04:13:42Z oskarth_ is now known as oskarth
2015-11-04T04:13:54Z NhanH_ is now known as NhanH
2015-11-04T04:14:13Z DANtheBEASTman joined #lisp
2015-11-04T04:14:23Z sunwukong joined #lisp
2015-11-04T04:14:27Z sigjuice joined #lisp
2015-11-04T04:14:34Z Meow-J_ is now known as Meow-J
2015-11-04T04:14:39Z Guest46854 is now known as Uptime
2015-11-04T04:14:55Z gko joined #lisp
2015-11-04T04:15:24Z PlasmaStar quit (Max SendQ exceeded)
2015-11-04T04:15:40Z PlasmaStar joined #lisp
2015-11-04T04:15:48Z ktx joined #lisp
2015-11-04T04:16:24Z SAL9000 joined #lisp
2015-11-04T04:16:39Z otwieracz joined #lisp
2015-11-04T04:21:35Z wolf_mozart joined #lisp
2015-11-04T04:22:53Z cyphase joined #lisp
2015-11-04T04:25:00Z lnostdal_ joined #lisp
2015-11-04T04:25:09Z BlueRavenGT joined #lisp
2015-11-04T04:28:59Z lisse joined #lisp
2015-11-04T04:34:15Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-04T04:45:29Z tetheno joined #lisp
2015-11-04T04:47:20Z lisse joined #lisp
2015-11-04T04:53:27Z Bike_ is now known as Bike
2015-11-04T04:54:14Z userm quit (Ping timeout: 260 seconds)
2015-11-04T04:54:32Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-04T04:59:00Z lisse joined #lisp
2015-11-04T05:00:36Z leafybas_ joined #lisp
2015-11-04T05:05:27Z leafybas_ quit (Ping timeout: 265 seconds)
2015-11-04T05:07:09Z Whymind quit (Ping timeout: 250 seconds)
2015-11-04T05:07:48Z sdothum quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-11-04T05:08:33Z Whymind joined #lisp
2015-11-04T05:11:02Z Harag quit (Ping timeout: 260 seconds)
2015-11-04T05:12:01Z malbertife joined #lisp
2015-11-04T05:14:10Z mac_ified quit
2015-11-04T05:15:19Z thodg quit (Ping timeout: 246 seconds)
2015-11-04T05:23:12Z pocket quit (Ping timeout: 255 seconds)
2015-11-04T05:28:05Z oleo__ quit (Quit: Verlassend)
2015-11-04T05:28:31Z OrangeShark quit (Quit: Leaving)
2015-11-04T05:32:50Z s00pcan joined #lisp
2015-11-04T05:37:13Z vlatkoB joined #lisp
2015-11-04T05:39:20Z ramky joined #lisp
2015-11-04T05:40:17Z akkad: Xach: is there any issues that cause cmucl to not see installed packages? get system-not-found for everthing. am forced to nuke ~/quicklisp and let cmucl set it up to be aware of what is there
2015-11-04T05:41:13Z akkad: odd. ; File: /home/akkad/quicklisp/quicklisp/setup.lisp (CERROR "Try again" 'SYSTEM-NOT-FOUND :NAME NAME)
2015-11-04T05:41:13Z akkad:  
2015-11-04T05:47:39Z wizzo quit (Changing host)
2015-11-04T05:47:39Z wizzo joined #lisp
2015-11-04T05:47:59Z blt quit (Ping timeout: 265 seconds)
2015-11-04T05:50:48Z schaueho joined #lisp
2015-11-04T05:58:43Z BlueRavenGT quit (Ping timeout: 250 seconds)
2015-11-04T06:01:46Z gingerale joined #lisp
2015-11-04T06:05:36Z lispyone joined #lisp
2015-11-04T06:08:01Z oleba` quit (Ping timeout: 252 seconds)
2015-11-04T06:10:27Z lispyone quit (Ping timeout: 255 seconds)
2015-11-04T06:11:38Z snv joined #lisp
2015-11-04T06:14:15Z aap_ is now known as aap
2015-11-04T06:14:59Z Raimondii joined #lisp
2015-11-04T06:15:13Z briantrice joined #lisp
2015-11-04T06:15:25Z blt joined #lisp
2015-11-04T06:16:59Z kp666 joined #lisp
2015-11-04T06:17:39Z Raimondi quit (Ping timeout: 255 seconds)
2015-11-04T06:18:46Z ASau quit (Ping timeout: 240 seconds)
2015-11-04T06:19:10Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-04T06:19:54Z blt quit (Ping timeout: 255 seconds)
2015-11-04T06:21:35Z kp666 quit (Ping timeout: 252 seconds)
2015-11-04T06:22:44Z kp666 joined #lisp
2015-11-04T06:24:50Z Raimondii is now known as Raimondi
2015-11-04T06:25:38Z kp666 quit (Max SendQ exceeded)
2015-11-04T06:25:56Z kp666 joined #lisp
2015-11-04T06:29:31Z pt1 joined #lisp
2015-11-04T06:30:33Z preacherAKAnd joined #lisp
2015-11-04T06:31:20Z blt joined #lisp
2015-11-04T06:31:47Z kp666 quit (Ping timeout: 260 seconds)
2015-11-04T06:34:53Z wizzo quit (Excess Flood)
2015-11-04T06:35:37Z wizzo joined #lisp
2015-11-04T06:35:49Z kp666 joined #lisp
2015-11-04T06:36:51Z tmtwd quit (Quit: Leaving)
2015-11-04T06:40:06Z mrSpec joined #lisp
2015-11-04T06:40:23Z blt quit (Quit: WeeChat 1.3)
2015-11-04T06:40:55Z schaueho quit (Ping timeout: 268 seconds)
2015-11-04T06:41:57Z kp666 quit (Ping timeout: 255 seconds)
2015-11-04T06:46:13Z kp666 joined #lisp
2015-11-04T06:50:53Z gingerale quit (Remote host closed the connection)
2015-11-04T06:51:47Z kp666 quit (Ping timeout: 265 seconds)
2015-11-04T06:57:35Z pt1 quit (Remote host closed the connection)
2015-11-04T06:59:05Z briantrice quit (Quit: briantrice)
2015-11-04T07:01:13Z mishoo_ joined #lisp
2015-11-04T07:04:00Z Shinmera joined #lisp
2015-11-04T07:04:58Z tmtwd joined #lisp
2015-11-04T07:05:55Z snv quit (Read error: Connection reset by peer)
2015-11-04T07:07:14Z cyraxjoe quit (Ping timeout: 260 seconds)
2015-11-04T07:08:10Z Niac quit (Ping timeout: 260 seconds)
2015-11-04T07:08:33Z snv joined #lisp
2015-11-04T07:08:48Z wizzo quit (Changing host)
2015-11-04T07:08:48Z wizzo joined #lisp
2015-11-04T07:08:58Z Karl_Dscc joined #lisp
2015-11-04T07:09:23Z Niac joined #lisp
2015-11-04T07:10:06Z bobbysmith007 quit (Ping timeout: 250 seconds)
2015-11-04T07:10:09Z sigjuice quit (Ping timeout: 265 seconds)
2015-11-04T07:10:12Z tmtwd quit (Remote host closed the connection)
2015-11-04T07:10:38Z sigjuice joined #lisp
2015-11-04T07:10:40Z pocket joined #lisp
2015-11-04T07:11:02Z bobbysmith007 joined #lisp
2015-11-04T07:11:51Z tralala joined #lisp
2015-11-04T07:15:48Z shookees joined #lisp
2015-11-04T07:20:35Z shookees quit (Ping timeout: 264 seconds)
2015-11-04T07:20:47Z edran_ quit (Ping timeout: 265 seconds)
2015-11-04T07:21:16Z edran joined #lisp
2015-11-04T07:22:40Z ghard joined #lisp
2015-11-04T07:27:24Z Kruppe quit (*.net *.split)
2015-11-04T07:27:26Z euphoriaa quit (*.net *.split)
2015-11-04T07:27:26Z o`connor quit (*.net *.split)
2015-11-04T07:27:33Z Whymind quit (Ping timeout: 265 seconds)
2015-11-04T07:27:50Z Whymind joined #lisp
2015-11-04T07:28:52Z mathrick joined #lisp
2015-11-04T07:30:12Z Kruppe joined #lisp
2015-11-04T07:31:57Z tmtwd joined #lisp
2015-11-04T07:32:25Z shookees joined #lisp
2015-11-04T07:35:48Z o`connor joined #lisp
2015-11-04T07:38:20Z Karl_Dscc quit (Remote host closed the connection)
2015-11-04T07:39:08Z pt1 joined #lisp
2015-11-04T07:39:41Z tmtwd quit (Ping timeout: 250 seconds)
2015-11-04T07:40:54Z malbertife quit (Ping timeout: 255 seconds)
2015-11-04T07:41:30Z fridim_ joined #lisp
2015-11-04T07:44:27Z HDurer quit (Ping timeout: 250 seconds)
2015-11-04T07:46:00Z pjb: minion: memo for erjoalgo: you've been told bullshit by White_Flame.  The CLHS doesn't specify what #\[ means in namestrings.  The presence of #\[ in a namestrings makes it a namestring for a physical pathname, which is entirely unspecified by the ANSI Common Lisp standard. It's up to the implementation to specify what it may or may not mean.  So you should read the documentation of your specification. (And yes, often implementation
2015-11-04T07:46:01Z minion: Remembered. I'll tell erjoalgo when he/she/it next speaks.
2015-11-04T07:46:01Z pjb: accept #\\ as an escape in physical pathnames, check with yours).
2015-11-04T07:46:23Z White_Flame: I mentioned nothing about the spec
2015-11-04T07:47:17Z White_Flame: only that he was seeing a directory usage
2015-11-04T07:47:22Z White_Flame: oh, and the spec had some examples
2015-11-04T07:47:51Z White_Flame: which showed that on some filesystems, square brackets can denote dirs
2015-11-04T07:50:01Z cadadar joined #lisp
2015-11-04T07:54:45Z lispyone joined #lisp
2015-11-04T07:56:16Z marvi quit (Quit: Bye)
2015-11-04T07:56:29Z HDurer joined #lisp
2015-11-04T07:59:21Z lispyone quit (Ping timeout: 255 seconds)
2015-11-04T08:00:07Z bb010g quit (Quit: Connection closed for inactivity)
2015-11-04T08:03:25Z pjb: White_Flame: it's not directory usage, it's implementation dependant.
2015-11-04T08:03:40Z pjb: With an implementation  running on unix, it could be a wildcard.
2015-11-04T08:03:43Z _cosmonaut_ joined #lisp
2015-11-04T08:05:18Z White_Flame: sure, as mentioned by others there, which I didn't have to cover
2015-11-04T08:09:24Z Karl_Dscc joined #lisp
2015-11-04T08:09:39Z HDurer quit (Ping timeout: 240 seconds)
2015-11-04T08:10:32Z ggole joined #lisp
2015-11-04T08:10:51Z Niac quit (Ping timeout: 252 seconds)
2015-11-04T08:13:07Z Niac joined #lisp
2015-11-04T08:14:53Z Karl_Dscc quit (Remote host closed the connection)
2015-11-04T08:18:53Z remi`bd joined #lisp
2015-11-04T08:19:06Z xrash joined #lisp
2015-11-04T08:20:33Z lnostdal_ quit (Ping timeout: 246 seconds)
2015-11-04T08:20:47Z HDurer joined #lisp
2015-11-04T08:25:43Z mvilleneuve joined #lisp
2015-11-04T08:26:46Z Karl_Dscc joined #lisp
2015-11-04T08:27:37Z pyon joined #lisp
2015-11-04T08:30:23Z guaqua joined #lisp
2015-11-04T08:33:40Z lnostdal_ joined #lisp
2015-11-04T08:36:40Z fridim_ quit (Ping timeout: 265 seconds)
2015-11-04T08:36:47Z johann_ quit (Remote host closed the connection)
2015-11-04T08:38:10Z fridim_ joined #lisp
2015-11-04T08:38:20Z Harag joined #lisp
2015-11-04T08:39:10Z fridim_ quit (Remote host closed the connection)
2015-11-04T08:39:19Z quazimodo quit (Ping timeout: 240 seconds)
2015-11-04T08:40:39Z attila_lendvai joined #lisp
2015-11-04T08:41:00Z Mon_Ouie joined #lisp
2015-11-04T08:43:01Z Walex quit (Remote host closed the connection)
2015-11-04T08:43:53Z gravicappa joined #lisp
2015-11-04T08:47:13Z harish quit (Quit: Leaving)
2015-11-04T08:47:32Z harish joined #lisp
2015-11-04T08:47:32Z harish quit (Client Quit)
2015-11-04T08:49:57Z kushal joined #lisp
2015-11-04T08:50:39Z harish joined #lisp
2015-11-04T08:51:27Z ghard quit (Remote host closed the connection)
2015-11-04T08:54:26Z guicho joined #lisp
2015-11-04T08:55:31Z heddwch quit (Ping timeout: 265 seconds)
2015-11-04T08:55:45Z guicho: Updated the reddit  description  on eazy opencl from a phone.
2015-11-04T08:56:32Z guichoo joined #lisp
2015-11-04T08:56:33Z guicho quit (Read error: Connection reset by peer)
2015-11-04T08:57:30Z heddwch joined #lisp
2015-11-04T08:58:52Z balle joined #lisp
2015-11-04T08:59:33Z guicho joined #lisp
2015-11-04T08:59:33Z guichoo quit (Read error: Connection reset by peer)
2015-11-04T09:00:56Z guicho: To try eazy-opencl you need the latest cffi wih a fix on base-type of the bitfield
2015-11-04T09:04:37Z guicho: Todays lab seminar on school was about gpu based parallel A*. If lisp based kernel is available this would be a best application of it
2015-11-04T09:06:35Z guichoo joined #lisp
2015-11-04T09:06:45Z guichoo: Because writing moderately complex code as search algorithms in opencl C or CUDA C is always painful.
2015-11-04T09:08:16Z _cosmona` joined #lisp
2015-11-04T09:10:23Z guicho quit (Ping timeout: 264 seconds)
2015-11-04T09:14:03Z guichoo: Keywords:  GA*, Cockoo jashing
2015-11-04T09:14:09Z guichoo: Hashing
2015-11-04T09:14:32Z guichoo quit (Remote host closed the connection)
2015-11-04T09:14:44Z tsoutseki joined #lisp
2015-11-04T09:15:15Z guicho joined #lisp
2015-11-04T09:16:23Z LilSusieCrabCake quit (Ping timeout: 264 seconds)
2015-11-04T09:16:30Z leafybas_ joined #lisp
2015-11-04T09:17:46Z harish quit (Ping timeout: 240 seconds)
2015-11-04T09:19:28Z defaultxr quit (Quit: gnight)
2015-11-04T09:20:42Z zerac quit (Ping timeout: 260 seconds)
2015-11-04T09:20:53Z leafybas_ quit (Ping timeout: 252 seconds)
2015-11-04T09:21:48Z harish joined #lisp
2015-11-04T09:21:49Z stepnem joined #lisp
2015-11-04T09:22:29Z zerac joined #lisp
2015-11-04T09:22:49Z remi`bd quit (Quit: leaving)
2015-11-04T09:22:58Z kp666_ joined #lisp
2015-11-04T09:25:58Z yvm quit (Ping timeout: 265 seconds)
2015-11-04T09:26:23Z yvm joined #lisp
2015-11-04T09:29:31Z kushal quit (Quit: Leaving)
2015-11-04T09:30:25Z aerique quit (Quit: ...)
2015-11-04T09:30:57Z hitecnologys: Can anyone advise me on data structure to use for multicast channels? I need to create some sort of abstract bus inside my program to which components can attach and then send and/or receive messages.
2015-11-04T09:32:10Z hitecnologys: And yeah, the important point it that data is contained inside that bus, not put in every connection local queue.
2015-11-04T09:32:19Z lnostdal_ quit (Ping timeout: 246 seconds)
2015-11-04T09:32:31Z hitecnologys: The latter is trivial to implement but scales not so good.
2015-11-04T09:33:19Z sunwukong quit (Ping timeout: 240 seconds)
2015-11-04T09:34:12Z Niac quit (Quit: Lost terminal)
2015-11-04T09:35:16Z Mon_Ouie quit (Ping timeout: 250 seconds)
2015-11-04T09:37:38Z johann_ joined #lisp
2015-11-04T09:38:36Z guicho quit (Read error: Connection reset by peer)
2015-11-04T09:38:46Z guicho joined #lisp
2015-11-04T09:40:07Z aretecode quit (Ping timeout: 244 seconds)
2015-11-04T09:42:05Z Cymew joined #lisp
2015-11-04T09:42:18Z johann_ quit (Ping timeout: 260 seconds)
2015-11-04T09:43:27Z Guest14 joined #lisp
2015-11-04T09:43:34Z lispyone joined #lisp
2015-11-04T09:44:34Z aerique joined #lisp
2015-11-04T09:45:52Z lnostdal_ joined #lisp
2015-11-04T09:46:48Z White_Flame: hitecnologys: I think that might be within zeromq's wheelhouse
2015-11-04T09:46:49Z loke: guicho: Are you behing eazy-oepncl?
2015-11-04T09:46:51Z loke: opencl even
2015-11-04T09:47:46Z lispyone quit (Ping timeout: 240 seconds)
2015-11-04T09:47:55Z hitecnologys: White_Flame: right, AMQP is great, but I need two implementations: one that operates locally, in the same memory space, and the other that operates over network (message brokers without a doubt).
2015-11-04T09:48:01Z harish quit (Ping timeout: 252 seconds)
2015-11-04T09:48:39Z White_Flame: doesn't zeromq do both?
2015-11-04T09:49:16Z White_Flame: or at least, it would be a reasonable basis for adding some back-end functionality that you'd specifically want
2015-11-04T09:49:30Z hitecnologys: Well, unless you mean using library it would still require encoding and decoding of messages which creates additional overhead.
2015-11-04T09:49:58Z hitecnologys: No, I don't want backend functionality. I want to exchange messages between scheduler and threads. =P
2015-11-04T09:50:09Z White_Flame: hmm, right, you don't need byte buffers for in-process comms
2015-11-04T09:51:10Z White_Flame: how many threads?  it sounds like you think inserting the message into each receiver queue would be too much overhead?
2015-11-04T09:52:12Z Karl_Dscc quit (Remote host closed the connection)
2015-11-04T09:52:22Z guicho quit (Remote host closed the connection)
2015-11-04T09:52:29Z pjb: Write specifications!
2015-11-04T09:52:44Z hitecnologys: I don't plan on starting more than (CPU_CORES_N+1) threads so there should really be not that much overhead on pushing message into each thread's queue.
2015-11-04T09:54:15Z White_Flame: and of course, if it's all immutable and within the same image, that's just pushing a reference, not copying the entire object anyway
2015-11-04T09:54:59Z White_Flame: so "data is contained inside that bus, not put in every connection local queue" may or may not be met, depending on your definition
2015-11-04T09:55:15Z hitecnologys: pjb: I have to abstract entities: a channel and a port. Ideally, I need to be able to connect as many ports as I want to a channel and have data send or received there. When data is send, all other ports but the one that sent it receive the message when they pull for it. Besides, I'd like to try to evade iterating over all the ports and sending data there (i.e. channel is immutable and port can connect and
2015-11-04T09:55:18Z hitecnologys: disconnect as they like).
2015-11-04T09:56:04Z hitecnologys: ports can connect*
2015-11-04T09:56:23Z hitecnologys: Argh, two abstract*.
2015-11-04T09:56:24Z White_Flame: sounds very similar to our internal erlang node support lib I wrote some years back
2015-11-04T09:57:18Z hitecnologys: I need all that hassle so that I can then, if I want, replace those entities by another implementations that operate over whatever carrier network I need.
2015-11-04T09:58:07Z White_Flame: fanning out copies really isn't expensive, but if you're looking to reduce latency, you might want to use a shared sliding window into an array of messages, with each reader having their own cursor into the queue.  However, then you have to signal each reader that something's ready anyway.  We didn't implement that scheme, since it didn't seem that it would yield great latency benefits
2015-11-04T09:58:09Z hitecnologys: White_Flame: do you still have the sources or it's not FOSS?
2015-11-04T09:58:40Z White_Flame: one of those "we'd like to release as FOSS" schemes, however there are other CL messaging/mailbox libs that may or may not be already out ther
2015-11-04T09:59:08Z White_Flame: having built a bunch of utilities, we really want to normalize with what's already out there, instead of being our own island of tech
2015-11-04T09:59:41Z hitecnologys: I see.
2015-11-04T10:00:22Z guicho joined #lisp
2015-11-04T10:00:26Z White_Flame: but we're doing a lot of AWS stuff right now, and this is almost identical to a SNS + SQS setup
2015-11-04T10:00:47Z heddwch quit (Read error: Connection reset by peer)
2015-11-04T10:00:49Z White_Flame: where you send to a SNS broadcast, which performs fanout to multiple SQS listener message queues
2015-11-04T10:01:23Z White_Flame: inside a single process, that fanout can either be on the sender thread, or an independent worker thread
2015-11-04T10:01:25Z leafybas_ joined #lisp
2015-11-04T10:02:15Z leafybas_ quit (Remote host closed the connection)
2015-11-04T10:02:27Z guicho_ joined #lisp
2015-11-04T10:02:34Z guicho quit (Remote host closed the connection)
2015-11-04T10:02:42Z leafybas_ joined #lisp
2015-11-04T10:05:03Z heddwch joined #lisp
2015-11-04T10:05:05Z guicho_: loke: behing?
2015-11-04T10:05:25Z loke: guicho_: "behind" :-)
2015-11-04T10:05:42Z guicho_: ok, then yes.
2015-11-04T10:05:55Z White_Flame: hitecnologys:  one thing that needs to be made clear is if this is 1-to-many, or many-to-many, and what does it mean for someone to write into the channel?  if it's 1-to-many, and the "one" writes, then all receive the message.  but if one of the "many" writes, is that a broadcast to everybody, or just to the "one"?
2015-11-04T10:06:20Z loke: guicho_: I just filed this bug report. Do you know the cause or is there any other information I can provide?
2015-11-04T10:06:20Z loke: https://github.com/guicho271828/eazy-opencl/issues/26
2015-11-04T10:06:21Z White_Flame: we tend to use single-directional queues.  makes this much easier
2015-11-04T10:06:37Z loke uses rabbitmq for my messaging needs. I like it a lot.
2015-11-04T10:06:43Z hitecnologys: White_Flame: it's mostly many-to-many since threads need to be able to signal to each other.
2015-11-04T10:07:09Z tsoutseki quit (Remote host closed the connection)
2015-11-04T10:07:32Z White_Flame: so basically pure broadcast among peers
2015-11-04T10:07:37Z hitecnologys: White_Flame: I though about giving each message an ID and screwing that "sender should not receive" part. Makes the solution easier but adds overhead.
2015-11-04T10:07:41Z hitecnologys: White_Flame: yeah.
2015-11-04T10:07:49Z tsoutseki joined #lisp
2015-11-04T10:07:50Z hitecnologys: thought*
2015-11-04T10:09:06Z guicho_: loke: that's exactly what I added to the reddit . it requires latest CFFI, which I forgot to mention in the readme.
2015-11-04T10:09:11Z guicho_: https://ja.reddit.com/r/lisp/comments/3r8pew/opencl_binding_for_common_lisp/
2015-11-04T10:10:24Z loke: guicho_: I see. Thanks.
2015-11-04T10:10:40Z loke: I presume the relevant cffi version will be included in the next ql?
2015-11-04T10:11:48Z guicho_: nah it doesn't. http://blog.quicklisp.org/2015_11_01_archive.html
2015-11-04T10:12:29Z guicho_: December release would be more likely.
2015-11-04T10:12:33Z loke: tried with latest cffi. No more error. Thanks!
2015-11-04T10:12:50Z loke: guicho_: Yeah, I presume december will be the next release
2015-11-04T10:13:55Z guicho_: btw, which opencl & cards are you using?
2015-11-04T10:14:03Z guicho_: GPU cards
2015-11-04T10:14:10Z loke: guicho_: I have some nvidia card :-)
2015-11-04T10:14:21Z loke: Quadro K600
2015-11-04T10:14:35Z loke: GK107GL
2015-11-04T10:14:37Z loke: apparently
2015-11-04T10:14:38Z loke: :-)
2015-11-04T10:14:46Z guicho_: that sounds very good, since I only tested it on old Radeon
2015-11-04T10:14:57Z guicho_: and on CPU + POCL
2015-11-04T10:15:01Z loke: Well, it's not new. At least a year (probably more) old.
2015-11-04T10:15:12Z loke: But I have some K80's here
2015-11-04T10:15:24Z hitecnologys: White_Flame: so, you think I should make my channels 1-to-1 and then add something like switch to enable many-to-many?
2015-11-04T10:15:35Z loke: I have a machine with 2 K80's in it
2015-11-04T10:15:36Z loke: https://www.nvidia.com/object/tesla-servers.html
2015-11-04T10:15:55Z loke: 4992 cuda cores. That one is pretty neat.
2015-11-04T10:16:09Z loke: (*2)
2015-11-04T10:16:09Z White_Flame: no, I think you already have a unidrectional system.  messages go to the channel identity, and get stuffed into mailboxes per listener
2015-11-04T10:16:11Z guicho_: my SAPPHIRE HD5770 1G is released in 2009. 6 yrs old.
2015-11-04T10:16:31Z White_Flame: (regardless of how the actual underlying data structures behave)
2015-11-04T10:17:10Z hitecnologys: White_Flame: ah, I see.
2015-11-04T10:18:16Z vydd joined #lisp
2015-11-04T10:19:12Z hitecnologys: White_Flame: so, when a port connects, we create a queue for it and when it needs to send data we put in all other queues but the one that belongs to the sender?
2015-11-04T10:19:27Z White_Flame: sure
2015-11-04T10:19:54Z hitecnologys: Alright, since I can't think of anything better this might work. Thanks.
2015-11-04T10:19:55Z White_Flame: there's a decision as to whether adding/removing a port is a message sent to the channel, or is done purely asynchronously
2015-11-04T10:20:32Z White_Flame: that mostly has to do with how messages are cut off when you disconnect, depending on if incoming messages trigger a lambda, or are read/polled
2015-11-04T10:20:44Z loke: OK, this is funny... The K80 has almost 5000 cude cores. My workstation K600 has... 96.
2015-11-04T10:21:04Z White_Flame: if you have a lot of messages, be sure that you pull the entire queue as 1 atomic thread operation, then drain that queue message by message locally
2015-11-04T10:21:09Z loke: Somehow I don't thinkmy workstation can compete with the k80
2015-11-04T10:21:25Z pocket quit (Quit: Leaving...)
2015-11-04T10:22:40Z guicho_: Massively Parallel A* Search on a GPU Y Zhou, J Zeng - Twenty-Ninth AAAI Conference on Artificial Intelligence, 2015 - aaai.org
2015-11-04T10:22:51Z hitecnologys: White_Flame: why should I pull the entire queue if pushing and reading is non-blocking?
2015-11-04T10:23:03Z guicho_: oops I paste something
2015-11-04T10:23:58Z guicho_: well, first successful application of GPU to memory-intensive combinatorial search
2015-11-04T10:24:16Z loke: guicho_: Do you have any example code?
2015-11-04T10:24:32Z loke: guicho_: I'm reading the readme, but there is not much in explanaing how the library is used.
2015-11-04T10:24:51Z White_Flame: hitecnologys: because it's a cross-thread operation.  Only hit the shared buffer if the local buffer is drained
2015-11-04T10:25:05Z White_Flame: far less contention on the locks
2015-11-04T10:25:19Z White_Flame: and easily implemented via compare-and-swap
2015-11-04T10:25:43Z guicho_: loke: not really, sorry. its rather a background work.
2015-11-04T10:26:14Z hitecnologys: White_Flame: I tend not to use locks. The library I'm writing is focused on usage of transactional memory.
2015-11-04T10:26:28Z White_Flame: ok, I've not gone down that route
2015-11-04T10:26:51Z guicho_: it's forked from cl-opencl-3b. I am translating its examples to the new API.
2015-11-04T10:26:56Z hitecnologys: White_Flame: the only part where locks kick in is the BT thread management part (e.g. JOING-THREAD to wait until thread stops).
2015-11-04T10:27:20Z hitecnologys: JOIN*
2015-11-04T10:27:21Z gaya- joined #lisp
2015-11-04T10:27:27Z loke: guicho_: do you have some minimal example? I mean very minimal.
2015-11-04T10:27:35Z loke: Just test code would be good enough.
2015-11-04T10:28:02Z guicho_: the tests contain helloworld example.
2015-11-04T10:28:09Z guicho_: under t/
2015-11-04T10:28:52Z guicho_: it runs during the test
2015-11-04T10:29:07Z White_Flame: hitecnologys: how much overhead are you adding with transactional memory, and is the performance of the messaging layer really going to matter then?
2015-11-04T10:29:44Z hitecnologys: White_Flame: I'm aiming the STM-capable processors so the overhead is negligible.
2015-11-04T10:30:09Z loke: guicho_: OK, I seem to have some driver problem. GET-PLATFORM-IDS throws PLATFORM-NOT-FOUND-KHR
2015-11-04T10:30:12Z loke: Is that a correct analysis?
2015-11-04T10:31:48Z guicho_: ls /etc/OpenCL/vendors/  results?
2015-11-04T10:33:05Z MaggieAndEazar joined #lisp
2015-11-04T10:34:01Z guicho_: I'm going offline now, will be back in an hour
2015-11-04T10:34:23Z loke: guicho_: There is a file there: nvidia.icd
2015-11-04T10:35:49Z guicho_: does your other opencl applications work, if any?
2015-11-04T10:37:04Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-04T10:37:06Z guicho_: for example, clinfo
2015-11-04T10:38:10Z guicho_ quit (Quit: さようなら)
2015-11-04T10:38:22Z FreeBird_ joined #lisp
2015-11-04T10:38:23Z johann_ joined #lisp
2015-11-04T10:39:04Z guicho joined #lisp
2015-11-04T10:40:40Z guicho quit (Remote host closed the connection)
2015-11-04T10:41:51Z FreeBirdLjj quit (Ping timeout: 265 seconds)
2015-11-04T10:42:58Z FreeBird_ quit (Ping timeout: 260 seconds)
2015-11-04T10:43:25Z phoe_krk quit (Quit: phoe_krk)
2015-11-04T10:43:32Z johann_ quit (Ping timeout: 272 seconds)
2015-11-04T10:45:35Z Guest14 joined #lisp
2015-11-04T10:46:50Z eazar001 quit (Ping timeout: 240 seconds)
2015-11-04T10:47:27Z loke: guicho_: I don't have clinfo
2015-11-04T10:47:29Z loke: installing it now
2015-11-04T10:48:19Z sunwukong joined #lisp
2015-11-04T10:52:36Z fridim_ joined #lisp
2015-11-04T10:56:19Z alexherbo2 quit (Ping timeout: 246 seconds)
2015-11-04T10:56:35Z guicho joined #lisp
2015-11-04T10:57:07Z alexherbo2 joined #lisp
2015-11-04T10:58:36Z guicho: loke: i might not be signed in since i am out, but im constantly checking the irc log , so reply at any time
2015-11-04T10:58:57Z guicho quit (Client Quit)
2015-11-04T11:00:29Z JammyHammy quit (Read error: Connection reset by peer)
2015-11-04T11:02:16Z pyon quit (Quit: restart)
2015-11-04T11:03:18Z guicho joined #lisp
2015-11-04T11:04:21Z radioninja quit (Ping timeout: 246 seconds)
2015-11-04T11:05:24Z hitecnologys: Shinmera: I'm experiencing some weird trouble using trivial-benchmark. Can you try evaluating the following form? (let ((timer (benchmark:make-timer))) (loop repeat 5000 for uuid = (uuid:make-v4-uuid) do (benchmark:with-sampling (timer) (uuid:uuid-to-byte-array uuid))) (benchmark:report timer))
2015-11-04T11:05:38Z hitecnologys: Shinmera: that needs uuid loaded as well.
2015-11-04T11:08:05Z loke: guicho: I just tested. It tells me I have 0 cards.
2015-11-04T11:08:11Z loke: So clearly a driver issue
2015-11-04T11:08:28Z guicho quit (Ping timeout: 244 seconds)
2015-11-04T11:08:31Z loke: guicho: I think perhaps the call should not thow an error in that case, but rather return nil?
2015-11-04T11:08:50Z Nikotiini joined #lisp
2015-11-04T11:10:30Z dkcl joined #lisp
2015-11-04T11:11:37Z ajf- quit (Quit: Textual IRC Client: www.textualapp.com)
2015-11-04T11:14:26Z Nikotiini quit (Read error: Connection reset by peer)
2015-11-04T11:14:59Z Nikotiini joined #lisp
2015-11-04T11:19:54Z huza joined #lisp
2015-11-04T11:20:41Z radioninja joined #lisp
2015-11-04T11:23:32Z sunwukong quit (Quit: Leaving)
2015-11-04T11:29:19Z hitecnologys: Are there any implementations of tries on CL?
2015-11-04T11:29:22Z lispyone joined #lisp
2015-11-04T11:29:48Z jackdaniel: tries?
2015-11-04T11:30:11Z hitecnologys: jackdaniel: it's a variant of radix tree.
2015-11-04T11:30:16Z hitecnologys: jackdaniel: https://en.wikipedia.org/wiki/Trie
2015-11-04T11:30:24Z jackdaniel: thanks
2015-11-04T11:30:58Z sjl__ is now known as sjl
2015-11-04T11:31:05Z hitecnologys: jackdaniel: they perform better than hash tables in some cases and provide O(1) lookup, insertion and deletion. They're also theoretically iterable.
2015-11-04T11:33:30Z lispyone quit (Ping timeout: 240 seconds)
2015-11-04T11:33:43Z cadadar quit (Quit: Leaving.)
2015-11-04T11:35:15Z quazimodo joined #lisp
2015-11-04T11:37:35Z Shinmera: hitecnologys: And.. what's the trouble?
2015-11-04T11:38:10Z hitecnologys: Shinmera: it works for you? It fails saying "Vector length (5000) doesn't match declared length (8007)." on my machine.
2015-11-04T11:38:18Z Shinmera: Works just fine.
2015-11-04T11:38:37Z Shinmera: Are you on latest QL and everything?
2015-11-04T11:38:38Z hitecnologys: That's the "weird trouble" part.
2015-11-04T11:38:42Z hitecnologys: Yep.
2015-11-04T11:38:48Z hitecnologys: Not the lastest SBCL, though.
2015-11-04T11:38:50Z Shinmera: hm. Don't know.
2015-11-04T11:38:51Z hitecnologys: latest*
2015-11-04T11:39:15Z hitecnologys: Oh, nope, I don't use latest QL.
2015-11-04T11:39:18Z hitecnologys: =P
2015-11-04T11:39:22Z hitecnologys: Lemme update.
2015-11-04T11:39:26Z johann_ joined #lisp
2015-11-04T11:39:29Z Shinmera: I didn't change it recently, but hey.
2015-11-04T11:39:54Z hitecnologys: WOAH
2015-11-04T11:40:23Z hitecnologys: Finally! I've been waiting so long for this! beta.quicklisp.org has been blocked by my ISP!
2015-11-04T11:40:30Z hitecnologys: …
2015-11-04T11:40:38Z Shinmera: Wait what? Are you sure?
2015-11-04T11:42:23Z hitecnologys: Heh, it's one of IP addresses.
2015-11-04T11:42:45Z hitecnologys: But nevertheless, one if cloudflare's IP addresses made it into the black list.
2015-11-04T11:42:45Z jackdaniel: I'd block mafia too if I could ;-)
2015-11-04T11:43:14Z ajiva joined #lisp
2015-11-04T11:43:26Z ajiva: Hi :)
2015-11-04T11:43:32Z jackdaniel: hello \o
2015-11-04T11:44:12Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-04T11:44:21Z johann_ quit (Ping timeout: 255 seconds)
2015-11-04T11:44:52Z hitecnologys: Anyway, enjoy: https://img.hitecnologys.org/blocked.png. From time to time I also get 404 in QL client since it resolves to the blocked IP. =P
2015-11-04T11:45:07Z guicho joined #lisp
2015-11-04T11:45:39Z futpib joined #lisp
2015-11-04T11:46:44Z hitecnologys wonders how long does he have until white lists
2015-11-04T11:46:45Z jackdaniel: is there any explanation "why"?
2015-11-04T11:49:06Z hitecnologys: jackdaniel: I don't remember the address of that Great Banned Sites List but I'm sure it's for drug dealing… For real, they've probably banned a site that's been using Cloudflare, possibly by URL, but my ISP doesn't have DPI-capable equipment so they ban by IP addresses.
2015-11-04T11:49:34Z jackdaniel: mhm
2015-11-04T11:49:51Z jackdaniel: relay your ql update through the tor ^_^
2015-11-04T11:51:29Z sjl quit (Quit: WeeChat 1.3)
2015-11-04T11:51:33Z hitecnologys: I have VPN host in another country and link though ISP that doesn't filter traffic so there should be no problem.
2015-11-04T11:52:21Z hitecnologys: Shinmera: even with the latest stuff it fails.
2015-11-04T11:52:59Z EvW joined #lisp
2015-11-04T11:54:42Z kilfer` joined #lisp
2015-11-04T11:55:00Z kilfer` quit (Client Quit)
2015-11-04T11:56:25Z Shinmera: hitecnologys: Weird.
2015-11-04T11:56:31Z Shinmera: Can you give me a trace?
2015-11-04T11:56:40Z hitecnologys: Shinmera: sec.
2015-11-04T11:56:55Z hitecnologys: Heh, the line work on another machine.
2015-11-04T11:57:02Z hitecnologys: The form, I mean.
2015-11-04T11:57:36Z Shinmera: Could still be an error on my part.
2015-11-04T11:57:57Z hitecnologys: Shinmera: https://storage.hitecnologys.org/trace.txt
2015-11-04T11:58:10Z badkins joined #lisp
2015-11-04T12:04:58Z Shinmera: hitecnologys: I have no idea where that comes from. The vector that stores samples is adjustable, and I never declare either of those lengths anywhere.
2015-11-04T12:05:10Z hitecnologys: Shinmera: I see.
2015-11-04T12:05:17Z hitecnologys: Shinmera: I'll try updating SBCL then.
2015-11-04T12:05:19Z Shinmera: hitecnologys: The only thing that even vaguely looks like it might be the cause is the MAP call inside the :deviation compute method.
2015-11-04T12:05:33Z Shinmera: But even then.. yeah- I don't know. Sorry.
2015-11-04T12:05:52Z hitecnologys: Shinmera: I'm not sure how MAP can cause any of this either.
2015-11-04T12:09:12Z Mon_Ouie joined #lisp
2015-11-04T12:10:23Z tetheno quit (Ping timeout: 264 seconds)
2015-11-04T12:11:03Z atgnag quit (Read error: Connection reset by peer)
2015-11-04T12:13:35Z stepnem quit (Ping timeout: 252 seconds)
2015-11-04T12:18:37Z atgnag joined #lisp
2015-11-04T12:19:38Z stepnem joined #lisp
2015-11-04T12:19:46Z mbuf quit (Quit: Ex-Chat)
2015-11-04T12:24:55Z scymtym: Shinmera: i think (map (type-of THING) … THING) can fail if THING is a vector with a fill-pointer because the length in the type and the length returned by LENGTH are not equal
2015-11-04T12:25:28Z scymtym: replacing TYPE-OF with CLASS-OF should work
2015-11-04T12:26:11Z zacharias joined #lisp
2015-11-04T12:26:34Z pjb: scymtym: I fail to see how. (subtypep (type-of x) (class-of x)).
2015-11-04T12:27:41Z knicklux joined #lisp
2015-11-04T12:30:24Z scymtym: pjb: TYPE-OF can return something like (vector t 5). when the vector has e.g. 3 as its fill-pointer, it is considered to be a sequence of length 3. MAP cannot turn that into a vector of type (vector t 5) but it can produce a vector
2015-11-04T12:30:51Z Shinmera: scymtym: But map should stop before the fill-pointer, no?
2015-11-04T12:31:19Z Shinmera: I'm not using any operators that would ignore the fill-pointer to my knowledge.
2015-11-04T12:31:24Z huza quit (Quit: WeeChat 0.3.8)
2015-11-04T12:31:45Z DruidGreeneyes joined #lisp
2015-11-04T12:33:08Z scymtym: Shinmera: iiuc, that's the point: the fill-pointer makes the LENGTH of the vector shorter than the length in the result of TYPE-OF
2015-11-04T12:33:45Z Shinmera: So is MAP complaining that I'm not filling the entire result vector?
2015-11-04T12:34:28Z scymtym: well, that the input sequence is shorter than the length of the requested result type, but i think that is the problem, yes
2015-11-04T12:35:24Z Shinmera: Ok. I'll try replacing it with CLASS-OF then, but since I can't reproduce it..
2015-11-04T12:35:34Z DruidGreeneyes quit (Client Quit)
2015-11-04T12:36:35Z scymtym: i could reproduce it. maybe because i do everything with (debug 3) (safety 3) (speed 0)
2015-11-04T12:37:36Z Shinmera: I have debug 3, but the rest on default.
2015-11-04T12:38:09Z Shinmera: Ok, fix pushed.
2015-11-04T12:39:08Z sdothum joined #lisp
2015-11-04T12:39:12Z MaggieAndEazar quit (Quit: Connection closed for inactivity)
2015-11-04T12:40:11Z scymtym: Shinmera: smallest example i can come up with: http://paste.lisp.org/display/158472
2015-11-04T12:40:12Z johann_ joined #lisp
2015-11-04T12:40:12Z hitecnologys: Shinmera: so, it was your fault?
2015-11-04T12:40:33Z Shinmera: hitecnologys: Depends on you put it, I suppose. But I'm willing to take the blame.
2015-11-04T12:41:13Z hitecnologys: Shinmera: I don't want you to. I was just wondering whether it was my configuration that caused it.
2015-11-04T12:41:47Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-04T12:41:56Z Shinmera: I suppose this bit is what's problematic: "The result sequence is as long as the shortest of the sequences. The consequences are undefined if the result of applying function to the successive elements of the sequences cannot be contained in a sequence of the type given by result-type."
2015-11-04T12:42:13Z Shinmera: Since the type in this case contained length information as well.
2015-11-04T12:44:09Z hitecnologys: I see.
2015-11-04T12:44:30Z johann_ quit (Ping timeout: 240 seconds)
2015-11-04T12:44:51Z Shinmera: But it is arguable whether "cannot be contained" is really applicable in a case where the type specifies a longer sequence.
2015-11-04T12:48:40Z quasus joined #lisp
2015-11-04T12:51:36Z snv quit (Read error: Connection reset by peer)
2015-11-04T12:51:58Z pjb: Ah indeed, for map, "The result sequence is as long as the shortest of the sequences.".  So class-of should do.
2015-11-04T12:52:33Z pjb: Shinmera: map doesn't even try to "fill". It's a pure type mismatch. We were thinking of map-into.
2015-11-04T12:52:43Z scymtym: pjb: that's what i was trying to say. sorry if it didn't come out right
2015-11-04T12:55:53Z sjl joined #lisp
2015-11-04T12:56:01Z yrk quit (Read error: Connection reset by peer)
2015-11-04T13:02:38Z snv joined #lisp
2015-11-04T13:04:34Z Harag quit (Ping timeout: 250 seconds)
2015-11-04T13:05:59Z papachan: pjb: i finally understand my error yersterday
2015-11-04T13:07:03Z papachan: Xach pjb i was adding a test file to my new project which make (ql:quickload "example") failed
2015-11-04T13:07:17Z papachan: and it seems after remove this file
2015-11-04T13:07:28Z Xach: papachan: interesting. the error message didn't hint at that.
2015-11-04T13:07:54Z papachan: the project stay with a weird when i try to load it again from sbcl
2015-11-04T13:08:00Z papachan: yeah
2015-11-04T13:08:06Z papachan: Xach: but now it work fine
2015-11-04T13:08:13Z Xach: All is well that ends well
2015-11-04T13:08:18Z preacherAKAnd is now known as ctyp
2015-11-04T13:08:19Z papachan: i do not import again this test file
2015-11-04T13:08:28Z ctyp is now known as preacherAKAnd
2015-11-04T13:08:49Z papachan: have to understand how i can clean a project if soemthing happen again
2015-11-04T13:09:37Z mvilleneuve joined #lisp
2015-11-04T13:10:22Z znpy joined #lisp
2015-11-04T13:10:34Z thodg joined #lisp
2015-11-04T13:14:45Z BitPuffin joined #lisp
2015-11-04T13:16:59Z isBEKaml joined #lisp
2015-11-04T13:18:14Z pjb: papachan: image based development is essentially a non-functional process, where mutation is used to update the running image.  Therefore it is very difficult to "undo" or "clean" anything, without restarting the image.  There are things that can be done to undo or forget what's been done, but there are few tools to do good and nice cleanups easily.
2015-11-04T13:21:31Z tetheno joined #lisp
2015-11-04T13:21:33Z jason_m joined #lisp
2015-11-04T13:23:18Z pjb: papachan: (ql:register-local-projects) rebuilds the local projects system index.  Usually it's done automatically, but there are sometimes situations where you need it to take into account a new local project.  I believe that asdf will reload the system definition file when you operate on it, but if not you can always reload them yourself.  On the other hand, unchanged compiled systems are not necessarily recompiled (notably if you
2015-11-04T13:23:18Z pjb: change *features*), so you may want to rm -rf ~/.cache/common-lisp/* before reloading them with asdf or quicklisp.
2015-11-04T13:25:40Z pjb: Now, your own systems may not be idempotent or the changes you made may not override old definitions.  In general it doesn't matter much (eg. if you have an old variable with a name you don't use anymore, it is not too bad).  But there's at least one thing which can be a problem: methods.  You may have old methods that remains in the call-next-method chain that you don't want anymore.  You can remove them one by one with find-method and
2015-11-04T13:25:40Z pjb: remove-method. (There's a useful undefmethod macro to do it if you still have the source of the method around).
2015-11-04T13:26:59Z pjb: Or, you may un-intern the symbol naming the generic function before reloading it, so that the new methods are attached to the new generic function, and not to the old.  In the same vein, you can delete whole packages (but only once they are not used anymore, so you may want a recursive package delete such as com.informatimago.common-lisp.cesarum.package:delete-packages.
2015-11-04T13:27:54Z pjb: Of course, uninterning or deleting packages won't prevent existing functions and threads refering them to keep refering them, which might be a problem.  Then you will have to clean up your threads and remove references to those functions (or other data structures in general).
2015-11-04T13:28:28Z pjb: There are no tools to do all this automatically, you will have to develop them, or to do the cleanup yourself in a ad-hoc manner, specific to your system.
2015-11-04T13:29:39Z pjb: Soon enought it becomes much easier to just type ,restart RET and M-r quickload RET RET to reboot the image and reload your system from scratch.
2015-11-04T13:30:42Z s1n4 joined #lisp
2015-11-04T13:34:11Z wuzzz joined #lisp
2015-11-04T13:34:32Z jason_m quit (Ping timeout: 272 seconds)
2015-11-04T13:34:34Z tetheno quit (Quit: Oh, jolly good show!)
2015-11-04T13:34:42Z tetheno joined #lisp
2015-11-04T13:36:55Z tetheno quit (Client Quit)
2015-11-04T13:37:06Z wuzzz: #Shinmera trying to switch to using qtools, not sure how to get started.  I'm trying to load the examples and I get an error, no package named cl+qt.  how should I load the example?
2015-11-04T13:37:33Z Shinmera:  Which example?
2015-11-04T13:37:33Z tetheno joined #lisp
2015-11-04T13:38:57Z wuzzz: the opengl one, but we can do the helloworld one if its simpler to debug
2015-11-04T13:39:44Z Shinmera: The error doesn't make sense to me either way, since the qtools system provides the cl+qt package.
2015-11-04T13:39:59Z lispyone joined #lisp
2015-11-04T13:40:39Z Shinmera: Where does the error occur?
2015-11-04T13:40:57Z johann_ joined #lisp
2015-11-04T13:42:14Z redline6561 joined #lisp
2015-11-04T13:43:21Z wuzzz: when I go to load the example lisp file, like ccl32 --load opengl.lisp
2015-11-04T13:43:35Z Shinmera: Well duh. That's not how it works.
2015-11-04T13:43:54Z Shinmera: You have to load the system through asdf/quicklisp.
2015-11-04T13:44:02Z wuzzz: sorry then I don't know what you mean about "where" its happening
2015-11-04T13:44:15Z wuzzz: oh.
2015-11-04T13:44:19Z Shinmera: `(ql:quickload :qtools-opengl)`
2015-11-04T13:45:56Z johann_ quit (Ping timeout: 272 seconds)
2015-11-04T13:47:01Z wuzzz: I get an exception on foreign stack when running qtools-opengl:main on ccl32 on windows
2015-11-04T13:47:15Z wuzzz: qtools-helloworld works though.
2015-11-04T13:47:26Z Shinmera: Hrm.
2015-11-04T13:47:38Z ramky quit (Ping timeout: 260 seconds)
2015-11-04T13:47:47Z Shinmera: That might be something related to OpenGL. I can't tell just by that.
2015-11-04T13:47:51Z wuzzz: i should say, using 1.10 ccl release
2015-11-04T13:48:01Z wuzzz: ok.
2015-11-04T13:48:29Z Shinmera: Unfortunately working with Qt means a lot of things can happen on the C++ side, which is notoriously difficult to debug.
2015-11-04T13:48:43Z Shinmera: Especially on Windows, where I don't really have much experience.
2015-11-04T13:49:06Z userm joined #lisp
2015-11-04T13:49:12Z wuzzz: yea.  I wish I didn't have to deploy things for windows, it would make life easier
2015-11-04T13:50:00Z wuzzz: I'm hoping that all the effort microsoft is going through to alienate their users will result in less market share, but a dev can only dream.
2015-11-04T13:50:05Z Shinmera: I did deploy an OpenGL Qt app on Windows and did get it to work relatively hassle-less.
2015-11-04T13:50:35Z Shinmera: But I only tested it with SBCL, so who knows.
2015-11-04T13:51:40Z wuzzz: I'll get by without opengl for now.  I'll pick it up with sbcl later
2015-11-04T13:51:43Z lispyone quit (Remote host closed the connection)
2015-11-04T13:51:54Z Shinmera: Alright. Sorry that I can't be of more help!
2015-11-04T13:52:10Z Shinmera: The documentation contains most of what I do know about things (minus some experimental features)
2015-11-04T13:52:16Z lispyone joined #lisp
2015-11-04T13:52:21Z tmtwd joined #lisp
2015-11-04T13:55:23Z shookees quit (Ping timeout: 264 seconds)
2015-11-04T13:56:34Z lispyone quit (Ping timeout: 250 seconds)
2015-11-04T13:56:34Z gniourf quit (Ping timeout: 250 seconds)
2015-11-04T13:58:03Z Seeq quit (Quit: Leaving)
2015-11-04T13:58:40Z johann_ joined #lisp
2015-11-04T13:59:49Z sdothum quit (Read error: Connection reset by peer)
2015-11-04T14:01:07Z sdothum joined #lisp
2015-11-04T14:03:06Z johann_ quit (Ping timeout: 244 seconds)
2015-11-04T14:03:20Z przl joined #lisp
2015-11-04T14:04:01Z harish_ joined #lisp
2015-11-04T14:04:14Z TDT joined #lisp
2015-11-04T14:04:15Z johann_ joined #lisp
2015-11-04T14:07:11Z ajf- joined #lisp
2015-11-04T14:09:55Z wuzzz: #Shinmera:  looks like there is a threading issue when using ccl.  I used the asdf build-op and got the bin directory but when I run my executable I get errors about threads
2015-11-04T14:10:04Z wuzzz: I'll try this with sbcl
2015-11-04T14:10:20Z Shinmera: Hrm.
2015-11-04T14:11:10Z shookees joined #lisp
2015-11-04T14:11:43Z Shinmera: Well, CCL Windows testing is definitely on my todo now
2015-11-04T14:11:53Z Shinmera: Not sure when I can get to it
2015-11-04T14:11:53Z TMM quit (Remote host closed the connection)
2015-11-04T14:13:26Z tmtwd quit (Ping timeout: 260 seconds)
2015-11-04T14:14:55Z _cosmonaut_ quit (Remote host closed the connection)
2015-11-04T14:14:55Z _cosmona` quit (Read error: Connection reset by peer)
2015-11-04T14:15:08Z tmtwd joined #lisp
2015-11-04T14:15:46Z gravicappa quit (Ping timeout: 240 seconds)
2015-11-04T14:15:51Z Yuuhi joined #lisp
2015-11-04T14:16:37Z TMM joined #lisp
2015-11-04T14:17:07Z _cosmonaut_ joined #lisp
2015-11-04T14:17:35Z wuzzz: so I guess qt-program-op is responsible for the salient activity when asdf:operate build-op is invoked?
2015-11-04T14:17:41Z _cosmona` joined #lisp
2015-11-04T14:18:03Z Shinmera: A bunch of the activity is just loading qtools and your application.
2015-11-04T14:18:10Z Shinmera: Most of it, actually.
2015-11-04T14:18:11Z tsoutseki quit (Quit: Leaving)
2015-11-04T14:18:15Z EvW quit (Ping timeout: 246 seconds)
2015-11-04T14:18:54Z Shinmera: The rest of what's happening is only this: https://github.com/Shinmera/qtools/blob/master/deploy.lisp#L153
2015-11-04T14:19:17Z s1n4 quit (Quit: leaving)
2015-11-04T14:19:44Z tsoutseki joined #lisp
2015-11-04T14:21:01Z warweasle joined #lisp
2015-11-04T14:21:16Z kobain joined #lisp
2015-11-04T14:21:20Z wuzzz: thanks.  I bet this is just a last mile tweak, I have qt lisp code that I can make an image with and not have the threading problem, and the only difference is relying on qtools instead of commonqt and qt-libs.  I'll see if I can't hunt this down
2015-11-04T14:22:01Z warweasle: wuzzz: Are you making a GUI application in lisp?
2015-11-04T14:22:10Z EvW joined #lisp
2015-11-04T14:22:20Z Shinmera: wuzzz: Actually I think I know what might be going on
2015-11-04T14:22:39Z Shinmera: But I need to find time to test and confirm it.
2015-11-04T14:22:55Z wuzzz: warweale: yes
2015-11-04T14:23:29Z wuzzz: Shinmera:  I have to go afk, if you want to describe it here I can also make headway when I get back
2015-11-04T14:23:45Z wuzzz: warweasle: yes
2015-11-04T14:24:19Z warweasle: wuzzz: Awesome. I dream of lisp going mainstream.
2015-11-04T14:24:52Z wuzzz: i was going to try to replace the uiop dump-image call with an explicit call to the ccl functions for that and see how far I get
2015-11-04T14:25:24Z wuzzz: warweasle: be the change you wish to see in the world
2015-11-04T14:25:30Z wuzzz: bbl
2015-11-04T14:25:55Z Shinmera: wuzzz: The only part in which Qtools deals with threads is actually handled by trivial-main-thread, which is only different on CCL due to CCL's odd behaviour regarding main threads.
2015-11-04T14:26:11Z Shinmera: However, that should not be invoked until after the image is restored, so I'm not sure why it would be triggered here.
2015-11-04T14:26:25Z gniourf joined #lisp
2015-11-04T14:26:40Z Shinmera: Which is why I need to actually investigate to say for sure.
2015-11-04T14:28:03Z ebrasca joined #lisp
2015-11-04T14:29:05Z TDT quit (Quit: TDT)
2015-11-04T14:29:29Z cosarara left #lisp
2015-11-04T14:29:51Z cosarara joined #lisp
2015-11-04T14:32:46Z TDT joined #lisp
2015-11-04T14:33:16Z kp666_ quit (Remote host closed the connection)
2015-11-04T14:35:04Z harish_ quit (Quit: Leaving)
2015-11-04T14:35:24Z harish joined #lisp
2015-11-04T14:36:00Z znpy quit (Ping timeout: 250 seconds)
2015-11-04T14:36:10Z radioninja quit (Remote host closed the connection)
2015-11-04T14:42:13Z ehu joined #lisp
2015-11-04T14:44:02Z johann_ quit (Remote host closed the connection)
2015-11-04T14:44:48Z madmax88 joined #lisp
2015-11-04T14:45:16Z madmax88: I have an odd question: can the reader macro system represent any CFG?
2015-11-04T14:45:19Z TMM quit (Remote host closed the connection)
2015-11-04T14:46:07Z guicho quit (Quit: さようなら)
2015-11-04T14:48:35Z Yanez joined #lisp
2015-11-04T14:50:56Z eudoxia joined #lisp
2015-11-04T14:51:10Z lispyone joined #lisp
2015-11-04T14:51:19Z EvW quit (Ping timeout: 240 seconds)
2015-11-04T14:51:38Z EvW joined #lisp
2015-11-04T14:51:46Z madmax88 quit (Ping timeout: 240 seconds)
2015-11-04T14:51:59Z tmtwd quit (Ping timeout: 252 seconds)
2015-11-04T14:53:44Z attila_lendvai: fe[nl]ix: do you know of some example for cffi structs that deal with bitfields?
2015-11-04T14:54:15Z BitPuffin quit (Ping timeout: 255 seconds)
2015-11-04T14:55:26Z lnostdal_ is now known as lnostdal
2015-11-04T14:55:55Z phoe_krk joined #lisp
2015-11-04T14:56:43Z tralala quit (Quit: out)
2015-11-04T14:59:58Z kushal joined #lisp
2015-11-04T14:59:59Z papachan: pjb: wow thank you for your explaination
2015-11-04T15:00:02Z papachan: great
2015-11-04T15:00:47Z fe[nl]ix: attila_lendvai: I don't think I ever used that
2015-11-04T15:00:50Z fe[nl]ix: try the test suite
2015-11-04T15:01:08Z znpy joined #lisp
2015-11-04T15:01:54Z attila_lendvai: fe[nl]ix: meanwhile I realized that there's a bitfield in cffi that is something else. what I've meant is c int's with the : syntax (IIRC), bit-sized integers in structs that one may encounter here and there
2015-11-04T15:01:59Z jackdaniel: attila_lendvai: I'm out of context so forgive if unrelated - binary-types is a very nice lisp library for dealing with the structures of various kind
2015-11-04T15:02:26Z attila_lendvai looks it up
2015-11-04T15:02:32Z isBEKaml quit (Read error: Connection reset by peer)
2015-11-04T15:03:30Z attila_lendvai: jackdaniel: there's also this: https://github.com/froydnj/nibbles
2015-11-04T15:03:45Z Karl_Dscc joined #lisp
2015-11-04T15:04:06Z pjb quit (Ping timeout: 240 seconds)
2015-11-04T15:04:32Z jackdaniel: never used it. Binary-types was perfect for my needs so didn't bother looking for another one
2015-11-04T15:05:48Z Zhivago: Note that : x doesn't introduce bit sized integers, but instead produces accessors into the provided integer type for those bits.
2015-11-04T15:06:16Z jackdaniel: hm, binary-types lets you to define binary structures to slurp them from the stream too
2015-11-04T15:08:04Z przl quit (Ping timeout: 250 seconds)
2015-11-04T15:10:49Z pjb joined #lisp
2015-11-04T15:12:18Z oleo joined #lisp
2015-11-04T15:15:51Z johs quit (Ping timeout: 268 seconds)
2015-11-04T15:19:17Z algae joined #lisp
2015-11-04T15:20:10Z userm quit (Ping timeout: 260 seconds)
2015-11-04T15:21:39Z DGASAU quit (Ping timeout: 240 seconds)
2015-11-04T15:22:53Z johs joined #lisp
2015-11-04T15:25:00Z hitecnologys: White_Flame: hey, you know what? I've rehashed this whole many-to-many channel idea and I think I don't really need it multicast. Since scheduler has to be able to send some messages directly to threads, it will have to maintain another channel so I thought why even bother having multicast channel when we can have one-to-one link with scheduler and then have it broadcast messages to the rest of threads, if
2015-11-04T15:25:03Z hitecnologys: necessary? That's what I plan on doing.
2015-11-04T15:26:54Z mordocai joined #lisp
2015-11-04T15:28:10Z LiamH joined #lisp
2015-11-04T15:28:15Z DGASAU joined #lisp
2015-11-04T15:31:39Z happy-dude joined #lisp
2015-11-04T15:31:48Z euphoriaa joined #lisp
2015-11-04T15:31:52Z euphoriaa quit (Max SendQ exceeded)
2015-11-04T15:31:58Z euphoriaa joined #lisp
2015-11-04T15:31:58Z euphoriaa quit (Changing host)
2015-11-04T15:31:58Z euphoriaa joined #lisp
2015-11-04T15:33:45Z przl joined #lisp
2015-11-04T15:34:59Z reb` quit (Remote host closed the connection)
2015-11-04T15:38:26Z shookees quit (Remote host closed the connection)
2015-11-04T15:38:35Z TDT quit (Quit: TDT)
2015-11-04T15:39:28Z lisse joined #lisp
2015-11-04T15:43:26Z TDT joined #lisp
2015-11-04T15:44:44Z johann_ joined #lisp
2015-11-04T15:46:00Z cmack joined #lisp
2015-11-04T15:47:09Z smokeink quit (Remote host closed the connection)
2015-11-04T15:47:33Z cmack quit (Client Quit)
2015-11-04T15:49:24Z TDT quit (Quit: TDT)
2015-11-04T15:49:26Z shookees joined #lisp
2015-11-04T15:49:32Z johann_ quit (Ping timeout: 244 seconds)
2015-11-04T15:49:33Z reb` joined #lisp
2015-11-04T15:49:57Z TDT joined #lisp
2015-11-04T15:50:10Z reb`: b
2015-11-04T15:50:42Z heddwch quit (Ping timeout: 265 seconds)
2015-11-04T15:52:49Z heddwch joined #lisp
2015-11-04T15:54:47Z shookees quit (Ping timeout: 264 seconds)
2015-11-04T15:55:44Z Yanez quit (Ping timeout: 250 seconds)
2015-11-04T15:56:19Z pt1 quit (Ping timeout: 240 seconds)
2015-11-04T15:56:39Z znpy quit (Ping timeout: 240 seconds)
2015-11-04T15:57:27Z Draz joined #lisp
2015-11-04T16:00:07Z zyoung joined #lisp
2015-11-04T16:00:39Z _cosmonaut_ quit (Remote host closed the connection)
2015-11-04T16:00:39Z _cosmona` quit (Remote host closed the connection)
2015-11-04T16:01:04Z isBEKaml joined #lisp
2015-11-04T16:02:23Z knicklux quit (Ping timeout: 252 seconds)
2015-11-04T16:04:49Z NaNDude joined #lisp
2015-11-04T16:05:42Z TDT quit (Quit: TDT)
2015-11-04T16:06:56Z shookees joined #lisp
2015-11-04T16:08:47Z gingerale joined #lisp
2015-11-04T16:09:29Z ZabaQ joined #lisp
2015-11-04T16:15:42Z EvW quit (Ping timeout: 260 seconds)
2015-11-04T16:15:57Z reb` quit (Ping timeout: 252 seconds)
2015-11-04T16:17:50Z bjorkintosh quit (Ping timeout: 250 seconds)
2015-11-04T16:18:52Z lispyone quit (Remote host closed the connection)
2015-11-04T16:19:30Z TMM joined #lisp
2015-11-04T16:19:42Z heddwch quit (Ping timeout: 265 seconds)
2015-11-04T16:20:00Z EvW joined #lisp
2015-11-04T16:21:09Z aretecode joined #lisp
2015-11-04T16:22:59Z cadadar joined #lisp
2015-11-04T16:23:00Z reb`` joined #lisp
2015-11-04T16:23:16Z pjb: minion: memo for madmax88: reader macros are implemented in Lisp, therefore they can parse any type of grammar up to Type-0.  https://en.wikipedia.org/wiki/Chomsky_hierarchy
2015-11-04T16:23:17Z minion: Remembered. I'll tell madmax88 when he/she/it next speaks.
2015-11-04T16:27:14Z reb``` joined #lisp
2015-11-04T16:29:31Z znpy joined #lisp
2015-11-04T16:29:51Z reb`` quit (Ping timeout: 268 seconds)
2015-11-04T16:30:38Z heurist quit (Ping timeout: 260 seconds)
2015-11-04T16:31:25Z myrkraverk joined #lisp
2015-11-04T16:32:03Z heurist joined #lisp
2015-11-04T16:32:03Z wuzzz quit (Ping timeout: 246 seconds)
2015-11-04T16:32:13Z myrkraverk: Can I configure linedit to (quit) on C-d at the start of a line (like many other shells do) ?
2015-11-04T16:32:39Z myrkraverk: I'm using it for SBCL in the terminal.
2015-11-04T16:32:51Z pjb: I hear there's a file like ~/.inputrc or perhaps even ~/.inputrc where that could be done.
2015-11-04T16:32:58Z TDT joined #lisp
2015-11-04T16:33:15Z myrkraverk: hmm, ok.
2015-11-04T16:34:35Z Karl_Dscc quit (Remote host closed the connection)
2015-11-04T16:34:46Z kami joined #lisp
2015-11-04T16:34:53Z kami: Hello #lisp
2015-11-04T16:35:00Z myrkraverk: Really?  Google seems to tell me that ~/.inputrc is bash (or gnu readline) specific.
2015-11-04T16:35:16Z kami: AeroNotix: how functional is your cl-zk?
2015-11-04T16:35:20Z myrkraverk: Or maybe linedit is a wrapper around gnu readline...
2015-11-04T16:35:36Z Cymew quit (Ping timeout: 250 seconds)
2015-11-04T16:35:39Z EvW quit (Ping timeout: 240 seconds)
2015-11-04T16:37:46Z Xach: linedit does not wrap readline
2015-11-04T16:37:50Z scymtym_ joined #lisp
2015-11-04T16:38:06Z heddwch joined #lisp
2015-11-04T16:38:26Z myrkraverk: Ok.  Is there any way to configure linedit?  So far, it's manual seems to be somewhat absent.
2015-11-04T16:38:49Z jackdaniel: myrkraverk: I believe lineedit has examples in the source tarball
2015-11-04T16:39:01Z myrkraverk: Hmm, ok.
2015-11-04T16:39:02Z lisse quit (Ping timeout: 265 seconds)
2015-11-04T16:39:27Z gravicappa joined #lisp
2015-11-04T16:41:08Z AntiSpamMeta quit (Read error: Connection reset by peer)
2015-11-04T16:41:19Z znpy quit (Ping timeout: 240 seconds)
2015-11-04T16:42:16Z AntiSpamMeta joined #lisp
2015-11-04T16:43:25Z myrkraverk: I don't find it, quickly.
2015-11-04T16:45:04Z eudoxia quit (Quit: Leaving)
2015-11-04T16:45:37Z johann_ joined #lisp
2015-11-04T16:46:19Z knobo joined #lisp
2015-11-04T16:46:25Z Guest14 joined #lisp
2015-11-04T16:48:47Z mordocai: myrkraverk: Per https://gitlab.common-lisp.net/linedit/linedit/tree/master readme, add :eof-quits t to your install-repl config.
2015-11-04T16:49:18Z myrkraverk: Ah, thanks.
2015-11-04T16:50:06Z mordocai: myrkraverk: Something I don't like about that is it still asks if you are sure, but I don't see a config to make it not do that.
2015-11-04T16:50:35Z johann_ quit (Ping timeout: 264 seconds)
2015-11-04T16:50:53Z mordocai: myrkraverk: https://gitlab.com/mordocai/dotfiles/blob/master/.sbclrc in case you aren't sure what I meant
2015-11-04T16:51:09Z myrkraverk: I got it, thanks c;
2015-11-04T16:51:20Z myrkraverk: Yeah, the asking is annoying.
2015-11-04T16:51:31Z kami` joined #lisp
2015-11-04T16:52:37Z myrkraverk: I just checked the source, there's no provision to not ask to quit.
2015-11-04T16:53:02Z myrkraverk: And I'm not in a mood to fix that now.
2015-11-04T16:53:18Z kami quit (Ping timeout: 246 seconds)
2015-11-04T16:53:41Z mordocai: Yeah, that should be an extra option. Looks like linedit is pretty much dead though, so not sure who would approve pull requests even if you made one.
2015-11-04T16:54:28Z TDT quit (Quit: TDT)
2015-11-04T16:55:05Z Xach: sharplispers could adopt it
2015-11-04T16:55:08Z constantinexvi quit (Ping timeout: 268 seconds)
2015-11-04T16:56:01Z jackdaniel: myrkraverk: sorry, I mistaken lineedit with libedit
2015-11-04T16:56:18Z constantinexvi joined #lisp
2015-11-04T16:56:37Z myrkraverk: No worries.
2015-11-04T16:56:48Z dwchandler: so, https://github.com/nikodemus/linedit seems more recent
2015-11-04T16:57:47Z dwchandler: not long ago I applied https://github.com/nikodemus/linedit/commit/bb35a200775802bd63ae42356f17b2db237180d0 to my local machine
2015-11-04T16:58:15Z mordocai: Where does quicklisp get it?
2015-11-04T16:58:22Z mordocai looks himself
2015-11-04T16:59:02Z mordocai: It gets it from gitlab
2015-11-04T16:59:06Z vsync___ quit (Ping timeout: 240 seconds)
2015-11-04T17:00:37Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-04T17:00:41Z jdz quit (Ping timeout: 252 seconds)
2015-11-04T17:00:55Z constantinexvi quit (Ping timeout: 244 seconds)
2015-11-04T17:01:15Z jdz joined #lisp
2015-11-04T17:01:16Z loke quit (Ping timeout: 265 seconds)
2015-11-04T17:01:16Z vsync___ joined #lisp
2015-11-04T17:02:14Z Yanez joined #lisp
2015-11-04T17:02:20Z constantinexvi joined #lisp
2015-11-04T17:03:26Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-04T17:05:33Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-04T17:07:26Z fortitude joined #lisp
2015-11-04T17:11:01Z peterhil joined #lisp
2015-11-04T17:12:19Z ssake quit (Quit: leaving)
2015-11-04T17:12:47Z loke joined #lisp
2015-11-04T17:13:54Z otwieracz: Hey!
2015-11-04T17:14:15Z otwieracz: I'm having some performance problems with my Lisp code - do you have any hints how to profile it?eeeeeeeee
2015-11-04T17:14:28Z otwieracz: s/e+//
2015-11-04T17:14:36Z otwieracz: (it's CCL)
2015-11-04T17:14:48Z otwieracz: (and I can not share this code due to NDA :()
2015-11-04T17:15:15Z pt1 joined #lisp
2015-11-04T17:15:28Z lispyone joined #lisp
2015-11-04T17:18:12Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-04T17:18:49Z dwchandler: otwieracz: What OS?
2015-11-04T17:19:10Z otwieracz: Linux.
2015-11-04T17:19:57Z dwchandler: Searching for "profiling" on http://ccl.clozure.com/docs/ccl.html gives some info for Linux
2015-11-04T17:20:06Z ZabaQ quit (Quit: Leaving)
2015-11-04T17:20:36Z dwchandler: I have no experience with that, so I'm done ;-)
2015-11-04T17:20:45Z mordocai: otwieracz: Also it looks like slime might have some decent utilities https://common-lisp.net/project/slime/doc/html/Profiling.html
2015-11-04T17:20:55Z mordocai: I haven't had to profile code yet, still a noob, so can't say from experience
2015-11-04T17:22:01Z znpy joined #lisp
2015-11-04T17:22:57Z TMM quit (Quit: Ex-Chat)
2015-11-04T17:23:35Z mikaelj quit (Ping timeout: 264 seconds)
2015-11-04T17:25:16Z otwieracz: I'll try with slime trace.
2015-11-04T17:25:19Z radioninja_work quit (Ping timeout: 240 seconds)
2015-11-04T17:25:36Z lisse joined #lisp
2015-11-04T17:26:25Z badkins quit (Remote host closed the connection)
2015-11-04T17:27:41Z radioninja_work joined #lisp
2015-11-04T17:28:21Z EvW joined #lisp
2015-11-04T17:28:33Z AntiSpamMeta quit (Read error: Connection reset by peer)
2015-11-04T17:28:46Z AntiSpamMeta joined #lisp
2015-11-04T17:30:59Z lispyone quit (Remote host closed the connection)
2015-11-04T17:31:33Z lispyone joined #lisp
2015-11-04T17:32:35Z shka joined #lisp
2015-11-04T17:35:13Z knobo quit (Ping timeout: 268 seconds)
2015-11-04T17:36:11Z lispyone quit (Ping timeout: 264 seconds)
2015-11-04T17:37:24Z ukari joined #lisp
2015-11-04T17:37:25Z ukari quit (Changing host)
2015-11-04T17:37:25Z ukari joined #lisp
2015-11-04T17:37:25Z shka: hello
2015-11-04T17:38:03Z briantrice joined #lisp
2015-11-04T17:39:51Z badkins joined #lisp
2015-11-04T17:41:09Z MrWoohoo2 quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2015-11-04T17:41:09Z MrWoohoo quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2015-11-04T17:41:23Z loke quit (Ping timeout: 268 seconds)
2015-11-04T17:42:19Z Karl_Dscc joined #lisp
2015-11-04T17:42:30Z ukari quit (Quit: -a- Android IRC 2.1.3)
2015-11-04T17:42:49Z Karl_Dscc quit (Remote host closed the connection)
2015-11-04T17:45:44Z HDurer quit (Ping timeout: 265 seconds)
2015-11-04T17:46:20Z johann_ joined #lisp
2015-11-04T17:48:39Z lnostdal quit (Ping timeout: 240 seconds)
2015-11-04T17:50:39Z johann_ quit (Ping timeout: 240 seconds)
2015-11-04T17:51:07Z preacherAKAnd quit (Quit: Konversation terminated!)
2015-11-04T17:51:08Z eazar001 joined #lisp
2015-11-04T17:51:17Z preacherAKAnd joined #lisp
2015-11-04T17:52:32Z LilSusieCrabCake joined #lisp
2015-11-04T17:52:43Z preacherAKAnd quit (Client Quit)
2015-11-04T17:52:59Z preacherAKAnd joined #lisp
2015-11-04T17:53:46Z loke joined #lisp
2015-11-04T17:54:05Z Yanez: hello
2015-11-04T17:55:52Z zygentoma joined #lisp
2015-11-04T17:55:54Z isBEKaml quit (Quit: leaving)
2015-11-04T17:56:17Z Petit_Dejeuner quit (Ping timeout: 244 seconds)
2015-11-04T17:56:47Z HDurer joined #lisp
2015-11-04T17:56:51Z pjb: otwieracz: basically: M-x slime-profile-package RET … and M-x slime-profile-report RET
2015-11-04T17:56:59Z otwieracz: yes, yes.
2015-11-04T17:57:04Z otwieracz: I'm using it right
2015-11-04T17:57:05Z otwieracz: now.
2015-11-04T17:57:25Z antoszka: otwieracz: Getting any useful results out of it?
2015-11-04T17:57:50Z otwieracz: Not sure.
2015-11-04T17:58:19Z otwieracz: This may be just because of input data amount.
2015-11-04T17:58:29Z tsoutseki quit (Ping timeout: 250 seconds)
2015-11-04T17:59:30Z otwieracz: Let's say, I have function doing something for 10, 100 and 1000 items from history.
2015-11-04T18:00:17Z DrCode quit (Read error: Connection reset by peer)
2015-11-04T18:00:37Z otwieracz: And, for all three, CPU is burned for 100%.
2015-11-04T18:00:58Z otwieracz: With those three functions responsible for >90% of CPU time
2015-11-04T18:01:19Z otwieracz: (with 0.004s/call)
2015-11-04T18:02:00Z pt1 quit (Remote host closed the connection)
2015-11-04T18:02:04Z otwieracz: Oh, to explain it a bit better. I've got (defun test () (do-10) (do-100) (do-1000), where (do-*) are macros. So I can not profile on them)
2015-11-04T18:02:13Z otwieracz: I am just profiling function test.
2015-11-04T18:02:16Z cadadar quit (Quit: Leaving.)
2015-11-04T18:03:17Z otwieracz: And, for (do-{10,100,1000}) this is 0.004s/call
2015-11-04T18:03:26Z zacharias quit (Ping timeout: 240 seconds)
2015-11-04T18:03:29Z otwieracz: do-{10,100} - 0.0004s/call
2015-11-04T18:03:39Z otwieracz: do-10 - 0.000077s/call
2015-11-04T18:04:02Z otwieracz: But, for do-{10,100,1000} and do-{10,100} CPU is still utilized in 100%.
2015-11-04T18:04:26Z PlasmaStar quit (Ping timeout: 240 seconds)
2015-11-04T18:04:41Z k-stz joined #lisp
2015-11-04T18:05:47Z otwieracz: So I am not sure if the amount of data is just not too big.
2015-11-04T18:05:48Z preacherAKAnd quit (Read error: Connection reset by peer)
2015-11-04T18:10:38Z PlasmaStar joined #lisp
2015-11-04T18:10:39Z EvW quit (Ping timeout: 246 seconds)
2015-11-04T18:11:26Z przl quit (Ping timeout: 240 seconds)
2015-11-04T18:11:29Z tsoutseki joined #lisp
2015-11-04T18:12:00Z aretecode quit (Quit: Toodaloo)
2015-11-04T18:13:33Z Guest14 joined #lisp
2015-11-04T18:15:10Z ggole quit (Ping timeout: 260 seconds)
2015-11-04T18:18:34Z zacharias joined #lisp
2015-11-04T18:18:34Z zacharias quit (Changing host)
2015-11-04T18:18:34Z zacharias joined #lisp
2015-11-04T18:18:47Z peterhil quit (Ping timeout: 264 seconds)
2015-11-04T18:21:55Z ozihcs joined #lisp
2015-11-04T18:23:33Z quazimodo quit (Ping timeout: 252 seconds)
2015-11-04T18:26:04Z sake_ joined #lisp
2015-11-04T18:26:23Z sake_ quit (Client Quit)
2015-11-04T18:26:44Z ssake joined #lisp
2015-11-04T18:27:46Z ozihcs quit (Ping timeout: 240 seconds)
2015-11-04T18:28:16Z zacharias quit (Ping timeout: 265 seconds)
2015-11-04T18:28:58Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-04T18:29:14Z faalentijn quit (Quit: WeeChat 1.3)
2015-11-04T18:30:06Z Guest14 joined #lisp
2015-11-04T18:31:31Z TMM joined #lisp
2015-11-04T18:31:39Z misv joined #lisp
2015-11-04T18:32:01Z DrCode joined #lisp
2015-11-04T18:33:52Z bjorkintosh joined #lisp
2015-11-04T18:37:01Z warweasle` joined #lisp
2015-11-04T18:37:09Z zacts joined #lisp
2015-11-04T18:41:23Z faalentijn joined #lisp
2015-11-04T18:41:52Z flip214: nobody dislikes lisp... http://varianceexplained.org/r/polarizing-technologies/
2015-11-04T18:43:36Z HDurer quit (Ping timeout: 272 seconds)
2015-11-04T18:43:39Z oGMo: sounds like the lead-in to "no true scotsman"
2015-11-04T18:47:04Z johann_ joined #lisp
2015-11-04T18:51:50Z otjura joined #lisp
2015-11-04T18:51:51Z johann_ quit (Ping timeout: 255 seconds)
2015-11-04T18:52:02Z HDurer joined #lisp
2015-11-04T18:52:30Z briantrice quit (Ping timeout: 260 seconds)
2015-11-04T18:55:06Z EvW joined #lisp
2015-11-04T18:55:15Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-04T18:55:53Z gingerale quit (Remote host closed the connection)
2015-11-04T18:57:50Z Guest14 joined #lisp
2015-11-04T18:58:32Z Guest14 quit (Client Quit)
2015-11-04T18:58:43Z phoe_krk: lisp is not an acceptable lisp
2015-11-04T18:59:18Z k-stz` joined #lisp
2015-11-04T18:59:29Z Guest14 joined #lisp
2015-11-04T19:00:00Z phoe_krk: one more thing
2015-11-04T19:00:01Z k-stz` quit (Remote host closed the connection)
2015-11-04T19:01:39Z lispyone joined #lisp
2015-11-04T19:02:08Z phoe_krk: I want to run two tasks inside a Lisp image that have private elements, which means, invisible to the other task. Can I just run them inside a pair of closures and have one task's closed variables *really* invisible to the other task?
2015-11-04T19:02:26Z phoe_krk: I assume there are no intended or unintented code bugs that allow data leakage.
2015-11-04T19:04:08Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-04T19:06:24Z lisse joined #lisp
2015-11-04T19:07:16Z grindhold is now known as grindlold
2015-11-04T19:08:54Z lnostdal joined #lisp
2015-11-04T19:11:18Z EvW quit (Read error: Connection reset by peer)
2015-11-04T19:12:12Z EvW joined #lisp
2015-11-04T19:12:18Z Bicyclidine joined #lisp
2015-11-04T19:12:58Z mordocai: phoe_krk: Never on a computer can you have anything that is really invisible to anything else.
2015-11-04T19:13:10Z mordocai: phoe_krk: You have to accept a certain level of "invisibleness"
2015-11-04T19:13:16Z phoe_krk: mordocai: I know, I know.
2015-11-04T19:13:24Z Shinmera: Embrace the openness.
2015-11-04T19:13:26Z phoe_krk: I'm thinking something along an OS isolating processes.
2015-11-04T19:13:53Z mordocai: Within the same process, I'm pretty sure you'll always be able to read memory from that other task somehow.
2015-11-04T19:13:55Z phoe_krk: s/isolating/that isolates/
2015-11-04T19:14:26Z mordocai: Your best best is probably separate processes for each task and setup the OS isolation you speak of. But i'm far from an expert on such things
2015-11-04T19:14:42Z remi`bd joined #lisp
2015-11-04T19:15:06Z phoe_krk: I'm just thinking out loud what would be the theoretical functional way of separating processes' memory on a hypothetical LispOS and closures were the first thing that came to my mind
2015-11-04T19:15:20Z phoe_krk: inb4 the world doesn't need LispOS and it will never happen
2015-11-04T19:15:49Z mordocai would love a lisp os
2015-11-04T19:15:58Z trinitr0n: it exists
2015-11-04T19:15:58Z grindlold is now known as grindhold
2015-11-04T19:16:02Z trinitr0n: it's called genera ;)
2015-11-04T19:16:03Z phoe_krk: I know, trinitr0n
2015-11-04T19:16:05Z phoe_krk: :P
2015-11-04T19:16:18Z phoe_krk: but I wonder whether it has any process isolation
2015-11-04T19:16:21Z trinitr0n loves him some lisp machines
2015-11-04T19:16:22Z trinitr0n: HA
2015-11-04T19:16:25Z Bicyclidine: i mean, that's kind of like saying a C-based system would use scoped pointers for isolation
2015-11-04T19:16:29Z trinitr0n: no genera has no real system security
2015-11-04T19:16:38Z trinitr0n: no permissions
2015-11-04T19:16:43Z trinitr0n: it's not multiuser
2015-11-04T19:17:31Z snv quit (Read error: Connection reset by peer)
2015-11-04T19:18:01Z Shinmera: phoe_krk: You might be interested in beach (Robert Strandh)'s paper on First Class Global Environments.
2015-11-04T19:18:39Z phoe_krk: Shinmera: thanks, googled it and I'll read it.
2015-11-04T19:18:58Z mordocai: phoe_krk: I have no real experience in this domain, but I imagine what you end up with is having to have a kernel that looks for things you aren't supposed to be doing and have everything go through that before it is executed. Basically from a high level how OS kernels do things.
2015-11-04T19:19:05Z phoe_krk: Bicyclidine: I know, it's weird from a practical point of view, but I want to think of the theoretical stuff first
2015-11-04T19:19:39Z Bicyclidine: i mean, even theroetically it's a weird way to conceptualize things.
2015-11-04T19:19:47Z phoe_krk: mordocai: yes, it's called memory protection and is utilized in most kernels nowadays. I just wonder how it could work within Lisp with as little necessary implementation as possible
2015-11-04T19:19:48Z Bicyclidine: i mean, i mean, i mean,
2015-11-04T19:21:26Z snv joined #lisp
2015-11-04T19:23:06Z danlentz_ joined #lisp
2015-11-04T19:24:15Z milkseaweed joined #lisp
2015-11-04T19:24:50Z phoe_krk: you mean?
2015-11-04T19:26:05Z Bicyclidine: that was me noting my overly repetitive messages, sorry
2015-11-04T19:26:50Z briantrice joined #lisp
2015-11-04T19:27:07Z resttime: Fare has written some nice stuff on such things http://ngnghm.github.io/
2015-11-04T19:27:20Z milkseaweed: do lists have a tail reference in common lisp? or is there some data structure (by default or in some library) that is optimized for adding to the end?
2015-11-04T19:27:42Z Bicyclidine: lists are singly linked
2015-11-04T19:27:52Z Bicyclidine: you could use eg an array with fill pointer
2015-11-04T19:27:55Z phoe_krk: milkseaweed: not until you use a custom deque
2015-11-04T19:28:21Z resttime: milkseaweed: Look for a data structure library with double linked lists
2015-11-04T19:28:25Z phoe_krk: either an array with a fill pointer, or you create a struct that holds a list and (last list) and custom functions to access and update it.
2015-11-04T19:28:28Z resttime: cl-contatiners I think was one of them
2015-11-04T19:28:37Z phoe_krk: or just look up a library since someone probably already wrote that.
2015-11-04T19:28:40Z milkseaweed: I don't want a doubly linked list, just a tail reference
2015-11-04T19:28:57Z phoe_krk: milkseaweed: therefore a struct that holds a list and (last list).
2015-11-04T19:29:00Z Bicyclidine: you can keep one yourself
2015-11-04T19:29:07Z phoe_krk: oh wait
2015-11-04T19:29:12Z Bicyclidine: have the list you hold onto be (cons (last list) list)
2015-11-04T19:29:16Z phoe_krk: no, not last list
2015-11-04T19:29:22Z Bicyclidine: why not
2015-11-04T19:29:29Z phoe_krk: ...that would be tougher if you wanted to remove the last element
2015-11-04T19:29:47Z Bicyclidine: if you just want to add to the end it's fine
2015-11-04T19:29:48Z phoe_krk: depends what operations will be most commonly used, milkseaweed
2015-11-04T19:30:12Z phoe_krk: what will it be? just like Bicyclidine said, if you want to just append things to the end it'll do fine, if you want to easily remove elements from the end then it's going to need a modification
2015-11-04T19:30:23Z milkseaweed: yeah I just want to append things
2015-11-04T19:31:25Z milkseaweed: thank you
2015-11-04T19:31:58Z kushal quit (Ping timeout: 250 seconds)
2015-11-04T19:32:57Z znpy quit (Ping timeout: 250 seconds)
2015-11-04T19:32:59Z pjb: phoe_krk: read about the EROS OS and capability based systems in general.
2015-11-04T19:33:11Z phoe_krk: pjb: reading, thanks
2015-11-04T19:33:23Z pjb: process isolation as done in systems like unix is very coarse.
2015-11-04T19:34:06Z sjl quit (Ping timeout: 240 seconds)
2015-11-04T19:34:06Z phoe_krk: pjb: that's why I thought there has to be an actually elegant way to do it, and if it's elegant, it's lispable
2015-11-04T19:34:53Z pjb: phoe_krk: yes, but it involves a controlled environment, (more easily provided by a controlled language/compiler than by the hardware).
2015-11-04T19:35:17Z phoe_krk: pjb: exactly what I thought: language or compiler providing that and not the hardware
2015-11-04T19:35:34Z pjb: phoe_krk: basically, capabilities are pointers, and when you don't have the pointer, you can't access the data.  The problem is that in machines like Intel processors and languages like C, you can build pointers you should not have access to.
2015-11-04T19:35:45Z EvW1 joined #lisp
2015-11-04T19:35:59Z EvW quit (Ping timeout: 250 seconds)
2015-11-04T19:35:59Z EvW1 is now known as EvW
2015-11-04T19:36:06Z phoe_krk: ...NullPointerException comes to mind. *shiver*
2015-11-04T19:36:10Z pjb: phoe_krk: in Common Lisp, if you exclude implementation specific "extensions", then you cannot build pointers like that, and therefore closure indeed would allow you to control the access to the data enclosed.
2015-11-04T19:37:37Z milkseaweed quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-11-04T19:37:50Z pjb: The question is whether you are able to build a system (compiler + OS + hardware), where you are able, as a system designer, to resist the tentation of providing a way to build pointers.  This includes the validation of the code generated by "a" compiler: you must be able resist the tentation to allow users to write their own compiler allowing building random pointers!
2015-11-04T19:37:59Z pjb: It's mostly a question of fortitude.
2015-11-04T19:38:11Z pjb: Some people will complain: but you can't watch youtube on your system!
2015-11-04T19:38:23Z phoe_krk: do I need pointers to watch youtube?
2015-11-04T19:38:35Z pjb: Yes, you need to be able to run code that's written in C :-)
2015-11-04T19:38:55Z phoe_krk: can't I just write a Youtube implementation in Lisp then?
2015-11-04T19:38:57Z pjb: But the C language doesn't prevent you to write a compiler targeting your controlled environment.
2015-11-04T19:39:02Z pjb: Of course, you can!
2015-11-04T19:39:08Z phoe_krk: That would make the system fairly homogenous when it comes to code.
2015-11-04T19:39:23Z pjb: Note, it's not necessarily lisp, it could be a VM, like the JVM.
2015-11-04T19:39:29Z phoe_krk: Yup.
2015-11-04T19:39:34Z pjb: As long as you don't have the tentation of providing a "FFI".
2015-11-04T19:39:56Z phoe_krk: FFI is always a danger to security.
2015-11-04T19:40:23Z phoe_krk: Does Java have any FFI?
2015-11-04T19:40:39Z phoe_krk: I don't think it does. It would end up ruining the JVM in 1001+ ways.
2015-11-04T19:40:53Z pjb: It does. At least Dalvik has the NDK.
2015-11-04T19:41:06Z pjb: I think there's something similar in the JDK.  JNI or something?
2015-11-04T19:41:17Z Shinmera: JNI is the thing, yes.
2015-11-04T19:41:24Z pjb: http://docs.oracle.com/javase/8/docs/technotes/guides/jni/
2015-11-04T19:41:42Z pjb: This is the kind of things you definitely don't want to include.
2015-11-04T19:41:52Z phoe_krk: Hmmm.
2015-11-04T19:41:56Z phoe_krk: So essentially...
2015-11-04T19:42:29Z phoe_krk: I'd need to be a true bastard and write a C-to-Lisp compiler.
2015-11-04T19:42:30Z pjb: You can define a VM, and ideally, you would implement it in hardware, to ensure that there's definitely no way to circumvent it.
2015-11-04T19:42:33Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-04T19:42:38Z pjb: phoe_krk: yes.
2015-11-04T19:42:53Z pjb: Check Vacietis.
2015-11-04T19:42:55Z phoe_krk: Which, with a hardware Lisp implementation, would actually make that hardened.
2015-11-04T19:43:32Z warweasle quit (Remote host closed the connection)
2015-11-04T19:43:32Z gaya- quit (Quit: Leaving.)
2015-11-04T19:43:40Z pjb: And I started developping one in: https://gitlab.com/com-informatimago/com-informatimago/tree/master/languages/{cpp,c11}
2015-11-04T19:44:04Z pjb: phoe_krk: but notice that the Lisp Machine had locative, and a way to build such "pointers".
2015-11-04T19:44:19Z pjb: It's hard to resist the temptation.
2015-11-04T19:44:32Z phoe_krk: pjb: temptation = vulnerability.
2015-11-04T19:44:35Z lispyone quit (Remote host closed the connection)
2015-11-04T19:44:53Z lisse joined #lisp
2015-11-04T19:44:57Z phoe_krk: I actually think it would be possible to have that, but only in a debug mode of sorts that has access to that sort of thing.
2015-11-04T19:45:07Z phoe_krk: so, to break the system's security, you have to reach that debug mode.
2015-11-04T19:45:11Z pjb: Well, no.
2015-11-04T19:46:05Z pjb: You can debug in a virtual development environment. But once it's running on the system, you should have resisted to all temptation.
2015-11-04T19:46:52Z malbertife joined #lisp
2015-11-04T19:47:17Z phoe_krk: That's quite a task
2015-11-04T19:47:22Z lisse quit (Client Quit)
2015-11-04T19:47:31Z pjb: Note that you can have a rule in your system that any thread of which the killing capability is lost, can be killed and garbage collected at any time.
2015-11-04T19:47:38Z phoe_krk: To build a hardware that's not buggy and doesn't allow you to debug live.
2015-11-04T19:47:52Z johann_ joined #lisp
2015-11-04T19:47:56Z pjb: Use maths.
2015-11-04T19:48:09Z phoe_krk: Hm?
2015-11-04T19:48:57Z OrangeShark joined #lisp
2015-11-04T19:50:18Z pjb: Notice that on unix you can debug a process, because it's a virtual machine and therefore you have access to the process memory from outside of it.
2015-11-04T19:50:25Z pjb: cf. gdb attach
2015-11-04T19:50:47Z pjb: But this doesn't work to debug the kernel.  There, you need to use other techniques.
2015-11-04T19:51:44Z pjb: In a system using controlled environments and capabilities, there would be no difference between the kernel and user code.  The separation would be between code and the machine (the VM or processor implementing the controlled environment).
2015-11-04T19:52:42Z johann_ quit (Ping timeout: 260 seconds)
2015-11-04T19:52:46Z phoe_krk: I see
2015-11-04T19:53:22Z trebor_home joined #lisp
2015-11-04T19:55:28Z pt1 joined #lisp
2015-11-04T19:58:30Z eni_ joined #lisp
2015-11-04T20:01:58Z ebrasca quit (Remote host closed the connection)
2015-11-04T20:02:00Z lispyone joined #lisp
2015-11-04T20:03:14Z gravicappa quit (Remote host closed the connection)
2015-11-04T20:04:11Z xificurC joined #lisp
2015-11-04T20:05:12Z doodlehaus joined #lisp
2015-11-04T20:05:39Z Bicyclidine quit (Ping timeout: 255 seconds)
2015-11-04T20:05:49Z lisse joined #lisp
2015-11-04T20:06:20Z cmack joined #lisp
2015-11-04T20:06:22Z xrash quit (Remote host closed the connection)
2015-11-04T20:06:46Z snv1 joined #lisp
2015-11-04T20:06:49Z snv quit (Read error: Connection reset by peer)
2015-11-04T20:07:08Z cmack quit (Client Quit)
2015-11-04T20:08:18Z vlatkoB quit (Remote host closed the connection)
2015-11-04T20:08:25Z doodlehaus quit (Client Quit)
2015-11-04T20:10:58Z sjl joined #lisp
2015-11-04T20:11:17Z bb010g joined #lisp
2015-11-04T20:15:05Z Bicyclidine joined #lisp
2015-11-04T20:16:02Z dougk_ joined #lisp
2015-11-04T20:19:11Z phoe_krk: test
2015-11-04T20:19:15Z phoe_krk: am I disconnected?
2015-11-04T20:19:30Z Bicyclidine: no, unless you sent that message a few minutes ago, perhaps.
2015-11-04T20:19:36Z phoe_krk: thanks
2015-11-04T20:21:00Z leafyba__ joined #lisp
2015-11-04T20:21:22Z Yanez quit (Ping timeout: 250 seconds)
2015-11-04T20:21:55Z pt1 quit (Remote host closed the connection)
2015-11-04T20:23:49Z leafybas_ quit (Ping timeout: 252 seconds)
2015-11-04T20:24:10Z sjl__ joined #lisp
2015-11-04T20:25:45Z leafyba__ quit (Ping timeout: 246 seconds)
2015-11-04T20:25:50Z sjl quit (Ping timeout: 240 seconds)
2015-11-04T20:31:29Z mac_ified joined #lisp
2015-11-04T20:31:42Z faalentijn quit (Read error: Connection reset by peer)
2015-11-04T20:32:32Z vedwin quit (Ping timeout: 272 seconds)
2015-11-04T20:33:55Z pt1 joined #lisp
2015-11-04T20:34:59Z kobain quit (Quit: KVIrc 4.1.3 Equilibrium http://www.kvirc.net/)
2015-11-04T20:36:25Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-04T20:39:38Z wtbrk joined #lisp
2015-11-04T20:39:48Z lisse joined #lisp
2015-11-04T20:44:37Z JammyHammy joined #lisp
2015-11-04T20:48:36Z johann_ joined #lisp
2015-11-04T20:49:07Z defaultxr joined #lisp
2015-11-04T20:52:50Z johann_ quit (Ping timeout: 240 seconds)
2015-11-04T20:53:49Z kobain joined #lisp
2015-11-04T20:53:53Z newdan joined #lisp
2015-11-04T20:57:37Z JuanDaugherty joined #lisp
2015-11-04T20:58:00Z briantrice quit (Quit: briantrice)
2015-11-04T20:58:29Z leafybas_ joined #lisp
2015-11-04T21:01:41Z happy-dude quit (Quit: Connection closed for inactivity)
2015-11-04T21:02:28Z faalentijn joined #lisp
2015-11-04T21:03:41Z cpc26_ joined #lisp
2015-11-04T21:03:50Z TDT joined #lisp
2015-11-04T21:03:53Z snv1 quit (Read error: Connection reset by peer)
2015-11-04T21:04:07Z znpy joined #lisp
2015-11-04T21:04:18Z warweasle` quit (Remote host closed the connection)
2015-11-04T21:04:50Z White_Flame: hitecnologys: re unicast, it's good that that model fits.  it will make many things simpler
2015-11-04T21:04:53Z cpc26 quit (Ping timeout: 268 seconds)
2015-11-04T21:06:02Z White_Flame: phoe_krk: a similar thing that I've wanted for a while is to have mulitple separate heaps.  Erlang does this, and it would be easy to set up the MMU to disallow crossing heaps while running in another heap's context
2015-11-04T21:06:04Z hitecnologys: White_Flame: yeah, the code is now much simpler… and has O(1) complexity in worst case. =P
2015-11-04T21:06:13Z snv joined #lisp
2015-11-04T21:06:56Z TDT quit (Client Quit)
2015-11-04T21:07:12Z White_Flame: phoe_krk: but "the lisp way" really does include the ability to mutate anything in the system.  it's hard to try to resolve the notion of security boundaries and lispishness
2015-11-04T21:07:40Z phoe_krk: White_Flame: you cannot really have virus-free multiprocess systems without that.
2015-11-04T21:07:58Z White_Flame: lisp is a virus enabler by definition then :-P
2015-11-04T21:08:32Z White_Flame: however, as has been mentioned above, you generally can't create raw pointers from scratch from within the language, so only using language semantics, you can make things generally secure
2015-11-04T21:08:41Z TDT joined #lisp
2015-11-04T21:08:53Z phoe_krk: That's what I hope!
2015-11-04T21:09:15Z White_Flame: and security research would involve making sure nobody can break the lisp semantics, and making sure there aren't any uncovered introspective facilities that ensure access to stuff you shouldn't have
2015-11-04T21:09:23Z White_Flame: I know Java's been nailed for the latter
2015-11-04T21:09:24Z phoe_krk: But generally speaking, I want process A being unable to read or mutate process B unless it explicitly makes an IPC.
2015-11-04T21:09:50Z lispyone quit (Remote host closed the connection)
2015-11-04T21:10:21Z White_Flame: well, define "unable".  Unable while running CLHS compatible code and no implementation-specific functionality?
2015-11-04T21:10:26Z Bicyclidine: Java or JVM?
2015-11-04T21:10:44Z White_Flame: Bicyclidine: I don't quite recall.  I think it was Java the language
2015-11-04T21:11:06Z White_Flame: the way it defined its sandboxes, and standard introspective facilities could get around it.  That was a few years ago
2015-11-04T21:11:10Z futpib quit (Ping timeout: 244 seconds)
2015-11-04T21:11:11Z phoe_krk: Unable under any circumstances; both processes are only Lisp code and are run under whatever LispOS security mechanisms.
2015-11-04T21:11:54Z White_Flame: phoe_krk: a big question that comes to mind is how the 'kernel' accesses privileged stuff
2015-11-04T21:12:15Z malbertife quit (Ping timeout: 255 seconds)
2015-11-04T21:12:15Z phoe_krk: White_Flame: through an API that is by definition not available to processes
2015-11-04T21:12:31Z White_Flame: but in any case, you'd need to create the notion of a security boundary.  one doesn't exist of that strictness in Lisp, or in broad functional style either
2015-11-04T21:12:59Z White_Flame: you're basically describing Erlang's VM
2015-11-04T21:13:11Z White_Flame: but I don't know exactly how secure it is
2015-11-04T21:13:13Z phoe_krk: White_Flame: there needs to be such a boundary. I'm thinking that in the hardware, actually, it might naturally occur
2015-11-04T21:13:18Z TDT quit (Ping timeout: 260 seconds)
2015-11-04T21:13:22Z phoe_krk: As in, a hardware Lisp implementation
2015-11-04T21:13:26Z White_Flame: I do know that whoever's on the network as a node is trusted and can do anything
2015-11-04T21:14:12Z White_Flame: phoe_krk: right, that's new design; that's not an addressed issue in the lisp machines, nor in the lisp image implementations we have now
2015-11-04T21:14:34Z phoe_krk: White_Flame: the kernel is the only bridge between applications and the hardware.
2015-11-04T21:14:34Z White_Flame: it's not uncommon to try to design such things, but there isn't any standard Lisp-ish or FP-ish practices to build off of.  It's new
2015-11-04T21:16:44Z Yanez joined #lisp
2015-11-04T21:16:57Z White_Flame: beach has a notion of first-class environment.  I have a notion of virtualized packages.  Erlang has a notion of separate heaps.  etc
2015-11-04T21:17:06Z phoe_krk: Mhm, I've noticed that
2015-11-04T21:17:24Z phoe_krk: White_Flame: I'd need to read into existing hypervisor solutions and translate that to Lisp hardware/kernel/software
2015-11-04T21:17:36Z White_Flame: sure, existing process boundaries are well know
2015-11-04T21:17:52Z White_Flame: +n.  you could also easily run multiple communicating OS processes each with their own liso
2015-11-04T21:18:05Z phoe_krk: yes
2015-11-04T21:18:09Z phoe_krk: So I essentially...
2015-11-04T21:18:15Z phoe_krk: ...virtualize the processes
2015-11-04T21:18:17Z phoe_krk: Not OSes
2015-11-04T21:18:19Z phoe_krk: but processes
2015-11-04T21:18:30Z White_Flame: but to put it all into 1 process, you're kind of reinventing that in user space.  Plus, you need to figure out what dynamic scope means in that infrastructure, etc
2015-11-04T21:18:52Z phoe_krk: depends on what a process means
2015-11-04T21:19:07Z phoe_krk: with such a hardware infrastructure, I'd need to redefine what a process means
2015-11-04T21:19:11Z White_Flame: and how multimethods can interact across partitions
2015-11-04T21:19:39Z oleo quit (Ping timeout: 240 seconds)
2015-11-04T21:19:42Z White_Flame: so there are a lot of language-based decisions.  The hardware protection stuff is already there
2015-11-04T21:19:55Z ekinmur joined #lisp
2015-11-04T21:20:50Z phoe_krk: The idea is to be able to spawn a fully working Lisp instance, independent from all others when it comes to memory, for the process to run in
2015-11-04T21:21:17Z White_Flame: um, that's what we already have now.  run 2 instances of SBCL, have them talk
2015-11-04T21:21:21Z userm joined #lisp
2015-11-04T21:21:22Z Bicyclidine: isn't that exactly how linux (and presumably more, but i dont know them) works.
2015-11-04T21:21:49Z Bicyclidine: i mean, except with the "interpreter language" being asm.
2015-11-04T21:22:18Z phoe_krk: White_Flame: the difference is, I don't want to spawn two different Lisp images, I want to spawn one that is able to pop smaller sub-images from itself
2015-11-04T21:22:37Z phoe_krk: that are also secure when it comes to hardware access
2015-11-04T21:22:38Z Bicyclidine: what's the difference?
2015-11-04T21:22:47Z White_Flame: a "fully working Lisp instance, independent from all others when it comes to memory" is a different lisp image
2015-11-04T21:22:48Z oleo joined #lisp
2015-11-04T21:22:48Z oleo quit (Changing host)
2015-11-04T21:22:48Z oleo joined #lisp
2015-11-04T21:22:52Z phoe_krk: Bicyclidine: security IMO
2015-11-04T21:23:02Z Bicyclidine: but that's... i mean, what White_Flame said.
2015-11-04T21:23:04Z phoe_krk: White_Flame: hm
2015-11-04T21:23:20Z fridim_ quit (Ping timeout: 250 seconds)
2015-11-04T21:23:34Z Bicyclidine: lisp machines have this mysterious tendency to end up as what we already have, eh.
2015-11-04T21:23:37Z phoe_krk: so we come down to Lisp kernel spawning sub-Lisps that have no direct hardware access
2015-11-04T21:24:08Z phoe_krk: this doesn't click for me just yet
2015-11-04T21:24:22Z phoe_krk: something's missing and I'm too tired to think it out just yet
2015-11-04T21:25:19Z phoe_krk: what we have right now could actually be done in pure software right now
2015-11-04T21:25:36Z phoe_krk: so we come back to LispOS
2015-11-04T21:25:47Z kami`` joined #lisp
2015-11-04T21:25:57Z phoe_krk: which used to run on an ordinary Apple ][.
2015-11-04T21:26:09Z White_Flame: by your descriptions, it really doesn't matter what language the kernel which spawns lisp images is, if you're going to be isolated from it as a lisp user.  So why not use linux for that kernel?
2015-11-04T21:26:56Z White_Flame: and I don't think it's a "sub-image" or "sub-lisp" if it's completely isolated.  I think it's just a new lisp image
2015-11-04T21:27:35Z jackdaniel: for the turtles all-the-way-down sake
2015-11-04T21:27:37Z jackdaniel: :)
2015-11-04T21:27:56Z White_Flame: sure, I have absolutely nothing against that
2015-11-04T21:27:58Z phoe_krk: A modified (for translating Lispcalls-to-DHA) linux kernel that spawns modified (for no DHA) lisp images?
2015-11-04T21:28:00Z kami` quit (Ping timeout: 255 seconds)
2015-11-04T21:28:30Z White_Flame: phoe_krk: I'm basically asking you to describe what the difference is with your imagined system, vs what we have now with linux launching sbcl instances
2015-11-04T21:28:57Z White_Flame: the only difference I see is that a kernel developer could use Lisp, but users would have the exact same lisp instances that they have now
2015-11-04T21:29:25Z phoe_krk: with linux interprocess isolation...
2015-11-04T21:29:42Z phoe_krk: and a different SBCL instance for each process...
2015-11-04T21:30:00Z phoe_krk: nothing
2015-11-04T21:30:06Z White_Flame: :)
2015-11-04T21:30:15Z phoe_krk: we could end up some purists write a kernel in Lisp when the time comes, but, well
2015-11-04T21:30:25Z phoe_krk: a kernel surrounded by Lisp images
2015-11-04T21:30:28Z phoe_krk: that will do.
2015-11-04T21:30:37Z phoe_krk: so, essentially.
2015-11-04T21:30:45Z jackdaniel: but to be honest I'd make a good use of REPL when developing drivers for linux :)
2015-11-04T21:30:52Z phoe_krk: :3
2015-11-04T21:31:11Z phoe_krk: the first step IMO is what we've been discussing already a lot of time ago: a Lisp shell for Linux
2015-11-04T21:31:26Z josemanuel joined #lisp
2015-11-04T21:32:01Z White_Flame: Users of lisp machines could freely configure anything in the system.  Support utility "applications" could directly walk through other applications' data structures for reporting, debugging, or manipulation
2015-11-04T21:32:10Z algae quit (Quit: leaving)
2015-11-04T21:32:27Z TDT joined #lisp
2015-11-04T21:32:27Z phoe_krk: White_Flame: that's what I said by the means of "debugging" or "debug mode".
2015-11-04T21:32:29Z White_Flame: these are the types of advantages that people thinking about modern LispOS ideas wish to retain, and resolve that with security considerations
2015-11-04T21:32:39Z phoe_krk: With modern systems, you can't have that because badware.
2015-11-04T21:32:45Z Shinmera: I remember an article of a lisp machine user that was able to debug and fix a fatal error on the hardware level thanks to having full control all the way down.
2015-11-04T21:32:47Z phoe_krk: Or NSA.
2015-11-04T21:33:01Z phoe_krk: Shinmera: o_o
2015-11-04T21:33:12Z jackdaniel: Shinmera: that's what I mean by making a good use of REPL
2015-11-04T21:33:14Z phoe_krk: power user's heaven
2015-11-04T21:33:22Z White_Flame: by hardware level, you mean microcode editing?
2015-11-04T21:33:41Z Shinmera: White_Flame: I don't recall the details anymore, but it had something to do with a driver going bonkers.
2015-11-04T21:33:52Z Shinmera wishes he'd bookmark things more often
2015-11-04T21:33:58Z phoe_krk: that would require a Lisp kernel though if we wanted to replicate that ability.
2015-11-04T21:34:05Z phoe_krk: Linux would go oops or KP.
2015-11-04T21:34:05Z jackdaniel: configuring dma, investigating responses from the device etc
2015-11-04T21:34:25Z jackdaniel: phoe_krk: not necessarily - modules work when loaded to the kernel space
2015-11-04T21:34:42Z phoe_krk: jackdaniel: or have a Lisp kernel-debugging module hooked in. would it work?
2015-11-04T21:34:56Z phoe_krk: ...or, wait
2015-11-04T21:35:16Z jackdaniel: I don't know - it might
2015-11-04T21:35:16Z Bicyclidine: editing running kernel code is a nice topic to change from from security
2015-11-04T21:35:27Z phoe_krk: Linux, upon KPing, goes kexec and boots into the sub-kernel that collects crash data and shows the KP message.
2015-11-04T21:35:28Z Shinmera: Bicyclidine: :^)
2015-11-04T21:36:14Z phoe_krk: It *should* be possible to have it kexec into something already loaded as a module in a fixed place so it wouldn't corrupt the kernel memory...
2015-11-04T21:36:23Z jackdaniel: Bicyclidine: if you have a privigiles to load a module in linux then you have basically all privigiles on the system so security topic is irrevelant here
2015-11-04T21:36:39Z phoe_krk: ...that could be a Lisp-based microkernel strictly for debugging the system and investigating the kernel state *the moment it died*
2015-11-04T21:37:07Z jackdaniel: phoe_krk: you talk about the kgdb basically
2015-11-04T21:37:09Z phoe_krk: ...and you could easily kexec back into the Linux kernel out of the debugger once you make your fixes.
2015-11-04T21:37:27Z TDT quit (Ping timeout: 255 seconds)
2015-11-04T21:37:30Z phoe_krk: jackdaniel: yes, precisely, I knew the idea rung a bell
2015-11-04T21:37:45Z jackdaniel: good night all o/
2015-11-04T21:37:45Z phoe_krk: but KGDB requires another machine
2015-11-04T21:37:50Z phoe_krk: night jackdaniel
2015-11-04T21:38:36Z phoe_krk: I thought of something you could autoboot into upon a kernel crash to fix the problem locally.
2015-11-04T21:39:29Z phoe_krk: basically, when you crash, the debug-kernel can have all access to the kernel/driver memory and make the necessary edits that go live the moment you quit it and pass control back to the proper kernel
2015-11-04T21:40:25Z phoe_krk: would be tricky to implement, but doable and in the Lisp Machine spirit
2015-11-04T21:40:51Z kami`` is now known as kami
2015-11-04T21:41:01Z White_Flame: there isn't a kernel separation in the Lisp Machine world
2015-11-04T21:41:22Z phoe_krk: White_Flame: we're thinking about linux+SBCL here
2015-11-04T21:41:24Z White_Flame: and the debugger is available for everything by nature, in a very unified fashion
2015-11-04T21:41:50Z White_Flame: right, but you referenced "the Lisp Machine spirit", which I'd point out it really isn't
2015-11-04T21:42:09Z phoe_krk: White_Flame: right, I didn't convey the thought fully
2015-11-04T21:42:15Z userm: Hi, is there a way to get emacs to indent some of my macro more like it would indent a defun form?  e.g I currently have https://gist.github.com/anonymous/181a6c9668764c0f65e9
2015-11-04T21:42:29Z wtbrk quit (Remote host closed the connection)
2015-11-04T21:42:47Z White_Flame: userm: SLIME needs to be connected to a Lisp where the DEFCOMPONENT macro is defined
2015-11-04T21:43:07Z White_Flame: as far as I understand it, if the macro has a &body field, SLIME uses that to introspect it like code
2015-11-04T21:43:30Z White_Flame: s/introspect/indent/
2015-11-04T21:43:38Z phoe_krk: the dream is a Lisp kernel able to debug-hook into processes and drivers and, what I think, a hardware-embedded Lisp debugger with a separate piece of memory that can understand and parse the live kernel/driver/process structure before passing the control over to it again
2015-11-04T21:43:56Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-04T21:44:14Z White_Flame: given that Lisp doesn't allow raw pointer creation, I'm not sure that the memory separation needs to be as strict
2015-11-04T21:44:20Z shka quit (Quit: Konversation terminated!)
2015-11-04T21:44:24Z phoe_krk: so you can either debug from the Lisp-kernel level or debug the kernel from the hardware-debugger level (that could possibly also debug itself, if it's a thing)
2015-11-04T21:44:44Z shka joined #lisp
2015-11-04T21:44:52Z phoe_krk: White_Flame: I don't think it either, it could be something along the lines of first class environments or some other advanced closures
2015-11-04T21:44:53Z userm: That might be my problem then. Although I'm connected to SLIME, I'm using parenscript's defpsmacro macro
2015-11-04T21:45:03Z phoe_krk: White_Flame: but we're beginning with a linux kernel and its interprocess isolation
2015-11-04T21:45:03Z phoe_krk: brb
2015-11-04T21:45:18Z White_Flame: userm: ah, I've not used parenscript.  I don't know what these implications are
2015-11-04T21:45:30Z Shinmera: userm: Also note that slime will only /highlight/ macros with names that begin with define-*
2015-11-04T21:46:33Z josemanuel quit (Quit: Saliendo)
2015-11-04T21:46:53Z Shinmera: userm: You might be able to force slime into a particular indentation by giving it explicit hints. I don't know if that will work in your context for sure, but it might be worth a try. Have a look at trivial-indent for that. https://github.com/Shinmera/trivial-indent
2015-11-04T21:47:14Z White_Flame: phoe_krk: SLIME already lets you hook into other already running OS processes, and run the REPL and debugger against it
2015-11-04T21:47:32Z White_Flame: (if you launch your lisp processes with swank running)
2015-11-04T21:48:50Z userm: Shinmera: Cool I will check that out
2015-11-04T21:49:20Z johann_ joined #lisp
2015-11-04T21:49:50Z eni_ quit (Quit: Leaving)
2015-11-04T21:54:09Z shka quit (Remote host closed the connection)
2015-11-04T21:54:13Z johann_ quit (Ping timeout: 268 seconds)
2015-11-04T21:54:38Z shka joined #lisp
2015-11-04T21:54:47Z otjura quit (Ping timeout: 264 seconds)
2015-11-04T21:56:20Z snv quit (Quit: Leaving.)
2015-11-04T21:56:32Z pt1 quit (Remote host closed the connection)
2015-11-04T21:57:26Z quazimodo joined #lisp
2015-11-04T21:57:47Z shka: any method in the standard or alexandria to remove-if but only one element?
2015-11-04T21:58:17Z White_Flame: add :count 1
2015-11-04T21:58:34Z briantrice joined #lisp
2015-11-04T21:58:40Z sjl__ quit (Ping timeout: 272 seconds)
2015-11-04T21:58:51Z Ven joined #lisp
2015-11-04T21:59:36Z TDT joined #lisp
2015-11-04T22:00:12Z shka: White_Flame: thx
2015-11-04T22:00:18Z briantrice quit (Client Quit)
2015-11-04T22:01:40Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-04T22:01:44Z ASau joined #lisp
2015-11-04T22:02:12Z ASau quit (Remote host closed the connection)
2015-11-04T22:02:49Z Ven quit (Read error: Connection reset by peer)
2015-11-04T22:03:19Z ASau joined #lisp
2015-11-04T22:04:19Z TDT quit (Ping timeout: 240 seconds)
2015-11-04T22:08:56Z badkins quit (Read error: Connection reset by peer)
2015-11-04T22:09:13Z phoe_krk: White_Flame: the compiler of my dreams can understand running code, as in, pinpoint the instruction to a local copy of Lisp code of the debugged application/driver/kernel
2015-11-04T22:09:25Z phoe_krk: as in, you can actually debug Lisp and not asm/microcode
2015-11-04T22:09:31Z phoe_krk: high-level debugging
2015-11-04T22:09:33Z phoe_krk: ;____;
2015-11-04T22:09:46Z phoe_krk: and then just pass the control back into the kernel
2015-11-04T22:09:48Z phoe_krk dreams
2015-11-04T22:10:11Z White_Flame: I fail to see the difference...
2015-11-04T22:10:38Z White_Flame: I know in other environments, you need to launch in Debug vs Release mode to enable the compiler, but that's not the case in Lisp
2015-11-04T22:11:07Z White_Flame: and pretty much all debuggers associate HLL source with the generated asm statements
2015-11-04T22:11:12Z Bicyclidine quit (Ping timeout: 255 seconds)
2015-11-04T22:11:58Z White_Flame: (ugh, enable the _disassembler_, not compiler.  I'm not awake yet)
2015-11-04T22:12:06Z White_Flame: _debugger_, too :-P
2015-11-04T22:12:23Z angavrilov quit (Remote host closed the connection)
2015-11-04T22:17:18Z Raimondii joined #lisp
2015-11-04T22:17:50Z Raimondi quit (Ping timeout: 260 seconds)
2015-11-04T22:18:07Z prxq joined #lisp
2015-11-04T22:18:14Z pjb: phoe_krk: that said, even assuming you take over the processor from the boot, in the BIOS, with Intel I'm not sure there are any guarantee you can keep control of everything.  For example, the Intel MMU are Turing complete, so if user code can manipulate the system to set up the MMU tables in a certain way, it could be able to run code under the OS without even using the processor!  There is certainly other ways to bypass processor
2015-11-04T22:18:14Z pjb: security with Intel (or american or chinese processors in general).  You might want to source the processor elsewhere.
2015-11-04T22:18:22Z pjb: Better build it yourself.
2015-11-04T22:18:38Z Ven joined #lisp
2015-11-04T22:19:59Z Shinmera: If you want to bake an apple pie from scratch...
2015-11-04T22:20:41Z pjb: Yes.
2015-11-04T22:20:47Z cyraxjoe joined #lisp
2015-11-04T22:21:58Z fortitude quit (Ping timeout: 268 seconds)
2015-11-04T22:22:58Z Raimondi joined #lisp
2015-11-04T22:23:10Z Bicyclidine joined #lisp
2015-11-04T22:23:54Z Denommus joined #lisp
2015-11-04T22:24:02Z sjl joined #lisp
2015-11-04T22:24:17Z danlentz_ joined #lisp
2015-11-04T22:24:55Z briantrice joined #lisp
2015-11-04T22:25:46Z Raimondii quit (Ping timeout: 240 seconds)
2015-11-04T22:26:20Z Raimondii joined #lisp
2015-11-04T22:26:55Z TDT joined #lisp
2015-11-04T22:27:20Z fortitude joined #lisp
2015-11-04T22:27:31Z MaggieAndEazar joined #lisp
2015-11-04T22:27:39Z phoe_krk: White_Flame: I thought of everything being debug mode by design, so the debugger can be launched to poke at everything
2015-11-04T22:28:50Z Raimondi quit (Ping timeout: 240 seconds)
2015-11-04T22:29:08Z francogrex_ joined #lisp
2015-11-04T22:29:28Z francogrex_: hi, I have this, I am trying to understand how a function works in sas: http://paste.lisp.org/display/158498
2015-11-04T22:30:06Z francogrex_: it's supposed to output a character string that contains a binary representation however I cannot understand how the hex value 68630B0B00000000 is retrieved
2015-11-04T22:30:21Z Colleen_ joined #lisp
2015-11-04T22:30:24Z White_Flame: phoe_krk: that's what we already have with slime
2015-11-04T22:30:28Z francogrex_: I'd like of course to reproduce it in lisp
2015-11-04T22:30:59Z Shinmera quit (Ping timeout: 240 seconds)
2015-11-04T22:31:23Z phoe_krk: White_Flame: yes, but I'd like to locate a software debugger in the *kernel* and a hardware debugger *outside*.
2015-11-04T22:31:35Z phoe_krk: aside from userspace debuggers like slime
2015-11-04T22:31:52Z TDT quit (Ping timeout: 265 seconds)
2015-11-04T22:32:02Z Shinmera joined #lisp
2015-11-04T22:32:06Z fortitude quit (Ping timeout: 240 seconds)
2015-11-04T22:32:30Z White_Flame: phoe_krk: sure, but that gets back to wanting stacks of turtles, even if the use cases are the same
2015-11-04T22:32:35Z Colleen quit (Ping timeout: 264 seconds)
2015-11-04T22:32:36Z Colleen_ is now known as Colleen
2015-11-04T22:33:06Z Raimondii quit (Ping timeout: 240 seconds)
2015-11-04T22:34:00Z phoe_krk: White_Flame: either that, or we won't have lisp head to toe
2015-11-04T22:34:04Z TDT joined #lisp
2015-11-04T22:34:05Z johs quit (Ping timeout: 250 seconds)
2015-11-04T22:34:27Z JammyHammy quit (Read error: Connection reset by peer)
2015-11-04T22:34:29Z White_Flame: I don't see much value in a LispOS that behaves just like Linux does now
2015-11-04T22:34:39Z LiamH quit (Quit: Leaving.)
2015-11-04T22:34:48Z Shinmera: "It'll be cooler when we do it"
2015-11-04T22:34:54Z phoe_krk: :P
2015-11-04T22:35:20Z phoe_krk: oh okay, anyway
2015-11-04T22:35:24Z pjb: phoe_krk: well, to debug a unix program you usually launch it from gdb, so gdb has all the rights on the child process.  When using gdb attach, the OS must allow a random process (gdb) to access to another random process (the debugged process), and this is done after validing access rights.  In the case of lisp of course it's different, the debugger is already inside the program ;-)
2015-11-04T22:35:28Z White_Flame: but then again, I'm a user-space developer, not a kernel hacker
2015-11-04T22:35:43Z phoe_krk: my GF doesn't speak English
2015-11-04T22:36:49Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-04T22:36:50Z phoe_krk: so I got the idea of translating a subset of Lisp functions into Polish for the very beginning. which is going to help IMO as she's fairly fluent at all the humanistic arts
2015-11-04T22:37:07Z phoe_krk: until I get her English enough to be able to use CL on its own.
2015-11-04T22:37:10Z pjb: francogrex_: isn't it obvious? 104 99 11 11 0 0 0 0 =? 68630B0B00000000 104(dec)=68(hex) 99(dec)=63(hex) 11(dec)=0B(hex) etc.
2015-11-04T22:37:14Z quazimodo quit (Read error: No route to host)
2015-11-04T22:37:38Z White_Flame: francogrex_: it looks like it's printing the _address_ of x, not the value of it (23)
2015-11-04T22:38:05Z White_Flame: (hence the "addr" prefix)
2015-11-04T22:38:35Z TDT quit (Ping timeout: 264 seconds)
2015-11-04T22:39:03Z TDT joined #lisp
2015-11-04T22:39:10Z phoe_krk: Let's say I have an alist of form ((#'origfunc1 . #'newfunc1) (#'origfunc2 . #'newfunc2) ...). #'origfuncX are all valid lisp functions. How do I make #'newfuncX have exactly the same properties as #'origfuncX?
2015-11-04T22:39:45Z White_Flame: what do you mean by properties of a function?
2015-11-04T22:39:55Z papachan quit (Quit: WeeChat 1.3)
2015-11-04T22:39:57Z Bicyclidine: (lambda (&rest args) (apply #'origfuncX args))
2015-11-04T22:40:08Z bb010g quit (Quit: Connection closed for inactivity)
2015-11-04T22:40:42Z papachan_ is now known as papachan
2015-11-04T22:40:42Z Bicyclidine: i guess that doesn't move documentation
2015-11-04T22:40:58Z phoe_krk: Bicyclidine: documentation is in English, so thanks :P
2015-11-04T22:41:15Z phoe_krk: Bicyclidine: oh! so a macro that loops over an alist and defuns all the functions with apply newfunc will do?
2015-11-04T22:41:37Z Bicyclidine: i mean, the things you can do with a function are basically call it, put it somewhere, and query/set its documentation, as far as i remember
2015-11-04T22:41:40Z Bicyclidine: compile it too, i gues
2015-11-04T22:41:54Z phoe_krk: I will only do the first two things
2015-11-04T22:42:03Z Bicyclidine: then the lambda's fine, yeah
2015-11-04T22:42:06Z francogrex_: White_Flame: yes indeed the address
2015-11-04T22:42:07Z phoe_krk: call it and (if we get there) store it
2015-11-04T22:42:27Z Bicyclidine: though i'm not sure why you'd want to do this.
2015-11-04T22:42:53Z White_Flame: given the limited number of things you can do with it, just keeping another reference to the same function should be equivalent if you're not touching docstrings
2015-11-04T22:43:08Z White_Flame: are you doing something with EQ that you need them to be separate for whatever reason?
2015-11-04T22:43:14Z phoe_krk: Bicyclidine: I want to get her to grasp the basic basics of Lisp without the necessary English knowledge just yet.
2015-11-04T22:43:16Z francogrex_: pjb: aye, indeed
2015-11-04T22:43:20Z phoe_krk: White_Flame: no, not really.
2015-11-04T22:43:30Z TDT quit (Ping timeout: 240 seconds)
2015-11-04T22:43:33Z Bicyclidine: phoe_krk: i do not know what that has to do with alists of functions
2015-11-04T22:43:49Z phoe_krk: Bicyclidine: ignore it, it's just a data structure I thought up to examplify
2015-11-04T22:44:15Z phoe_krk: I basically have a list of function symbols in English and I have a list of function symbols in Polish and I'd like to map Polish symbols to English ones
2015-11-04T22:44:16Z mishoo_ quit (Ping timeout: 272 seconds)
2015-11-04T22:44:23Z White_Flame: lambdas are a more interesting/useful thing to teach than defuns, so passing around function instances is something to showcase, rather than re-defuning toplevel functions
2015-11-04T22:44:44Z phoe_krk: White_Flame: I don't want to teach defuns right now
2015-11-04T22:44:52Z White_Flame: (setf (symbol-function polish-name) (symbol-function english-name)) ?
2015-11-04T22:44:59Z userm quit (Ping timeout: 240 seconds)
2015-11-04T22:44:59Z phoe_krk: let me check
2015-11-04T22:45:46Z phoe_krk: White_Flame: precisely the trick. symbol-function was what I was missing.
2015-11-04T22:46:09Z Shinmera: White_Flame: I'm not sure if that works on macros though.
2015-11-04T22:46:43Z White_Flame: breaks in my sbcl
2015-11-04T22:46:55Z Bicyclidine: symbol-function on a macro gets you "an object of implementation-dependent nature and identity is returned" so, uh
2015-11-04T22:47:05Z White_Flame: "#<CLOSURE (:MACRO AND) {1000C203FB}> is not acceptable to (SETF SYMBOL-FUNCTION)."
2015-11-04T22:47:15Z Shinmera: Bicyclidine: Yeah but that doesn't tell whether putting it somewhere else will work or not.
2015-11-04T22:47:18Z prxq quit (Remote host closed the connection)
2015-11-04T22:47:20Z quazimodo joined #lisp
2015-11-04T22:47:22Z phoe_krk: White_Flame: wat
2015-11-04T22:47:32Z Bicyclidine: i mean, i don't see why it couldn't return a 4
2015-11-04T22:47:33Z phoe_krk: oh, macros
2015-11-04T22:47:42Z Bicyclidine: anyway (setf (macro-function ...) (macro-function ...)) works
2015-11-04T22:47:56Z phoe_krk: Bicyclidine: wonderful
2015-11-04T22:48:15Z fortitude joined #lisp
2015-11-04T22:49:54Z lisse joined #lisp
2015-11-04T22:49:59Z Ven quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-11-04T22:50:04Z johann_ joined #lisp
2015-11-04T22:50:35Z phoe_krk: ...why did I just misread KGDB as KGB
2015-11-04T22:51:07Z phoe_krk: in Soviet Russia, the bugs swear because of you
2015-11-04T22:52:19Z badkins joined #lisp
2015-11-04T22:53:17Z newdan quit (Remote host closed the connection)
2015-11-04T22:54:36Z cmatei quit (Remote host closed the connection)
2015-11-04T22:54:47Z johann_ quit (Ping timeout: 264 seconds)
2015-11-04T22:54:47Z Yanez quit (Ping timeout: 264 seconds)
2015-11-04T22:55:04Z EvW quit (Ping timeout: 265 seconds)
2015-11-04T22:55:22Z kami: AeroNotix: ping
2015-11-04T22:57:57Z cmatei joined #lisp
2015-11-04T22:58:26Z lispyone joined #lisp
2015-11-04T22:58:42Z francogrex_ quit
2015-11-04T22:59:52Z cadadar joined #lisp
2015-11-04T23:01:04Z thodg quit (Ping timeout: 246 seconds)
2015-11-04T23:01:37Z mrSpec quit (Quit: mrSpec)
2015-11-04T23:03:26Z lispyone quit (Ping timeout: 260 seconds)
2015-11-04T23:12:00Z gigetoo quit (Ping timeout: 246 seconds)
2015-11-04T23:13:17Z treaki joined #lisp
2015-11-04T23:13:37Z Whymind quit (Quit: Leaving)
2015-11-04T23:15:16Z X-Scale joined #lisp
2015-11-04T23:15:27Z zacharias joined #lisp
2015-11-04T23:16:20Z Raimondi joined #lisp
2015-11-04T23:18:16Z heddwch quit (Ping timeout: 265 seconds)
2015-11-04T23:19:28Z heddwch joined #lisp
2015-11-04T23:20:30Z Whymind joined #lisp
2015-11-04T23:20:48Z phoe_krk: what possibility exists to translate keywords inside function calls?
2015-11-04T23:21:43Z Bicyclidine: probably write your own function that does the translation
2015-11-04T23:22:15Z phoe_krk: right; for keyworded functions it's going to be necessary
2015-11-04T23:23:38Z Draz quit (Quit: Leaving)
2015-11-04T23:23:58Z X-Scale left #lisp
2015-11-04T23:24:28Z phoe_krk: ...it's not trivial
2015-11-04T23:25:08Z cadadar quit (Quit: Leaving.)
2015-11-04T23:25:09Z phoe_krk: (a) (a :b c) are two different funcalls
2015-11-04T23:25:35Z Bicyclidine: yeah, you have to use key-p, probably.
2015-11-04T23:26:12Z JuanDaugherty: in Soviet Russia, nobody can thank Obama
2015-11-04T23:26:38Z phoe_krk: Bicyclidine: I'll go the hard way, go with &rest and push proper keys and values onto a list and then apply the function with the arg being the pushed list.
2015-11-04T23:34:56Z pjb: (defun a (a &key b) (cl:a a :english-b b))
2015-11-04T23:35:11Z attila_lendvai joined #lisp
2015-11-04T23:35:11Z attila_lendvai quit (Changing host)
2015-11-04T23:35:11Z attila_lendvai joined #lisp
2015-11-04T23:35:36Z phoe_krk: pjb: oh, that's much simpler! thanks
2015-11-04T23:35:49Z pjb: Actually, it's not that simple.
2015-11-04T23:35:51Z shka quit (Quit: Konversation terminated!)
2015-11-04T23:36:19Z pjb: phoe_krk: some functions may make semantic differences between (cl:a a) and (cl:a :english-b nil) or whatever default value is specified.
2015-11-04T23:36:49Z k-stz quit (Remote host closed the connection)
2015-11-04T23:36:51Z cpc26_ quit (Ping timeout: 246 seconds)
2015-11-04T23:36:53Z Shinmera: supplied-p :/
2015-11-04T23:37:06Z pjb: So you'd want rather: (defun a (a &key (b nil bp)) (apply (function cl:a) a (append (when bp (list :english-b b)))))
2015-11-04T23:38:15Z phoe_krk: pjb: what about multiple keys though?
2015-11-04T23:38:16Z Bicyclidine: you could do (defun reducex (&rest args) (apply #'reduce (mapcar (lambda (a) (case a ((:key) :keyx) ((:from-end) :from-endx) ... (t a))) args))) and it would sorta work.
2015-11-04T23:39:02Z pjb: You probably don't want to translate values.
2015-11-04T23:39:31Z phoe_krk: pjb: I don't want to translate values, I want to translate keys
2015-11-04T23:39:44Z Bicyclidine: yeah, but the values are usually not keywords.
2015-11-04T23:39:52Z Bicyclidine: this is why i said "sorta".
2015-11-04T23:39:52Z pjb: But then sometimes you might want to. (open f :if-does-not-exist :supercede) -> (ouvrir f :si-inexistant :superseder)
2015-11-04T23:40:25Z cpc26 joined #lisp
2015-11-04T23:40:56Z Shinmera: So in the end a s/r for all keywords in the rest might be a good enough heuristic.
2015-11-04T23:41:25Z phoe_krk: Shinmera: sounds sane, given that the keywords in the rest very much repeat.
2015-11-04T23:41:42Z pjb: Shinmera: yes, that may be a better way to do this.
2015-11-04T23:41:42Z Shinmera: phoe_krk: Until you want to pass in an english keyword as a value.
2015-11-04T23:41:58Z pjb: Well this is only for CL functions and macros.
2015-11-04T23:42:26Z phoe_krk: Shinmera: basic stuff that explains basics of Lisp for people who don't grasp English just yet
2015-11-04T23:42:45Z Bicyclidine: honestly, in context, it might be better to just use the english names. it's not like 'lambda' or 'reduce' are very similar to their colloquial definitions (or lack thereof)
2015-11-04T23:42:52Z pjb: phoe_krk: keep the dictionary separated from the generating code, so we may localize to different languages.
2015-11-04T23:42:56Z phoe_krk: and if you want to pass in an english keyword, you could pass an eg. polish one and have it auto s/rd to an english one.
2015-11-04T23:43:02Z phoe_krk: pjb: I totally will
2015-11-04T23:43:14Z Bicyclidine: buuuuut i'm a monoglot dummy so maybe i'm wrong.
2015-11-04T23:43:21Z pjb: phoe_krk: the only thing you have to keep, is NIL, if you don't want to have to write an ugly kludge with reader macros.
2015-11-04T23:43:31Z phoe_krk: pjb: NIL stays NIL and T stays T.
2015-11-04T23:43:56Z phoe_krk: Bicyclidine: there is a distinct difference between #'apply and #'zastosuj and between #'funcall and #'wywolaj and between #'first and #'pierwszy.
2015-11-04T23:44:11Z phoe_krk: mostly for people who *don't* know English so they can't grasp Lisp because of the language barrier.
2015-11-04T23:44:11Z pjb: For true you can usually use another symbol (defconstant vrai 'vrai) would do.  Only you wouldn't pass "true" to format. but CL:T for "Terminal" :-)
2015-11-04T23:44:19Z adonis joined #lisp
2015-11-04T23:44:21Z phoe_krk: and it's not the kind of the language barrier you'd instantly think of.
2015-11-04T23:44:37Z phoe_krk: ...don't tell me the "t" in format is for Terminal
2015-11-04T23:44:42Z pjb: It does.
2015-11-04T23:44:53Z phoe_krk: daily Lisp surprise: check'
2015-11-04T23:44:58Z adonis left #lisp
2015-11-04T23:45:58Z pjb: Well, actually it's *standard-output* it seems.
2015-11-04T23:46:01Z mordocai quit (Quit: going home)
2015-11-04T23:46:35Z pjb: http://www.lispworks.com/documentation/HyperSpec/Body/22_c.htm "If destination is t, the output is sent to standard output."
2015-11-04T23:47:39Z pjb: But for PRINT etc, T is a designator for *terminal-io*.
2015-11-04T23:47:43Z pjb: http://www.lispworks.com/documentation/HyperSpec/Body/26_glo_s.htm#stream_designator
2015-11-04T23:47:53Z phoe_krk: Got it.
2015-11-04T23:48:32Z phoe_krk: my head just imagined an infinite macroexpand recursion
2015-11-04T23:49:25Z pjb: (let ((*standard-output* (make-broadcast-stream))) (format T "To the bin.") (princ "To the terminal" T))
2015-11-04T23:50:25Z phoe_krk: "Now, let's see if you can print things in Lisp without using format."
2015-11-04T23:50:51Z pjb: So, how do you translate car cdr caar cadr etc?
2015-11-04T23:50:52Z johann_ joined #lisp
2015-11-04T23:51:44Z phoe_krk: I translate first second third rest last for sure.
2015-11-04T23:53:14Z stepnem quit (Ping timeout: 268 seconds)
2015-11-04T23:53:23Z phoe_krk: cWXYZr I think I'll translate as para-WXYZ, where para means pair and A/D will be translated to L/P.
2015-11-04T23:53:30Z phoe_krk: lewo/prawo = left/right.
2015-11-04T23:53:39Z phoe_krk: With the box notation, I hope it will be easy enough.
2015-11-04T23:54:42Z Bicyclidine: those don't mean anything in english either, why not stick with them.
2015-11-04T23:54:43Z ebrasca joined #lisp
2015-11-04T23:54:46Z phoe_krk: and I'll try to capitalize the L/P wherever possible for clarity, mostly in handwritten code.
2015-11-04T23:55:03Z MrWoohoo joined #lisp
2015-11-04T23:55:11Z fiddlerwoaroof: How much work would it take to run ECL as a kernel module?
2015-11-04T23:55:12Z MrWoohoo2 joined #lisp
2015-11-04T23:55:26Z phoe_krk: jackdaniel: a challenger appears
2015-11-04T23:55:41Z Bicyclidine: that sounds dangerous, to say the least...
2015-11-04T23:55:58Z johann_ quit (Ping timeout: 265 seconds)
2015-11-04T23:56:04Z phoe_krk: Bicyclidine: to someone who isn't a programmer or lisper, I'd actually make a translation to something that points towards a pair.
2015-11-04T23:56:08Z fiddlerwoaroof: Well, if you wanted a easy way to experiment with device drivers . . .
2015-11-04T23:56:16Z phoe_krk: since a pair is also a fundamental lisp object.
2015-11-04T23:56:21Z fiddlerwoaroof: Just think, you could run swank insider the Linux kernel :)
2015-11-04T23:56:28Z shookees quit (Ping timeout: 272 seconds)
2015-11-04T23:56:29Z Bicyclidine: i mean, we call them conses, is all
2015-11-04T23:56:41Z phoe_krk: Bicyclidine: precisely, and I'll call them "pary"
2015-11-04T23:56:48Z fiddlerwoaroof: . . . at a coffee shop over an insecure connection :)
2015-11-04T23:56:49Z phoe_krk: (cons 1 2) = (para 1 2)
2015-11-04T23:57:02Z phoe_krk: (para-L (para 3 4)) => 3, obviously
2015-11-04T23:57:16Z phoe_krk: cdr car cons vs para-P para-L para
2015-11-04T23:57:22Z Bicyclidine: but we do fine with these meaningless words, because we learn what they mean in a lisp context. is all.
2015-11-04T23:57:38Z phoe_krk: Bicyclidine: yes, you do fine. I don't translate this for lispers.
2015-11-04T23:57:49Z phoe_krk: Bicyclidine: you're not my target audience. :P
2015-11-04T23:57:56Z Bicyclidine: when i was learning, to
2015-11-04T23:57:57Z Bicyclidine: too*
2015-11-04T23:59:53Z Shinmera quit (Quit: しつれいしなければならないんです。)
2015-11-05T00:00:02Z phoe_krk: Bicyclidine: here is where I'd bend a language towards the learners instead of the other way around
2015-11-05T00:00:07Z phoe_krk: anyway it's 1 AM for me, night everyone
2015-11-05T00:00:11Z phoe_krk: see you later
2015-11-05T00:01:03Z pjb: fiddlerwoaroof: there's also another way to deal with it: run the linux kernel INSIDE ecl.  Something like this was done with sbcl and usb drivers. (I'm thinking about user-mode-linux here, you already have half the job done).
2015-11-05T00:01:25Z nyef: What's this about SBCL and USB drivers?
2015-11-05T00:01:49Z pjb: The doing evil things with lisp paper.
2015-11-05T00:02:03Z tmtwd joined #lisp
2015-11-05T00:02:04Z nyef: ... not ringing a bell, unfortunately.
2015-11-05T00:02:09Z pjb: http://www.xach.com/lisp/lispvan-2008-02-28.pdf
2015-11-05T00:02:22Z Bicyclidine quit (Ping timeout: 260 seconds)
2015-11-05T00:05:22Z EvW joined #lisp
2015-11-05T00:05:38Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T00:05:46Z Bicyclidine joined #lisp
2015-11-05T00:06:58Z fiddlerwoaroof: Hmm, that wouldn
2015-11-05T00:07:04Z fiddlerwoaroof: 't get lisp any closer to the metal
2015-11-05T00:08:02Z heddwch joined #lisp
2015-11-05T00:08:11Z fiddlerwoaroof: But it would be interesting, especially for reverse-engineering things.
2015-11-05T00:23:53Z mordocai joined #lisp
2015-11-05T00:24:58Z scymtym_ quit (Ping timeout: 272 seconds)
2015-11-05T00:27:50Z Nikotiini quit (Remote host closed the connection)
2015-11-05T00:31:18Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T00:32:25Z Niac joined #lisp
2015-11-05T00:34:59Z treaki quit (Ping timeout: 250 seconds)
2015-11-05T00:38:13Z cpc26_ joined #lisp
2015-11-05T00:38:38Z Yuuhi quit (Remote host closed the connection)
2015-11-05T00:38:48Z cpc26 quit (Ping timeout: 246 seconds)
2015-11-05T00:38:57Z axion quit (Quit: WeeChat 1.3)
2015-11-05T00:39:23Z axion joined #lisp
2015-11-05T00:39:25Z axion quit (Client Quit)
2015-11-05T00:40:55Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T00:42:37Z DynamicMetaFlow joined #lisp
2015-11-05T00:44:10Z axion joined #lisp
2015-11-05T00:45:54Z treaki joined #lisp
2015-11-05T00:46:47Z zygentoma quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2015-11-05T00:51:36Z johann_ joined #lisp
2015-11-05T00:51:47Z heddwch joined #lisp
2015-11-05T00:52:57Z remi`bd quit (Quit: leaving)
2015-11-05T00:53:05Z jason_m joined #lisp
2015-11-05T00:54:02Z harish quit (Ping timeout: 260 seconds)
2015-11-05T00:56:23Z johann_ quit (Ping timeout: 265 seconds)
2015-11-05T00:57:58Z aiwaz joined #lisp
2015-11-05T00:58:05Z Bicyclidine quit (Quit: di)
2015-11-05T00:59:17Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T00:59:42Z heddwch joined #lisp
2015-11-05T01:02:52Z tsoutseki quit (Quit: Leaving)
2015-11-05T01:02:55Z CharlesN joined #lisp
2015-11-05T01:04:36Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T01:08:53Z jleija joined #lisp
2015-11-05T01:10:44Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-05T01:15:29Z jleija quit (Quit: leaving)
2015-11-05T01:15:35Z lispyone joined #lisp
2015-11-05T01:15:46Z jleija joined #lisp
2015-11-05T01:16:27Z maracuja joined #lisp
2015-11-05T01:17:31Z quasus quit (Ping timeout: 252 seconds)
2015-11-05T01:17:57Z bb010g joined #lisp
2015-11-05T01:19:12Z MaggieAndEazar quit (Quit: Connection closed for inactivity)
2015-11-05T01:20:06Z lispyone quit (Ping timeout: 246 seconds)
2015-11-05T01:22:22Z axion quit (Quit: WeeChat 1.3)
2015-11-05T01:22:32Z axion joined #lisp
2015-11-05T01:23:25Z gigetoo joined #lisp
2015-11-05T01:26:32Z briantrice quit (Quit: briantrice)
2015-11-05T01:28:02Z fiddlerwoaroof wonders how much ping traffic 8.8.8.8 gets
2015-11-05T01:28:10Z heddwch joined #lisp
2015-11-05T01:28:30Z cyphase quit (Ping timeout: 246 seconds)
2015-11-05T01:30:51Z ekinmur joined #lisp
2015-11-05T01:32:20Z cyphase joined #lisp
2015-11-05T01:34:59Z jason_m quit (Ping timeout: 268 seconds)
2015-11-05T01:37:57Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T01:39:39Z heddwch joined #lisp
2015-11-05T01:41:58Z lispyone joined #lisp
2015-11-05T01:42:09Z mordocai: fiddlerwoaroof: a lot
2015-11-05T01:44:14Z maracuja quit (Quit: WeeChat 1.3)
2015-11-05T01:44:53Z maracuja joined #lisp
2015-11-05T01:47:56Z cpc26 joined #lisp
2015-11-05T01:48:33Z cpc26_ quit (Ping timeout: 255 seconds)
2015-11-05T01:48:49Z FreeBirdLjj joined #lisp
2015-11-05T01:48:57Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-05T01:49:30Z FreeBirdLjj joined #lisp
2015-11-05T01:49:33Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T01:50:26Z Niac quit (Ping timeout: 240 seconds)
2015-11-05T01:51:23Z briantrice joined #lisp
2015-11-05T01:51:51Z heddwch joined #lisp
2015-11-05T01:52:24Z johann_ joined #lisp
2015-11-05T01:53:19Z Niac joined #lisp
2015-11-05T01:56:10Z Petit_Dejeuner joined #lisp
2015-11-05T01:56:24Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T01:56:53Z harish joined #lisp
2015-11-05T01:57:02Z johann_ quit (Ping timeout: 260 seconds)
2015-11-05T02:01:55Z eschatologist joined #lisp
2015-11-05T02:02:06Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-05T02:08:26Z EvW1 joined #lisp
2015-11-05T02:09:48Z EvW quit (Ping timeout: 246 seconds)
2015-11-05T02:09:49Z EvW1 is now known as EvW
2015-11-05T02:12:33Z ft_ joined #lisp
2015-11-05T02:14:10Z ft quit (Remote host closed the connection)
2015-11-05T02:14:15Z ft_ is now known as ft
2015-11-05T02:14:41Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T02:19:12Z userm joined #lisp
2015-11-05T02:19:48Z heddwch joined #lisp
2015-11-05T02:20:18Z userm_ joined #lisp
2015-11-05T02:21:22Z userm quit (Read error: Connection reset by peer)
2015-11-05T02:21:28Z userm_ is now known as userm
2015-11-05T02:22:59Z briantrice quit (Quit: briantrice)
2015-11-05T02:28:23Z briantrice joined #lisp
2015-11-05T02:29:35Z maracuja quit (Quit: WeeChat 1.3)
2015-11-05T02:30:05Z maracuja joined #lisp
2015-11-05T02:31:40Z zacharias_ joined #lisp
2015-11-05T02:31:57Z harish quit (Ping timeout: 252 seconds)
2015-11-05T02:33:10Z Xach is pleased to have had his lisp-powered website make the local radio station
2015-11-05T02:34:17Z dwchandler: :)
2015-11-05T02:34:58Z zacharias quit (Ping timeout: 260 seconds)
2015-11-05T02:35:03Z Xach: http://wjbq.com/ is it
2015-11-05T02:35:16Z Xach: made with hunchentoot, funweb, and vecto
2015-11-05T02:38:50Z dTal: did they announce that
2015-11-05T02:39:11Z EvW quit (Ping timeout: 264 seconds)
2015-11-05T02:39:19Z dTal: they should have
2015-11-05T02:39:20Z dTal: it's good radio
2015-11-05T02:40:13Z aap_ joined #lisp
2015-11-05T02:41:08Z newcup: pardon my ignorance, but what is funweb? quick googling only points to some adware stuff
2015-11-05T02:43:27Z aap quit (Ping timeout: 255 seconds)
2015-11-05T02:45:16Z briantrice quit (Quit: briantrice)
2015-11-05T02:49:00Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T02:49:55Z cmoney joined #lisp
2015-11-05T02:51:11Z leafybas_ quit (Remote host closed the connection)
2015-11-05T02:51:52Z leafybas_ joined #lisp
2015-11-05T02:52:12Z heddwch joined #lisp
2015-11-05T02:53:07Z johann_ joined #lisp
2015-11-05T02:55:07Z XachX: Funweb is not out
2015-11-05T02:55:10Z XachX: Sorry.
2015-11-05T02:56:13Z dwchandler: sekrit
2015-11-05T02:56:18Z leafybas_ quit (Ping timeout: 244 seconds)
2015-11-05T02:57:10Z johann_ quit (Ping timeout: 240 seconds)
2015-11-05T03:00:59Z vydd quit (Ping timeout: 240 seconds)
2015-11-05T03:02:19Z newcup: I see. I was afraid I had missed some essential cl web framework :)
2015-11-05T03:03:01Z Raimondi quit (Ping timeout: 265 seconds)
2015-11-05T03:04:24Z fitzsim quit (Ping timeout: 246 seconds)
2015-11-05T03:04:59Z aiwaz is now known as pid0
2015-11-05T03:05:59Z cyphase quit (Ping timeout: 240 seconds)
2015-11-05T03:06:16Z Raimondi joined #lisp
2015-11-05T03:06:43Z pid0 is now known as apep
2015-11-05T03:07:27Z kaleun joined #lisp
2015-11-05T03:07:55Z maracuja quit (Quit: WeeChat 1.3)
2015-11-05T03:13:49Z fitzsim joined #lisp
2015-11-05T03:14:08Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T03:16:24Z tristero quit (Quit: tristero)
2015-11-05T03:16:26Z heddwch joined #lisp
2015-11-05T03:16:48Z apep is now known as aiwaz
2015-11-05T03:18:50Z harish joined #lisp
2015-11-05T03:27:48Z briantrice joined #lisp
2015-11-05T03:31:31Z kp666_ joined #lisp
2015-11-05T03:32:22Z loke quit (Remote host closed the connection)
2015-11-05T03:32:46Z sdothum quit (Read error: Connection reset by peer)
2015-11-05T03:34:24Z loke joined #lisp
2015-11-05T03:35:46Z sdothum joined #lisp
2015-11-05T03:37:22Z briantrice quit (Quit: briantrice)
2015-11-05T03:46:19Z holycow joined #lisp
2015-11-05T03:47:02Z holycow: dim, i ran into an irc post of your online about you wanting to write a game to teach lisp programming.  just curious if you ever did anything with that?
2015-11-05T03:47:58Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T03:49:10Z MrWoohoo quit (Read error: No route to host)
2015-11-05T03:49:10Z MrWoohoo2 quit (Read error: No route to host)
2015-11-05T03:51:09Z impulse quit (Ping timeout: 252 seconds)
2015-11-05T03:51:11Z briantrice joined #lisp
2015-11-05T03:53:01Z impulse joined #lisp
2015-11-05T03:53:50Z johann_ joined #lisp
2015-11-05T03:54:09Z mbuf joined #lisp
2015-11-05T03:54:41Z harish quit (Ping timeout: 244 seconds)
2015-11-05T03:57:21Z vydd joined #lisp
2015-11-05T03:59:02Z johann_ quit (Ping timeout: 272 seconds)
2015-11-05T04:01:34Z ajf- quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T04:03:25Z vydd quit (Ping timeout: 250 seconds)
2015-11-05T04:04:59Z briantrice quit (Quit: briantrice)
2015-11-05T04:05:36Z jleija quit (Quit: leaving)
2015-11-05T04:05:48Z briantrice joined #lisp
2015-11-05T04:07:22Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T04:07:47Z eschatologist quit (Quit: Textual IRC Client: www.textualapp.com)
2015-11-05T04:13:45Z heddwch joined #lisp
2015-11-05T04:15:18Z userm quit (Ping timeout: 260 seconds)
2015-11-05T04:18:30Z briantrice quit (Quit: briantrice)
2015-11-05T04:18:59Z cpc26 quit (Ping timeout: 240 seconds)
2015-11-05T04:19:41Z cmoney quit (Remote host closed the connection)
2015-11-05T04:20:36Z cmoney joined #lisp
2015-11-05T04:21:09Z ebrasca quit (Read error: Connection reset by peer)
2015-11-05T04:22:28Z beach joined #lisp
2015-11-05T04:22:37Z beach: Good morning everyone!
2015-11-05T04:22:48Z foom quit (Ping timeout: 246 seconds)
2015-11-05T04:23:00Z holycow: hi beach
2015-11-05T04:23:20Z ebrasca joined #lisp
2015-11-05T04:23:22Z treaki_ joined #lisp
2015-11-05T04:24:13Z cmoney quit (Remote host closed the connection)
2015-11-05T04:24:34Z nyef: Hello beach.
2015-11-05T04:26:30Z blubjr: hi beach
2015-11-05T04:26:39Z treaki quit (Ping timeout: 240 seconds)
2015-11-05T04:26:52Z cpc26 joined #lisp
2015-11-05T04:29:35Z trebor_home quit (Ping timeout: 264 seconds)
2015-11-05T04:29:43Z aiwaz is now known as javalava
2015-11-05T04:30:10Z nyef: ... and G'night.
2015-11-05T04:33:48Z Lord_Nightmare: nyef: any further progress ever happened on nevermore, etc?
2015-11-05T04:35:59Z cosmicexplorer joined #lisp
2015-11-05T04:36:10Z foom joined #lisp
2015-11-05T04:36:57Z lispyone quit (Remote host closed the connection)
2015-11-05T04:39:08Z ebrasca quit (Remote host closed the connection)
2015-11-05T04:43:33Z cmoney joined #lisp
2015-11-05T04:45:27Z MrWoohoo joined #lisp
2015-11-05T04:46:41Z kaleun quit (Quit: Leaving)
2015-11-05T04:46:54Z johann_ joined #lisp
2015-11-05T04:50:57Z smokeink joined #lisp
2015-11-05T04:51:52Z cmoney quit
2015-11-05T04:52:12Z cmoney joined #lisp
2015-11-05T04:55:00Z cmoney quit (Client Quit)
2015-11-05T04:55:22Z cmoney joined #lisp
2015-11-05T04:56:08Z cmoney quit (Client Quit)
2015-11-05T04:56:24Z cosmicexplorer quit (Ping timeout: 246 seconds)
2015-11-05T04:59:12Z vydd joined #lisp
2015-11-05T05:03:01Z OrangeShark quit (Quit: Leaving)
2015-11-05T05:03:52Z cmoney joined #lisp
2015-11-05T05:04:16Z vydd quit (Ping timeout: 272 seconds)
2015-11-05T05:05:12Z cyphase joined #lisp
2015-11-05T05:05:18Z Draz joined #lisp
2015-11-05T05:09:28Z cosmicexplorer joined #lisp
2015-11-05T05:12:08Z cmoney quit (Changing host)
2015-11-05T05:12:08Z cmoney joined #lisp
2015-11-05T05:14:52Z malbertife joined #lisp
2015-11-05T05:16:06Z cmoney quit
2015-11-05T05:16:24Z cmoneylulz joined #lisp
2015-11-05T05:16:59Z cmoneylulz quit (Remote host closed the connection)
2015-11-05T05:28:57Z tmtwd quit (Ping timeout: 246 seconds)
2015-11-05T05:31:31Z oleo quit (Quit: Verlassend)
2015-11-05T05:35:54Z cosmicexplorer quit (Quit: ERC (IRC client for Emacs 25.0.50.2))
2015-11-05T05:40:03Z mishoo_ joined #lisp
2015-11-05T05:40:51Z josteink quit (Remote host closed the connection)
2015-11-05T05:46:12Z drmeister: Hi beach
2015-11-05T05:47:28Z beach: drmeister: How did the talk go?
2015-11-05T05:47:42Z loke: Hello drmeister
2015-11-05T05:48:07Z drmeister: Well I think.  The live demo went pretty well, SLDB only came up once.
2015-11-05T05:48:25Z drmeister: Hi loke
2015-11-05T05:48:38Z beach: drmeister: Congratulations!
2015-11-05T05:48:39Z loke: drmeister: Any news when it comes to clasp compilation?
2015-11-05T05:49:07Z sdothum quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-11-05T05:49:09Z drmeister: It's a group of about 30 computational chemistry graduate students and post-docs.  I was showing them Cando  and some of what it can do.
2015-11-05T05:49:58Z beach: That's a fairly decent crowd.
2015-11-05T05:50:29Z badkins quit (Remote host closed the connection)
2015-11-05T05:50:41Z drmeister: loke: I don't recall where we left things but I've ported Clasp to LLVM3.7 (I think you knew that).  I haven't fixed the include paths yet. I'll get back on it in the next couple of days.
2015-11-05T05:51:08Z loke: drmeister: still the same git branch?
2015-11-05T05:51:31Z drmeister: Yes.
2015-11-05T05:51:39Z drmeister: beach: I took them through this demo:
2015-11-05T05:51:42Z drmeister: https://www.irccloud.com/pastebin/244pBVUv/
2015-11-05T05:52:00Z drmeister: It builds a complex molecule using a combination of three different approaches.
2015-11-05T05:52:49Z beach: Nice!
2015-11-05T05:53:32Z drmeister: Yeah, the cclasp compiler is really peppy now.  It takes about 1-2 seconds to compile a typical form in slime.
2015-11-05T05:53:33Z beach: Did they know to expect all the parentheses?
2015-11-05T05:53:51Z beach: I guess they are way too polite to say anything about them anyway, huh?
2015-11-05T05:53:52Z drmeister: I just rolled past that.
2015-11-05T05:54:35Z drmeister: I said "In this day and age of Javascript, PHP, Perl, R - nobody can criticize the syntax of a language anymore".
2015-11-05T05:55:03Z beach: Heh!  Good one.
2015-11-05T05:55:43Z loke: I never had anything to do with the parens
2015-11-05T05:56:05Z loke: The fact that Clojure is popular proves that. It's a worst-of-both-worlds chimera of a language.
2015-11-05T05:56:34Z drmeister: There you go, Clojure is another example.
2015-11-05T05:56:36Z loke: drmeister: The error I'm getting now with the latest version:
2015-11-05T05:56:37Z loke: In file included from ../../src/asttooling/clangTooling.cc:62:
2015-11-05T05:56:37Z loke: ../../include/clasp/llvmo/llvmoExpose.h:49:10: fatal error: 'llvm/PassManager.h' file not found
2015-11-05T05:57:02Z drmeister: Yeah, PassManager.h moved.
2015-11-05T05:57:05Z kobain quit (Ping timeout: 268 seconds)
2015-11-05T05:57:10Z ramky joined #lisp
2015-11-05T05:59:31Z loke: drmeister: To where?
2015-11-05T06:00:00Z loke: should I juts symlink Passmaanger.h to ..?
2015-11-05T06:00:12Z vydd joined #lisp
2015-11-05T06:00:23Z drmeister: loke: I just merged the latest changes from "dev" (llvm3.6) into "dev_37" (llvm3.7) and I'll try building it and see if I can fix that.
2015-11-05T06:00:47Z drmeister: I think it moved to llvm/IR/PassManager.h
2015-11-05T06:00:58Z javalava is now known as eyehatejava
2015-11-05T06:01:04Z loke: Yeah, I tried changing that but then I got lots of other errors.
2015-11-05T06:01:16Z drmeister: Yes, that's where it moved to.
2015-11-05T06:01:27Z drmeister: I'll try building it overnight and see if I can clean it up.
2015-11-05T06:01:59Z loke: OK, it seems as though not only did the file move, its namespace also mvoed.
2015-11-05T06:03:09Z trebor_home joined #lisp
2015-11-05T06:03:38Z drmeister: Yeah - and that's stuff that I'll have to mess with.  I've upgraded clasp to different version of llvm since before 3.0.  It's always painful.
2015-11-05T06:03:50Z drmeister: That's what it's like on the bleadin' edge.
2015-11-05T06:04:02Z beach: Hence "welcome to my world".
2015-11-05T06:04:11Z loke: drmeister: Sounds like llvm really isn't stable and mature yet?
2015-11-05T06:04:31Z White_Flame: llvm is a moving target
2015-11-05T06:04:45Z drmeister: It's the basis of Clang and that's the basis of a lot of technologies.
2015-11-05T06:04:53Z vydd quit (Ping timeout: 244 seconds)
2015-11-05T06:05:01Z drmeister: It's under very active development at Google, Apple and Sony among others.
2015-11-05T06:05:01Z loke: So why isn't it mature then?
2015-11-05T06:05:02Z rvb joined #lisp
2015-11-05T06:05:48Z drmeister: They are advancing the technology and concerns like "users" and "backwards compatibility" are quaint and amusing to them.
2015-11-05T06:05:56Z JuanDaugherty: funweb is not only "not out" but "under wraps"?
2015-11-05T06:06:17Z loke: what is funweb?
2015-11-05T06:06:19Z kushal joined #lisp
2015-11-05T06:06:19Z drmeister: loke: It is mature - and getting more mature all the time :-)
2015-11-05T06:06:49Z loke heads out for lunch
2015-11-05T06:07:03Z JuanDaugherty: loke, just before you entered in log
2015-11-05T06:07:32Z pt1 joined #lisp
2015-11-05T06:07:57Z loke: Hmm
2015-11-05T06:08:01Z loke: Funweb seems to be a virus
2015-11-05T06:08:23Z loke: http://www.pandasecurity.com/homeusers/security-info/44952/information/FunWeb
2015-11-05T06:09:17Z Draz quit (Quit: Leaving)
2015-11-05T06:09:20Z JuanDaugherty: i meant the term as it was used in this channel before you entered
2015-11-05T06:11:03Z pyon joined #lisp
2015-11-05T06:13:06Z johs joined #lisp
2015-11-05T06:13:39Z lisse joined #lisp
2015-11-05T06:18:24Z josteink joined #lisp
2015-11-05T06:22:53Z vlatkoB joined #lisp
2015-11-05T06:26:21Z malbertife quit (Quit: Leaving)
2015-11-05T06:26:46Z netrobyatmobile joined #lisp
2015-11-05T06:26:57Z malbertife joined #lisp
2015-11-05T06:31:00Z mordocai quit (Quit: sleep)
2015-11-05T06:33:10Z drmeister: loke: I fixed all the include paths for PassManager.h but there are some other things missing that I need to update for llvm37 that reveal themselves.   I'll try running the static analyzer tomorrow and update everything.  I say "try" because I'm having trouble with include paths for the static analyzer as well.
2015-11-05T06:35:26Z beach left #lisp
2015-11-05T06:37:28Z phoe_krk quit (Quit: phoe_krk)
2015-11-05T06:46:11Z Harag joined #lisp
2015-11-05T06:46:47Z trebor_home quit (Ping timeout: 252 seconds)
2015-11-05T06:49:14Z pt1 quit (Remote host closed the connection)
2015-11-05T06:55:19Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-05T06:57:38Z shookees joined #lisp
2015-11-05T06:59:52Z mikaelj joined #lisp
2015-11-05T07:00:47Z vydd joined #lisp
2015-11-05T07:02:45Z rvb left #lisp
2015-11-05T07:02:46Z Shinmera joined #lisp
2015-11-05T07:04:12Z mrSpec joined #lisp
2015-11-05T07:04:46Z shookees quit (Ping timeout: 240 seconds)
2015-11-05T07:05:08Z schaueho joined #lisp
2015-11-05T07:05:10Z vydd quit (Ping timeout: 240 seconds)
2015-11-05T07:05:40Z mac_ified quit
2015-11-05T07:08:30Z jackdaniel: fiddlerwoaroof: actually I plan to write a proof of concept device driver for minix
2015-11-05T07:08:36Z jackdaniel: because it's more userspace
2015-11-05T07:08:37Z johs quit (Ping timeout: 268 seconds)
2015-11-05T07:09:29Z jackdaniel: regarding modules it would take a bit since you'll have to statically link everything (libc included) and modify some system interfaces (no printf for instance)
2015-11-05T07:11:18Z johs joined #lisp
2015-11-05T07:16:41Z lemoinem quit (Ping timeout: 250 seconds)
2015-11-05T07:17:26Z shookees joined #lisp
2015-11-05T07:20:08Z tralala joined #lisp
2015-11-05T07:20:38Z DynamicMetaFlow quit (Ping timeout: 265 seconds)
2015-11-05T07:21:10Z Mon_Ouie quit (Ping timeout: 240 seconds)
2015-11-05T07:21:12Z johann_ quit (Remote host closed the connection)
2015-11-05T07:24:34Z lemoinem joined #lisp
2015-11-05T07:26:37Z aap_ is now known as aap
2015-11-05T07:27:02Z ASau quit (Ping timeout: 244 seconds)
2015-11-05T07:28:19Z cadadar joined #lisp
2015-11-05T07:29:19Z pt1 joined #lisp
2015-11-05T07:30:56Z dstatyvka left #lisp
2015-11-05T07:32:59Z treaki_ quit (Ping timeout: 252 seconds)
2015-11-05T07:34:08Z flambard joined #lisp
2015-11-05T07:34:57Z sepi quit (Read error: Connection reset by peer)
2015-11-05T07:34:59Z rotty quit (Ping timeout: 264 seconds)
2015-11-05T07:35:08Z sepi joined #lisp
2015-11-05T07:35:29Z Whymind quit (Read error: Connection reset by peer)
2015-11-05T07:35:40Z Whymind joined #lisp
2015-11-05T07:35:40Z cmpitg joined #lisp
2015-11-05T07:39:01Z yeticry quit (Read error: Connection reset by peer)
2015-11-05T07:39:26Z FreeBirdLjj quit (Ping timeout: 272 seconds)
2015-11-05T07:39:35Z yeticry joined #lisp
2015-11-05T07:43:26Z faalentijn quit (Ping timeout: 240 seconds)
2015-11-05T07:44:45Z malbertife quit (Ping timeout: 246 seconds)
2015-11-05T07:45:21Z FreeBirdLjj joined #lisp
2015-11-05T07:46:36Z reggy joined #lisp
2015-11-05T07:46:58Z holycow quit (Quit: Lost terminal)
2015-11-05T07:49:03Z Beetny joined #lisp
2015-11-05T07:53:06Z HDurer quit (Ping timeout: 240 seconds)
2015-11-05T07:53:30Z segmond quit (Ping timeout: 246 seconds)
2015-11-05T08:00:11Z quazimodo quit (Ping timeout: 264 seconds)
2015-11-05T08:01:49Z segmond joined #lisp
2015-11-05T08:01:52Z fridim_ joined #lisp
2015-11-05T08:01:59Z fridim_ quit (Remote host closed the connection)
2015-11-05T08:02:10Z HDurer joined #lisp
2015-11-05T08:03:40Z _cosmonaut_ joined #lisp
2015-11-05T08:06:11Z kami quit (Ping timeout: 264 seconds)
2015-11-05T08:07:14Z reggy quit (Remote host closed the connection)
2015-11-05T08:20:05Z zacharias_ quit (Ping timeout: 265 seconds)
2015-11-05T08:25:26Z DeadTrickster quit (Read error: No route to host)
2015-11-05T08:29:02Z shookees quit (Ping timeout: 260 seconds)
2015-11-05T08:29:03Z attila_lendvai joined #lisp
2015-11-05T08:31:13Z znpy quit (Ping timeout: 250 seconds)
2015-11-05T08:32:09Z otjura joined #lisp
2015-11-05T08:32:45Z sunwukong joined #lisp
2015-11-05T08:33:06Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-05T08:35:14Z angavrilov joined #lisp
2015-11-05T08:38:27Z loke quit (Ping timeout: 265 seconds)
2015-11-05T08:40:19Z HDurer quit (Ping timeout: 240 seconds)
2015-11-05T08:40:32Z mvilleneuve joined #lisp
2015-11-05T08:42:09Z scymtym_ joined #lisp
2015-11-05T08:45:28Z TMM quit (Quit: Ex-Chat)
2015-11-05T08:46:49Z Cymew joined #lisp
2015-11-05T08:48:24Z Yuuhi joined #lisp
2015-11-05T08:49:33Z HDurer joined #lisp
2015-11-05T08:52:10Z loke joined #lisp
2015-11-05T08:53:43Z DruidGreeneyes joined #lisp
2015-11-05T08:53:57Z _cosmona` joined #lisp
2015-11-05T08:58:06Z _cosmonaut_ quit (Ping timeout: 260 seconds)
2015-11-05T08:58:25Z pyon quit (Quit: Angels fall, all for you, heretic! Demon heart, bleed for us! (My soul is yours, Dark Master. I will fight for you.))
2015-11-05T09:00:03Z thodg joined #lisp
2015-11-05T09:01:52Z remi`bd joined #lisp
2015-11-05T09:03:18Z pyon joined #lisp
2015-11-05T09:05:49Z remi`bd: Congratulations for the new release! The features list is extremely impressive.
2015-11-05T09:08:23Z remi`bd: oops
2015-11-05T09:08:27Z remi`bd: wrong channel ><
2015-11-05T09:08:44Z knobo joined #lisp
2015-11-05T09:08:47Z jackdaniel: you mean guile?
2015-11-05T09:11:00Z remi`bd: yes
2015-11-05T09:15:23Z freehck joined #lisp
2015-11-05T09:16:55Z defaultxr quit (Quit: gnight)
2015-11-05T09:17:27Z josteink quit (Remote host closed the connection)
2015-11-05T09:21:40Z xorox90 joined #lisp
2015-11-05T09:24:03Z eyehatejava is now known as aiwaz
2015-11-05T09:24:12Z josteink joined #lisp
2015-11-05T09:24:35Z ZabaQ joined #lisp
2015-11-05T09:27:23Z TMM joined #lisp
2015-11-05T09:30:52Z Niac quit (Quit: Lost terminal)
2015-11-05T09:33:54Z shookees joined #lisp
2015-11-05T09:35:33Z przl joined #lisp
2015-11-05T09:43:08Z kushal quit (Quit: Leaving)
2015-11-05T09:44:48Z quazimodo joined #lisp
2015-11-05T09:48:55Z MaggieAndEazar joined #lisp
2015-11-05T09:50:02Z snv joined #lisp
2015-11-05T09:51:15Z faalentijn joined #lisp
2015-11-05T09:51:56Z _cosmonaut_ joined #lisp
2015-11-05T09:54:20Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T09:55:36Z leafybas_ joined #lisp
2015-11-05T09:56:10Z leafybas_ quit (Remote host closed the connection)
2015-11-05T09:56:36Z leafybas_ joined #lisp
2015-11-05T09:59:10Z cpc26_ joined #lisp
2015-11-05T09:59:19Z quazimodo quit (Ping timeout: 240 seconds)
2015-11-05T10:00:37Z cpc26 quit (Ping timeout: 265 seconds)
2015-11-05T10:02:03Z FreeBird_ joined #lisp
2015-11-05T10:02:58Z eazar001 quit (Ping timeout: 260 seconds)
2015-11-05T10:05:39Z FreeBirdLjj quit (Ping timeout: 240 seconds)
2015-11-05T10:05:39Z gigetoo quit (Ping timeout: 244 seconds)
2015-11-05T10:07:00Z FreeBird_ quit (Ping timeout: 272 seconds)
2015-11-05T10:11:34Z xrash joined #lisp
2015-11-05T10:12:05Z quazimodo joined #lisp
2015-11-05T10:13:17Z preacherAKAnd joined #lisp
2015-11-05T10:17:54Z zacharias_ joined #lisp
2015-11-05T10:19:52Z quazimodo quit (Ping timeout: 250 seconds)
2015-11-05T10:22:12Z vydd joined #lisp
2015-11-05T10:39:06Z knobo quit (Ping timeout: 255 seconds)
2015-11-05T10:40:51Z mishoo joined #lisp
2015-11-05T10:41:27Z otwieracz: Is this possible to sum values in LOOP into plist?
2015-11-05T10:41:31Z otwieracz: Something like:
2015-11-05T10:41:59Z mishoo_ quit (Ping timeout: 268 seconds)
2015-11-05T10:43:07Z otwieracz: http://paste.lisp.org/display/158544
2015-11-05T10:43:18Z otwieracz: But this, obviously, does not work.
2015-11-05T10:43:46Z Harag quit (Ping timeout: 240 seconds)
2015-11-05T10:44:42Z DeadTrickster joined #lisp
2015-11-05T10:44:49Z FreeBirdLjj joined #lisp
2015-11-05T10:44:50Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-05T10:45:07Z FreeBirdLjj joined #lisp
2015-11-05T10:45:38Z Shinmera: (loop with plist = () for x in list do (incf (getf plist x 0)) finally (return plist))
2015-11-05T10:47:14Z cadadar quit (Quit: Leaving.)
2015-11-05T10:47:26Z otwieracz: With count it will be just beautiful :)
2015-11-05T10:47:40Z ramky quit (Remote host closed the connection)
2015-11-05T10:48:28Z faalentijn quit (Ping timeout: 250 seconds)
2015-11-05T10:49:13Z danlentz_ joined #lisp
2015-11-05T10:50:22Z zacharias_ is now known as zacharias
2015-11-05T10:51:16Z harish_ joined #lisp
2015-11-05T10:52:21Z knobo joined #lisp
2015-11-05T10:53:36Z TMM quit (Remote host closed the connection)
2015-11-05T10:54:14Z znpy joined #lisp
2015-11-05T10:54:46Z TMM joined #lisp
2015-11-05T10:55:43Z emlow joined #lisp
2015-11-05T11:00:09Z shookees quit (Ping timeout: 252 seconds)
2015-11-05T11:01:53Z otwieracz: And do you see any way of optimizing this:
2015-11-05T11:01:54Z otwieracz: http://paste.lisp.org/display/158545
2015-11-05T11:02:05Z otwieracz: (I do not like nested loop under finally)
2015-11-05T11:02:06Z shookees joined #lisp
2015-11-05T11:06:54Z shookees quit (Ping timeout: 260 seconds)
2015-11-05T11:12:51Z anddam quit (Ping timeout: 255 seconds)
2015-11-05T11:13:23Z leafybas_ quit (Read error: Connection reset by peer)
2015-11-05T11:13:44Z leafybas_ joined #lisp
2015-11-05T11:14:55Z pyon quit (Quit: fix config)
2015-11-05T11:15:17Z pyon joined #lisp
2015-11-05T11:35:27Z faalentijn joined #lisp
2015-11-05T11:36:11Z s00pcan quit (Ping timeout: 260 seconds)
2015-11-05T11:37:57Z s00pcan joined #lisp
2015-11-05T11:44:58Z dkcl quit (Remote host closed the connection)
2015-11-05T11:45:22Z nyef: G'morning all
2015-11-05T11:45:29Z Shinmera: Hello nyef
2015-11-05T11:45:52Z dkcl joined #lisp
2015-11-05T11:46:59Z dlowe: phf: it was less gratuitous than you think, and the api wasn't guaranteed stable at the time.
2015-11-05T11:48:26Z znpy quit (Ping timeout: 260 seconds)
2015-11-05T11:49:10Z Beetny quit (Ping timeout: 240 seconds)
2015-11-05T11:50:24Z dkcl quit (Remote host closed the connection)
2015-11-05T11:59:12Z MaggieAndEazar quit (Quit: Connection closed for inactivity)
2015-11-05T11:59:28Z hippo joined #lisp
2015-11-05T12:02:41Z nyef: Lord_Nightmare: No, no further progress on Nevermore. There was a reason why I was building it (and exploiter before it), and I realized about fifteen minutes before it booted to Lisp (and about thirty to forty-five minutes before Meroko booted to Lisp) that that reason no longer applied. I haven't really done much with it since.
2015-11-05T12:07:00Z Nikotiini joined #lisp
2015-11-05T12:07:50Z s00pcan quit (Ping timeout: 240 seconds)
2015-11-05T12:08:20Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-05T12:08:50Z FreeBirdLjj joined #lisp
2015-11-05T12:09:48Z s00pcan joined #lisp
2015-11-05T12:15:15Z sdothum joined #lisp
2015-11-05T12:16:48Z Ethan- joined #lisp
2015-11-05T12:19:40Z yrk joined #lisp
2015-11-05T12:20:14Z yrk quit (Changing host)
2015-11-05T12:20:14Z yrk joined #lisp
2015-11-05T12:22:08Z attila_lendvai joined #lisp
2015-11-05T12:22:08Z attila_lendvai quit (Changing host)
2015-11-05T12:22:08Z attila_lendvai joined #lisp
2015-11-05T12:25:06Z sjl quit (Ping timeout: 240 seconds)
2015-11-05T12:25:41Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-05T12:27:27Z Mon_Ouie joined #lisp
2015-11-05T12:28:09Z FreeBirdLjj joined #lisp
2015-11-05T12:29:00Z knobo quit (Ping timeout: 250 seconds)
2015-11-05T12:31:13Z Karl_Dscc joined #lisp
2015-11-05T12:32:44Z tsoutseki joined #lisp
2015-11-05T12:33:05Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-05T12:33:54Z FreeBirdLjj joined #lisp
2015-11-05T12:35:13Z mbuf quit (Quit: Ex-Chat)
2015-11-05T12:36:18Z lispyone joined #lisp
2015-11-05T12:38:12Z gigetoo joined #lisp
2015-11-05T12:45:07Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-05T12:45:28Z FreeBirdLjj joined #lisp
2015-11-05T12:46:23Z gigetoo quit (Ping timeout: 264 seconds)
2015-11-05T12:49:46Z smokeink quit (Ping timeout: 240 seconds)
2015-11-05T12:50:52Z smokeink joined #lisp
2015-11-05T12:51:35Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-05T12:52:15Z anddam joined #lisp
2015-11-05T12:52:25Z FreeBirdLjj joined #lisp
2015-11-05T12:52:44Z CharlesN quit (Read error: Connection reset by peer)
2015-11-05T12:53:51Z knobo joined #lisp
2015-11-05T12:56:18Z znpy joined #lisp
2015-11-05T12:59:36Z eudoxia joined #lisp
2015-11-05T13:01:46Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-05T13:01:50Z freehck quit (Ping timeout: 240 seconds)
2015-11-05T13:03:18Z papachan is now known as papachan_
2015-11-05T13:05:36Z sjl joined #lisp
2015-11-05T13:06:33Z EvW joined #lisp
2015-11-05T13:07:00Z CharlesN joined #lisp
2015-11-05T13:07:06Z qubitnerd joined #lisp
2015-11-05T13:07:12Z lispyone quit (Remote host closed the connection)
2015-11-05T13:07:46Z gaya- joined #lisp
2015-11-05T13:08:01Z papachan joined #lisp
2015-11-05T13:11:06Z jason_m joined #lisp
2015-11-05T13:12:23Z gigetoo joined #lisp
2015-11-05T13:19:38Z shookees joined #lisp
2015-11-05T13:24:24Z badkins joined #lisp
2015-11-05T13:29:59Z hippo left #lisp
2015-11-05T13:32:30Z userm joined #lisp
2015-11-05T13:33:19Z lispyone joined #lisp
2015-11-05T13:34:11Z quazimodo joined #lisp
2015-11-05T13:39:43Z Harag joined #lisp
2015-11-05T13:41:22Z userm quit (Remote host closed the connection)
2015-11-05T13:41:45Z userm joined #lisp
2015-11-05T13:44:33Z Big_G joined #lisp
2015-11-05T13:46:49Z algae joined #lisp
2015-11-05T13:51:45Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-05T13:52:37Z znpy quit (Ping timeout: 265 seconds)
2015-11-05T13:52:50Z knobo quit (Ping timeout: 240 seconds)
2015-11-05T13:55:26Z pjb: minion: memo for holycow: have a look at: http://cliki.net/com.informatimago.hangman
2015-11-05T13:55:27Z minion: Remembered. I'll tell holycow when he/she/it next speaks.
2015-11-05T13:55:36Z FreeBirdLjj joined #lisp
2015-11-05T13:56:23Z ryu0: i've been used to using imperative loops (for, while, ...) for some time. would it be a good idea for me to try using CL functional alternatives such as map?
2015-11-05T13:57:21Z flip214: ryu0: yes. if they fit, use them.
2015-11-05T13:57:43Z ryu0: i don't know what it is fully capable of, but i'll find out in due time.
2015-11-05T13:58:12Z flip214: please note that common lisp has LOOP, and an additional library ITERATE, that provide "manual" iteration constructs for more complex cases than the MAP* functions can handle.
2015-11-05T13:58:48Z ryu0: i already thought of something. something like sed transliterate could be handled by map if the string is handled as if a list of character.
2015-11-05T14:00:02Z ryu0: flip214: i assume map can work with any kind of "stream of input", not just lists?
2015-11-05T14:00:28Z flip214: clhs map
2015-11-05T14:00:28Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/f_map.htm
2015-11-05T14:00:43Z EvW quit (Remote host closed the connection)
2015-11-05T14:00:59Z stepnem joined #lisp
2015-11-05T14:01:02Z ryu0: sequence.
2015-11-05T14:01:03Z EvW joined #lisp
2015-11-05T14:01:04Z flip214: this says "sequence", and the link below goes to "proper sequences" => "proper sequence n. a sequence which is not an improper list; that is, a vector or a proper list. "
2015-11-05T14:01:18Z flip214: so, "streams" are out.
2015-11-05T14:01:19Z pjb: ryu0: you could even invent your own high level functions!
2015-11-05T14:01:23Z FreeBirdLjj quit (Ping timeout: 264 seconds)
2015-11-05T14:01:34Z flip214: there are stream mapping functions too; but I'd suggest to look at LOOP and/or ITERATE.
2015-11-05T14:01:48Z pjb: ryu0: you should read https://www.cs.cmu.edu/~crary/819-f09/Backus78.pdf
2015-11-05T14:01:50Z ryu0: huh. k.
2015-11-05T14:02:22Z freehck joined #lisp
2015-11-05T14:02:36Z ryu0: !
2015-11-05T14:02:39Z ryu0: Pascal.
2015-11-05T14:02:47Z ryu0: or something like it.
2015-11-05T14:03:39Z flip214: I thought the wine of god is called bacchus?
2015-11-05T14:03:45Z ryu0: huh. some of this... psuedo code? looks like pascal.
2015-11-05T14:05:29Z constantinexvi quit (Ping timeout: 268 seconds)
2015-11-05T14:06:06Z ryu0: inherent defects at the most basic level? hm.
2015-11-05T14:06:44Z constantinexvi joined #lisp
2015-11-05T14:08:21Z Cymew quit (Ping timeout: 250 seconds)
2015-11-05T14:08:22Z ryu0: flip214: sorry if my questions seem stupid, i'm curious to know details my book hasn't yet covered. :p
2015-11-05T14:08:36Z userm quit (Quit: ChatZilla 0.9.92 [Firefox 41.0.2/20151014143721])
2015-11-05T14:08:37Z gaya- quit (Read error: Connection reset by peer)
2015-11-05T14:08:42Z ryu0: i guess i just need to be more patient.
2015-11-05T14:08:48Z gaya- joined #lisp
2015-11-05T14:08:49Z redeemed joined #lisp
2015-11-05T14:10:22Z xrash quit (Remote host closed the connection)
2015-11-05T14:10:38Z xrash joined #lisp
2015-11-05T14:11:26Z johann_ joined #lisp
2015-11-05T14:12:11Z kobain joined #lisp
2015-11-05T14:13:59Z faalentijn quit (Read error: Connection reset by peer)
2015-11-05T14:15:01Z Cymew joined #lisp
2015-11-05T14:15:09Z FreeBirdLjj joined #lisp
2015-11-05T14:16:12Z Walex joined #lisp
2015-11-05T14:16:26Z quazimod1 joined #lisp
2015-11-05T14:17:03Z jason_m quit (Ping timeout: 252 seconds)
2015-11-05T14:18:23Z s00pcan quit (Remote host closed the connection)
2015-11-05T14:18:42Z s00pcan joined #lisp
2015-11-05T14:18:59Z ekinmur joined #lisp
2015-11-05T14:18:59Z quazimodo quit (Ping timeout: 240 seconds)
2015-11-05T14:21:51Z yvm quit (Ping timeout: 255 seconds)
2015-11-05T14:23:37Z grouzen joined #lisp
2015-11-05T14:23:39Z shookees quit (Ping timeout: 240 seconds)
2015-11-05T14:23:46Z kp666_ quit (Remote host closed the connection)
2015-11-05T14:25:00Z heddwch joined #lisp
2015-11-05T14:28:18Z qubitnerd quit (Ping timeout: 268 seconds)
2015-11-05T14:30:01Z przl quit (Ping timeout: 250 seconds)
2015-11-05T14:30:27Z CharlesN quit (Ping timeout: 250 seconds)
2015-11-05T14:31:16Z FreeBird_ joined #lisp
2015-11-05T14:32:19Z FreeBirdLjj quit (Ping timeout: 240 seconds)
2015-11-05T14:34:33Z Ethan- quit (Remote host closed the connection)
2015-11-05T14:34:56Z warweasle joined #lisp
2015-11-05T14:37:02Z shookees joined #lisp
2015-11-05T14:37:11Z tmtwd joined #lisp
2015-11-05T14:37:53Z johann_ quit (Remote host closed the connection)
2015-11-05T14:38:19Z EvW quit (Ping timeout: 240 seconds)
2015-11-05T14:38:37Z myrkraverk quit (Remote host closed the connection)
2015-11-05T14:39:09Z snv1 joined #lisp
2015-11-05T14:39:09Z snv quit (Read error: Connection reset by peer)
2015-11-05T14:41:21Z DruidGreeneyes quit (Ping timeout: 246 seconds)
2015-11-05T14:41:43Z vsync- quit (Ping timeout: 250 seconds)
2015-11-05T14:42:23Z OrangeShark joined #lisp
2015-11-05T14:43:01Z diginet quit (Ping timeout: 250 seconds)
2015-11-05T14:43:02Z White_Flame quit (Remote host closed the connection)
2015-11-05T14:43:07Z ben_vulpes quit (Remote host closed the connection)
2015-11-05T14:43:08Z CharlesN joined #lisp
2015-11-05T14:43:28Z eMBee quit (Ping timeout: 255 seconds)
2015-11-05T14:43:49Z vsync_ joined #lisp
2015-11-05T14:43:53Z redline6561 quit (Ping timeout: 250 seconds)
2015-11-05T14:44:03Z ben_vulpes joined #lisp
2015-11-05T14:44:47Z bgs100 quit (Ping timeout: 250 seconds)
2015-11-05T14:44:47Z stokachu quit (Ping timeout: 250 seconds)
2015-11-05T14:45:12Z low-prof1 quit (Ping timeout: 250 seconds)
2015-11-05T14:45:27Z EvW joined #lisp
2015-11-05T14:45:37Z rtra quit (Ping timeout: 250 seconds)
2015-11-05T14:45:37Z salva quit (Ping timeout: 250 seconds)
2015-11-05T14:45:37Z ramus_ quit (Ping timeout: 250 seconds)
2015-11-05T14:45:47Z White_Flame joined #lisp
2015-11-05T14:45:50Z tetheno quit (Quit: Oh, jolly good show!)
2015-11-05T14:45:52Z specbot quit (Remote host closed the connection)
2015-11-05T14:46:00Z specbot joined #lisp
2015-11-05T14:46:09Z gigetoo quit (Ping timeout: 255 seconds)
2015-11-05T14:46:29Z papachan quit (Ping timeout: 250 seconds)
2015-11-05T14:46:29Z anachrom1 quit (Ping timeout: 250 seconds)
2015-11-05T14:46:39Z ramus joined #lisp
2015-11-05T14:47:03Z diginet joined #lisp
2015-11-05T14:47:09Z anachrome joined #lisp
2015-11-05T14:47:17Z salva joined #lisp
2015-11-05T14:47:41Z eudoxia quit (Quit: Leaving)
2015-11-05T14:48:34Z redline6561 joined #lisp
2015-11-05T14:49:25Z stokachu joined #lisp
2015-11-05T14:50:15Z rtra joined #lisp
2015-11-05T14:52:12Z johann_ joined #lisp
2015-11-05T14:56:22Z eMBee joined #lisp
2015-11-05T15:02:08Z ajf- joined #lisp
2015-11-05T15:02:08Z ajf- quit (Client Quit)
2015-11-05T15:02:30Z Mon_Ouie quit (Ping timeout: 240 seconds)
2015-11-05T15:05:18Z Cymew quit (Ping timeout: 272 seconds)
2015-11-05T15:06:46Z rtra quit (Ping timeout: 260 seconds)
2015-11-05T15:08:48Z rtra joined #lisp
2015-11-05T15:10:19Z arpunk quit (Ping timeout: 250 seconds)
2015-11-05T15:11:37Z arpunk joined #lisp
2015-11-05T15:11:40Z bgs100 joined #lisp
2015-11-05T15:16:25Z lisse joined #lisp
2015-11-05T15:21:13Z mordocai joined #lisp
2015-11-05T15:23:50Z ebrasca joined #lisp
2015-11-05T15:24:33Z tetheno joined #lisp
2015-11-05T15:26:56Z przl joined #lisp
2015-11-05T15:29:04Z papachan joined #lisp
2015-11-05T15:32:52Z oleo joined #lisp
2015-11-05T15:32:52Z oleo quit (Changing host)
2015-11-05T15:32:52Z oleo joined #lisp
2015-11-05T15:36:03Z przl quit (Ping timeout: 265 seconds)
2015-11-05T15:38:39Z NeverDie quit (Quit: http://radiux.io/)
2015-11-05T15:43:12Z tralala quit (Quit: out)
2015-11-05T15:43:37Z _sjs quit (Ping timeout: 252 seconds)
2015-11-05T15:43:58Z kushal joined #lisp
2015-11-05T15:43:59Z EvW quit (Ping timeout: 264 seconds)
2015-11-05T15:44:14Z pt1 quit (Remote host closed the connection)
2015-11-05T15:44:31Z preacherAKAnd quit (Quit: Konversation terminated!)
2015-11-05T15:46:10Z kanru quit (Ping timeout: 250 seconds)
2015-11-05T15:46:24Z smokeink quit (Remote host closed the connection)
2015-11-05T15:49:31Z johann_ quit (Remote host closed the connection)
2015-11-05T15:59:29Z quiles joined #lisp
2015-11-05T16:00:55Z Big_G quit (Remote host closed the connection)
2015-11-05T16:01:40Z ajf- joined #lisp
2015-11-05T16:03:56Z phoe_krk joined #lisp
2015-11-05T16:12:26Z grouzen quit (Ping timeout: 272 seconds)
2015-11-05T16:13:39Z gniourf quit (Ping timeout: 246 seconds)
2015-11-05T16:14:21Z jathd joined #lisp
2015-11-05T16:14:31Z Draz joined #lisp
2015-11-05T16:15:17Z ghard joined #lisp
2015-11-05T16:15:42Z FreeBird_ quit (Remote host closed the connection)
2015-11-05T16:15:56Z happy-dude joined #lisp
2015-11-05T16:16:02Z netrobyatmobile quit (Quit: Connection closed for inactivity)
2015-11-05T16:16:39Z schaueho quit (Ping timeout: 260 seconds)
2015-11-05T16:16:52Z flambard quit (Quit: kthxbai)
2015-11-05T16:19:25Z TMM quit (Quit: Ex-Chat)
2015-11-05T16:19:45Z NeverDie joined #lisp
2015-11-05T16:22:30Z quiles quit (Quit: quiles)
2015-11-05T16:25:48Z NeverDie quit (Quit: http://radiux.io/)
2015-11-05T16:27:58Z shka joined #lisp
2015-11-05T16:29:56Z ghard: Trying to hack with plain-odbc I feel like I might have found something fishy, or then I've a fundamental misunderstanding of the way bindings work. It's in code that's supposed to have worked at some stage though.
2015-11-05T16:30:04Z EvW joined #lisp
2015-11-05T16:30:31Z isBEKaml joined #lisp
2015-11-05T16:30:55Z ghard: http://paste.lisp.org/display/158568
2015-11-05T16:32:20Z shka quit (Client Quit)
2015-11-05T16:33:56Z NeverDie joined #lisp
2015-11-05T16:34:21Z ghard: Anybody understand what's going on there? Looks like a problem with multiple-values-bind.
2015-11-05T16:35:08Z Xach: ghard: the problem is inside CREATE-PARAMETER.
2015-11-05T16:35:21Z resttime: ghard: What I see different is that you're calling CREATE-PARAMETER not with a string
2015-11-05T16:35:47Z gigetoo joined #lisp
2015-11-05T16:35:57Z NeverDie quit (Client Quit)
2015-11-05T16:35:58Z ghard: It looks to me like the argument bindings are wrong there.
2015-11-05T16:36:47Z Xach: ghard: Can you please show how you call PREPARE-STATEMENT?
2015-11-05T16:37:11Z Xach: It's cut off in the backtrace.
2015-11-05T16:37:25Z ghard: (setf *stm* (prepare-statement *conn* "insert into xtst (n,s) values (?,?)" '((:integer :in) (:string))))
2015-11-05T16:37:27Z shka joined #lisp
2015-11-05T16:38:09Z NeverDie joined #lisp
2015-11-05T16:38:48Z ghard: So the test snippet outputs what I'd expected. When it's in the function I get argunment bindings for first create-parameter call mangled.
2015-11-05T16:39:12Z ghard: The prepare-statement function is part of plain-odbc
2015-11-05T16:39:44Z redeemed quit (Quit: q)
2015-11-05T16:41:05Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-05T16:41:24Z Xach: ghard: With a param like that, (first param) => (:INTEGER :IN), (second param) => (:STRING), (rest (rest param)) => NIL.
2015-11-05T16:41:34Z resttime: Try (apply #'create-parameter query pos type direction args)
2015-11-05T16:41:36Z low-prof1 joined #lisp
2015-11-05T16:41:52Z Xach: I don't know anything about plain-odbc, but it seems like :IN is meant to be the direction?
2015-11-05T16:43:22Z mrSpec quit (Ping timeout: 260 seconds)
2015-11-05T16:44:59Z shka quit (Remote host closed the connection)
2015-11-05T16:45:04Z ghard: Xach: Yes
2015-11-05T16:45:52Z shka joined #lisp
2015-11-05T16:46:19Z Xach: ghard: is the (:STRING) bit meant to be a separate param entirely? or part of the first one?
2015-11-05T16:46:43Z ghard: And I think '((:x :y :z) (:x2 :y2 :z2)) should in this case cause 2 calls to create-parameter with type=:x direction=:y args=:z in the first, second list second time.
2015-11-05T16:47:10Z ghard: See there's a kind of default handling in the if
2015-11-05T16:47:25Z Xach: ghard: No, that's not correct.
2015-11-05T16:47:59Z Xach: ghard: PREPARE-STATEMENT takes a &rest parameter, so if you pass a quoted list, that list becomes wrapped in another list.
2015-11-05T16:48:20Z ghard: Ouch
2015-11-05T16:48:38Z Xach: if you keep it as-is, the arguments would be '(:x :y :z) followed by '(:x2 :y2 :z2), or you could omit &rest and make the parameter list at the call site.
2015-11-05T16:49:00Z ghard: Haha. Now it's obvious I was chasing a red herring there. Thanks!
2015-11-05T16:50:17Z Xach: no problem. some of that info is hinted at by the backtrace.
2015-11-05T16:50:19Z zacharias quit (Ping timeout: 252 seconds)
2015-11-05T16:50:21Z johann_ joined #lisp
2015-11-05T16:51:26Z Tordek quit (Ping timeout: 240 seconds)
2015-11-05T16:52:14Z quazimodo joined #lisp
2015-11-05T16:52:18Z mal1 joined #lisp
2015-11-05T16:52:23Z Meow-J quit (Ping timeout: 264 seconds)
2015-11-05T16:52:27Z sjl__ joined #lisp
2015-11-05T16:52:28Z sbryant_ joined #lisp
2015-11-05T16:52:33Z NeverDie quit (Max SendQ exceeded)
2015-11-05T16:52:43Z gaya-1 joined #lisp
2015-11-05T16:52:48Z _sjs joined #lisp
2015-11-05T16:52:53Z nydel quit (Ping timeout: 252 seconds)
2015-11-05T16:53:27Z vert2 quit (Ping timeout: 250 seconds)
2015-11-05T16:53:30Z cods_ joined #lisp
2015-11-05T16:53:38Z shka quit (Remote host closed the connection)
2015-11-05T16:53:50Z wglb` joined #lisp
2015-11-05T16:53:54Z nefercheprure joined #lisp
2015-11-05T16:54:05Z arnsholt_ joined #lisp
2015-11-05T16:54:17Z shka joined #lisp
2015-11-05T16:54:20Z cross_ joined #lisp
2015-11-05T16:54:40Z MikeSeth_ joined #lisp
2015-11-05T16:54:50Z johann_ quit (Ping timeout: 240 seconds)
2015-11-05T16:54:51Z Meow-J joined #lisp
2015-11-05T16:55:17Z aeth_ joined #lisp
2015-11-05T16:55:36Z tippenei1 joined #lisp
2015-11-05T16:57:57Z rvchangue_ joined #lisp
2015-11-05T16:58:49Z NeverDie joined #lisp
2015-11-05T16:58:50Z ghard: Gotta trust example code in the documentation less and the source more.
2015-11-05T16:58:54Z Oladon1 joined #lisp
2015-11-05T16:58:56Z sshirolost joined #lisp
2015-11-05T16:59:01Z Fleurety_ joined #lisp
2015-11-05T16:59:08Z zwdr: ah i solve that problem by not writing documentation
2015-11-05T16:59:09Z DANtheBE- joined #lisp
2015-11-05T16:59:12Z zwdr: :^)
2015-11-05T16:59:29Z _death` joined #lisp
2015-11-05T16:59:31Z EvW1 joined #lisp
2015-11-05T16:59:51Z chishiki joined #lisp
2015-11-05T17:00:01Z sfa_ joined #lisp
2015-11-05T17:00:16Z arnsholt_ quit (Ping timeout: 264 seconds)
2015-11-05T17:00:17Z EvW quit (Ping timeout: 264 seconds)
2015-11-05T17:00:17Z fluter quit (Ping timeout: 264 seconds)
2015-11-05T17:00:17Z EvW1 is now known as EvW
2015-11-05T17:01:04Z NNaNDude joined #lisp
2015-11-05T17:01:44Z NeverDie quit (Max SendQ exceeded)
2015-11-05T17:02:22Z fluter joined #lisp
2015-11-05T17:02:35Z constantinexvi quit (Ping timeout: 264 seconds)
2015-11-05T17:02:43Z rvchangu| joined #lisp
2015-11-05T17:03:07Z lispyone quit (Remote host closed the connection)
2015-11-05T17:03:43Z cataska_ joined #lisp
2015-11-05T17:04:12Z NeverDie joined #lisp
2015-11-05T17:04:30Z lpaste_ joined #lisp
2015-11-05T17:04:43Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-05T17:04:46Z shka quit (Remote host closed the connection)
2015-11-05T17:05:14Z quazimod1 quit (*.net *.split)
2015-11-05T17:05:14Z gaya- quit (*.net *.split)
2015-11-05T17:05:14Z sjl quit (*.net *.split)
2015-11-05T17:05:16Z NaNDude quit (*.net *.split)
2015-11-05T17:05:16Z bobbysmith007 quit (*.net *.split)
2015-11-05T17:05:16Z DANtheBEASTman quit (*.net *.split)
2015-11-05T17:05:16Z aeth quit (*.net *.split)
2015-11-05T17:05:16Z cross quit (*.net *.split)
2015-11-05T17:05:16Z alchemis7 quit (*.net *.split)
2015-11-05T17:05:16Z Oladon quit (*.net *.split)
2015-11-05T17:05:16Z sshirokov quit (*.net *.split)
2015-11-05T17:05:16Z sbryant quit (*.net *.split)
2015-11-05T17:05:16Z lieven quit (*.net *.split)
2015-11-05T17:05:16Z cataska quit (*.net *.split)
2015-11-05T17:05:16Z danlentz quit (*.net *.split)
2015-11-05T17:05:16Z wglb quit (*.net *.split)
2015-11-05T17:05:16Z _death quit (*.net *.split)
2015-11-05T17:05:16Z nightfly quit (*.net *.split)
2015-11-05T17:05:16Z Fleurety quit (*.net *.split)
2015-11-05T17:05:16Z schoppenhauer quit (*.net *.split)
2015-11-05T17:05:16Z rvchangu- quit (*.net *.split)
2015-11-05T17:05:16Z tippenein quit (*.net *.split)
2015-11-05T17:05:16Z MikeSeth quit (*.net *.split)
2015-11-05T17:05:16Z sfa quit (*.net *.split)
2015-11-05T17:05:16Z musegarden1 quit (*.net *.split)
2015-11-05T17:05:16Z TMA quit (*.net *.split)
2015-11-05T17:05:16Z cantstanya quit (*.net *.split)
2015-11-05T17:05:16Z arnsholt quit (*.net *.split)
2015-11-05T17:05:16Z lpaste quit (*.net *.split)
2015-11-05T17:05:16Z rvchangue quit (*.net *.split)
2015-11-05T17:05:16Z cods quit (*.net *.split)
2015-11-05T17:05:16Z arnsholt_ joined #lisp
2015-11-05T17:05:16Z sbryant_ is now known as sbryant
2015-11-05T17:05:31Z rvchangue_ is now known as rvchangue
2015-11-05T17:05:31Z constantinexvi joined #lisp
2015-11-05T17:05:53Z _death` is now known as _death
2015-11-05T17:05:53Z sshirolost is now known as sshirokov
2015-11-05T17:06:00Z mrSpec joined #lisp
2015-11-05T17:06:04Z nzambe quit (Ping timeout: 264 seconds)
2015-11-05T17:06:14Z nightfly joined #lisp
2015-11-05T17:06:41Z kami joined #lisp
2015-11-05T17:06:54Z cantstanya joined #lisp
2015-11-05T17:07:07Z schoppenhauer joined #lisp
2015-11-05T17:07:07Z kami quit (Changing host)
2015-11-05T17:07:07Z kami joined #lisp
2015-11-05T17:07:15Z musegarden1 joined #lisp
2015-11-05T17:07:27Z harish_ quit (Ping timeout: 255 seconds)
2015-11-05T17:08:32Z vert2 joined #lisp
2015-11-05T17:08:41Z danlentz joined #lisp
2015-11-05T17:08:43Z Tordek joined #lisp
2015-11-05T17:09:06Z cataska_ is now known as cataska
2015-11-05T17:09:23Z Shinmera: Xach: Just a note, Quicklisp almost works on Clasp again. There's some minor remaining issues, but we're moving pretty close to a release now.
2015-11-05T17:10:05Z bobbysmith007 joined #lisp
2015-11-05T17:10:07Z Xach: cool!
2015-11-05T17:11:04Z cosarara left #lisp
2015-11-05T17:14:49Z Fleurety_ is now known as Fleurety
2015-11-05T17:16:35Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T17:16:51Z Guest14 joined #lisp
2015-11-05T17:24:08Z attila_lendvai joined #lisp
2015-11-05T17:24:08Z attila_lendvai quit (Changing host)
2015-11-05T17:24:08Z attila_lendvai joined #lisp
2015-11-05T17:25:05Z LiamH joined #lisp
2015-11-05T17:25:53Z pt1 joined #lisp
2015-11-05T17:26:38Z pt1 quit (Remote host closed the connection)
2015-11-05T17:28:26Z _cosmona` quit (Remote host closed the connection)
2015-11-05T17:28:26Z _cosmonaut_ quit (Remote host closed the connection)
2015-11-05T17:29:30Z leafyba__ joined #lisp
2015-11-05T17:31:21Z halfcrazy joined #lisp
2015-11-05T17:32:13Z pt1 joined #lisp
2015-11-05T17:33:13Z shka joined #lisp
2015-11-05T17:33:26Z gingerale joined #lisp
2015-11-05T17:33:30Z leafybas_ quit (Ping timeout: 265 seconds)
2015-11-05T17:33:38Z EvW quit (Ping timeout: 250 seconds)
2015-11-05T17:34:46Z leafyba__ quit (Ping timeout: 272 seconds)
2015-11-05T17:40:11Z heddwch joined #lisp
2015-11-05T17:40:13Z hippo_ joined #lisp
2015-11-05T17:40:22Z tetheno quit (Quit: Oh, jolly good show!)
2015-11-05T17:40:29Z zeroish joined #lisp
2015-11-05T17:41:39Z tetheno joined #lisp
2015-11-05T17:43:36Z jocuman quit (Ping timeout: 250 seconds)
2015-11-05T17:44:02Z hippo_ left #lisp
2015-11-05T17:45:01Z shka quit (Remote host closed the connection)
2015-11-05T17:45:28Z isBEKaml quit (Quit: leaving)
2015-11-05T17:46:03Z lisse joined #lisp
2015-11-05T17:46:13Z remi`bd quit (Quit: leaving)
2015-11-05T17:46:50Z kushal quit (Ping timeout: 240 seconds)
2015-11-05T17:47:04Z schoppenhauer: hi. question: is postmortem threadsafe? that is, if I use it inside hunchentoot, and start a connection before initializing the hunchentoot-server, and then use this connection through all threads, will this work?
2015-11-05T17:48:54Z pt1 quit (Remote host closed the connection)
2015-11-05T17:48:59Z Shinmera: What's postmortem?
2015-11-05T17:49:56Z tetheno quit (Quit: Oh, jolly good show!)
2015-11-05T17:49:56Z HDurer quit (Ping timeout: 265 seconds)
2015-11-05T17:50:14Z tetheno joined #lisp
2015-11-05T17:50:22Z tetheno quit (Remote host closed the connection)
2015-11-05T17:50:54Z ajf- quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T17:51:09Z johann_ joined #lisp
2015-11-05T17:51:10Z trebor_home joined #lisp
2015-11-05T17:52:30Z kami quit (Ping timeout: 272 seconds)
2015-11-05T17:52:38Z schoppenhauer: Shinmera: s/postmortem/postmodern
2015-11-05T17:52:44Z schoppenhauer: I mean postmodern
2015-11-05T17:52:52Z tetheno joined #lisp
2015-11-05T17:54:24Z shka joined #lisp
2015-11-05T17:54:52Z shka quit (Read error: No route to host)
2015-11-05T17:55:26Z johann_ quit (Ping timeout: 240 seconds)
2015-11-05T17:56:07Z shka joined #lisp
2015-11-05T17:58:40Z xorox90 quit (Quit: Connection closed for inactivity)
2015-11-05T17:59:11Z ajf- joined #lisp
2015-11-05T18:01:15Z kdas_ joined #lisp
2015-11-05T18:01:37Z HDurer joined #lisp
2015-11-05T18:01:54Z quasisane quit (Remote host closed the connection)
2015-11-05T18:02:15Z quasisane joined #lisp
2015-11-05T18:02:44Z mal1 is now known as lieven
2015-11-05T18:02:54Z lieven quit (Changing host)
2015-11-05T18:02:54Z lieven joined #lisp
2015-11-05T18:04:00Z ozihcs joined #lisp
2015-11-05T18:04:17Z znpy joined #lisp
2015-11-05T18:04:30Z briantrice joined #lisp
2015-11-05T18:05:21Z halfcrazy quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T18:05:51Z kdas_ quit (Ping timeout: 252 seconds)
2015-11-05T18:06:59Z ZabaQ_ joined #lisp
2015-11-05T18:07:26Z TMM joined #lisp
2015-11-05T18:08:05Z ozihcs is now known as BWV988
2015-11-05T18:09:26Z ZabaQ quit (Ping timeout: 240 seconds)
2015-11-05T18:09:51Z pt1 joined #lisp
2015-11-05T18:09:53Z pt1 quit (Remote host closed the connection)
2015-11-05T18:10:04Z hiroakip joined #lisp
2015-11-05T18:10:13Z sjl__ is now known as sjl
2015-11-05T18:11:08Z briantrice quit (Quit: briantrice)
2015-11-05T18:12:11Z ZabaQ_ quit (Ping timeout: 264 seconds)
2015-11-05T18:12:21Z hiroakip quit (Read error: Connection reset by peer)
2015-11-05T18:12:29Z hiroakip joined #lisp
2015-11-05T18:13:29Z briantrice joined #lisp
2015-11-05T18:14:11Z zadock joined #lisp
2015-11-05T18:14:35Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T18:15:10Z schoppenhauer: anyone?
2015-11-05T18:15:20Z H4ns: schoppenhauer: yes, it is.
2015-11-05T18:15:25Z pt1 joined #lisp
2015-11-05T18:15:51Z H4ns: schoppenhauer: if in doubt, consult the source.  look for postmodern-thread-safe and how that conditionalized code is used in cl-postgres:exec-query
2015-11-05T18:17:00Z schoppenhauer: H4ns: hm. ok. well the thing is then … what if the database is restarted? will postmodern automatically reconnect?
2015-11-05T18:17:38Z BWV988 left #lisp
2015-11-05T18:18:17Z H4ns: schoppenhauer: no.  in general, if you need to know such things, the best thing is to look at the source and experiment on the repl.
2015-11-05T18:18:38Z schoppenhauer: H4ns: experimenting with the repl… ok, then I will have to set up a local postgres db
2015-11-05T18:18:51Z H4ns: schoppenhauer: but i can assure you that a connection is not automatically re-established when the db-server restarts.
2015-11-05T18:19:25Z sdothum quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-11-05T18:19:28Z H4ns: schoppenhauer: yes.  that'd be adviseable in any case.
2015-11-05T18:20:13Z H4ns: schoppenhauer: if you want to avoid setting postgres up, you can also use an ssh tunnel to your db server and then kill the ssh connection.  that'll look like a database crash to the client side.
2015-11-05T18:20:49Z Guest14 joined #lisp
2015-11-05T18:21:31Z gravicappa joined #lisp
2015-11-05T18:24:01Z sjl__ joined #lisp
2015-11-05T18:24:46Z NeverDie quit (Ping timeout: 240 seconds)
2015-11-05T18:25:03Z quasus joined #lisp
2015-11-05T18:25:24Z pt1 quit (Remote host closed the connection)
2015-11-05T18:25:26Z NeverDie joined #lisp
2015-11-05T18:25:39Z briantrice quit (Quit: briantrice)
2015-11-05T18:25:46Z shka quit (Remote host closed the connection)
2015-11-05T18:26:35Z roo joined #lisp
2015-11-05T18:26:51Z sjl quit (Ping timeout: 260 seconds)
2015-11-05T18:27:09Z shka joined #lisp
2015-11-05T18:27:34Z DANtheBE- is now known as DANtheBEASTman
2015-11-05T18:28:09Z zacharias joined #lisp
2015-11-05T18:29:41Z jesse_m joined #lisp
2015-11-05T18:31:36Z HDurer quit (Ping timeout: 255 seconds)
2015-11-05T18:31:59Z zadock quit (Quit: Leaving)
2015-11-05T18:32:59Z briantrice joined #lisp
2015-11-05T18:33:26Z tetheno quit (Read error: Connection reset by peer)
2015-11-05T18:34:01Z tetheno joined #lisp
2015-11-05T18:34:25Z jesse_m left #lisp
2015-11-05T18:35:11Z jdz quit (Ping timeout: 252 seconds)
2015-11-05T18:35:17Z badkins is now known as atomgiant
2015-11-05T18:36:00Z grouzen joined #lisp
2015-11-05T18:36:13Z atomgiant is now known as badkins_
2015-11-05T18:37:00Z badkins_ is now known as badkins
2015-11-05T18:39:06Z jdz joined #lisp
2015-11-05T18:39:42Z reggy joined #lisp
2015-11-05T18:40:25Z fantazo joined #lisp
2015-11-05T18:40:27Z dash joined #lisp
2015-11-05T18:40:40Z HDurer joined #lisp
2015-11-05T18:41:30Z dash: anybody know if sbcl's thread-local storage size is configurable? i am trying to revive a lisp program written a few years ago and i'm running into "thread local storage exhausted"
2015-11-05T18:41:55Z dash: i believe the code is probably correct otherwise, so I'm wondering if I can just tweak some limit and try again
2015-11-05T18:42:05Z NeverDie quit (Quit: http://radiux.io/)
2015-11-05T18:42:05Z Raimondi quit (Quit: The road to wisdom?—Well, it's plain and simple to express: Err and err and err again, but less and less and less.  — Piet Hein)
2015-11-05T18:42:23Z rotty joined #lisp
2015-11-05T18:42:33Z Raimondi joined #lisp
2015-11-05T18:43:58Z shka: dash: stack size?
2015-11-05T18:44:26Z zerac quit (Ping timeout: 272 seconds)
2015-11-05T18:44:26Z narendraj9 quit (Ping timeout: 272 seconds)
2015-11-05T18:44:40Z trn quit (Read error: Connection reset by peer)
2015-11-05T18:44:42Z GUEST_4567345 joined #lisp
2015-11-05T18:44:47Z trn joined #lisp
2015-11-05T18:44:48Z reg_ joined #lisp
2015-11-05T18:45:02Z Draz quit (Read error: Connection reset by peer)
2015-11-05T18:45:04Z stepnem quit (Ping timeout: 272 seconds)
2015-11-05T18:45:06Z dash: shka: hmm, just in the OS's ulimit? worth a try
2015-11-05T18:45:20Z shka: dash: i really don't know
2015-11-05T18:45:26Z Raimondi quit (Read error: No route to host)
2015-11-05T18:45:34Z shka: just a shot
2015-11-05T18:45:41Z jackc- quit (Read error: Connection reset by peer)
2015-11-05T18:46:20Z reggy quit (Ping timeout: 272 seconds)
2015-11-05T18:46:20Z arnsholt_ quit (Ping timeout: 272 seconds)
2015-11-05T18:46:27Z arnsholt joined #lisp
2015-11-05T18:46:49Z scymtym: dash: can you paste the full error message and, if possible, a recipe for reproducing the error on paste.lisp.org
2015-11-05T18:46:54Z narendraj9 joined #lisp
2015-11-05T18:47:02Z zerac joined #lisp
2015-11-05T18:47:30Z stepnem joined #lisp
2015-11-05T18:47:31Z GUEST_4567345 quit (Client Quit)
2015-11-05T18:47:39Z grouzen quit (Ping timeout: 252 seconds)
2015-11-05T18:47:45Z Draz joined #lisp
2015-11-05T18:47:50Z HDurer quit (Ping timeout: 240 seconds)
2015-11-05T18:48:45Z jackc- joined #lisp
2015-11-05T18:49:00Z dash: scymtym: http://paste.lisp.org/display/158577
2015-11-05T18:49:11Z dash: scymtym: code lives here: https://github.com/kpreid/e-on-cl
2015-11-05T18:49:21Z scymtym: dash: thank you
2015-11-05T18:49:23Z dash: my recipe for reproducing this is still incomplete
2015-11-05T18:49:30Z ajf- quit (Ping timeout: 272 seconds)
2015-11-05T18:49:52Z dash: (depends on some other local files)
2015-11-05T18:50:02Z snv1 quit (Quit: Leaving.)
2015-11-05T18:50:12Z shka: btw
2015-11-05T18:50:13Z lispyone joined #lisp
2015-11-05T18:50:16Z shka: i have silly question
2015-11-05T18:50:19Z shka:   (declare (type (function (* *) symbol) comparsion-fn))
2015-11-05T18:50:59Z shka: according to my understanding function is just another type, so i can declare callback type like this in my defun
2015-11-05T18:51:03Z shka: is that corret?
2015-11-05T18:51:17Z shka: pardon my ignorance
2015-11-05T18:51:28Z k-stz joined #lisp
2015-11-05T18:51:37Z shka: but i'm confused by ftype
2015-11-05T18:51:51Z johann_ joined #lisp
2015-11-05T18:52:35Z dash: scymtym: any suggestions for further investigation?
2015-11-05T18:52:48Z Xach: shka: I don't use these kinds of declarations, but a glance at the spec suggests FTYPE is for function bindings, not variable bindings.
2015-11-05T18:53:15Z shka: Xach: that's my impression as well
2015-11-05T18:53:18Z scymtym: dash: nothing comes to mind immediately. maybe ask in #sbcl
2015-11-05T18:53:20Z Xach: shka: so if your function is passed and is bound to a variable, TYPE is appropriate. but if it is global via defun/defgeneric or local via flet/labels you would use FTYPE.
2015-11-05T18:53:23Z dash: scymtym: a little research suggests that tls space is constrained by number of special variables
2015-11-05T18:53:32Z dash: scymtym: oh, hey, didn't know that was a thing.
2015-11-05T18:53:36Z dash: thanks.
2015-11-05T18:53:50Z shka: that's actually interesting
2015-11-05T18:54:28Z shka: what will happen if you declare ftype of global function in lexical scope
2015-11-05T18:54:47Z Xach: I don't know, sorry. Like I said, I never make such declarations.
2015-11-05T18:54:48Z shka: let's say that this function can return multiple types
2015-11-05T18:54:57Z Xach: What do you hope to achieve by making them?
2015-11-05T18:55:21Z Mon_Ouie joined #lisp
2015-11-05T18:55:21Z defaultxr joined #lisp
2015-11-05T18:55:27Z shka: well, i'm using mostly sbcl
2015-11-05T18:55:29Z jasom: shka: if the declaration isn't true, then it's not well defined what will happen; if it is true, then everything will work
2015-11-05T18:55:59Z shka: and sbcl on the debug mode will actually put assertions for types
2015-11-05T18:56:03Z johann_ quit (Ping timeout: 246 seconds)
2015-11-05T18:56:13Z shka: i'm using type declarations for this reason
2015-11-05T18:56:29Z Xach: Does it work in this case?
2015-11-05T18:56:39Z shka: i really, really, really don't like accidently passing wrong type to function
2015-11-05T18:56:56Z shka: i'm just checking
2015-11-05T18:57:37Z rotty quit (Quit: WeeChat 1.3-dev)
2015-11-05T18:58:30Z jasom: shka: IIRC on sbcl it will act as though the ftype declared is active for the lexical scope of the declare; I do not believe it will add type assertions to the function calls in that scope though
2015-11-05T18:58:41Z shka: Xach: it seems that assertions are not added
2015-11-05T18:58:48Z shka: jasom: thank you
2015-11-05T18:58:49Z HDurer joined #lisp
2015-11-05T18:59:00Z sdothum joined #lisp
2015-11-05T18:59:19Z shka: well, at the very least it will make easier to see what is happening
2015-11-05T18:59:35Z shka: i'm having harder time without type declarations
2015-11-05T18:59:46Z shka: i'm not used to dynamic typing
2015-11-05T19:00:12Z Xach: they will also make it harder to change
2015-11-05T19:00:51Z tmtwd quit (Ping timeout: 252 seconds)
2015-11-05T19:00:54Z grouzen joined #lisp
2015-11-05T19:01:25Z shka: well, yes
2015-11-05T19:01:47Z shka: but the good thing about cl is that i have a choice
2015-11-05T19:02:02Z sjl__ quit (Ping timeout: 250 seconds)
2015-11-05T19:02:15Z shka: if i want to do functional programming, i can do that
2015-11-05T19:02:23Z shka: if i want to do oop i can do that
2015-11-05T19:02:37Z Xach: therefore it is only peer pressure that keeps deviants in line
2015-11-05T19:02:44Z Xach: get with the program! c'mon!
2015-11-05T19:03:30Z araujo quit (Ping timeout: 244 seconds)
2015-11-05T19:03:34Z shka: well, i don't need to add this EVERYWHERE
2015-11-05T19:03:51Z shka: but i find it quite usefull
2015-11-05T19:04:00Z Yanez joined #lisp
2015-11-05T19:04:28Z shka: and I would rather avoid writing functions that may return multiple, unreleated types
2015-11-05T19:04:37Z Cymew joined #lisp
2015-11-05T19:04:40Z shka: or things like that
2015-11-05T19:05:47Z nefercheprure is now known as TMA
2015-11-05T19:07:49Z eazar001 joined #lisp
2015-11-05T19:11:29Z Mon_Ouie quit (Ping timeout: 252 seconds)
2015-11-05T19:12:13Z jdz quit (Ping timeout: 252 seconds)
2015-11-05T19:13:10Z jdz joined #lisp
2015-11-05T19:13:16Z fiddlerwoaroof: jackdaniel: will ECL build against a micro-libc like newlib?
2015-11-05T19:17:11Z farhaven_ joined #lisp
2015-11-05T19:17:13Z farhaven quit (Read error: Connection reset by peer)
2015-11-05T19:18:02Z farhaven_ is now known as farhaven
2015-11-05T19:19:53Z warweasle` joined #lisp
2015-11-05T19:20:20Z pyon quit (Quit: Angels fall, all for you, heretic! Demon heart, bleed for us! (My soul is yours, Dark Master. I will fight for you.))
2015-11-05T19:21:13Z pyon joined #lisp
2015-11-05T19:21:24Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T19:21:46Z danlentz_ joined #lisp
2015-11-05T19:24:20Z grouzen quit (Ping timeout: 272 seconds)
2015-11-05T19:24:33Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T19:24:59Z znpy quit (Ping timeout: 240 seconds)
2015-11-05T19:30:47Z xaotuk joined #lisp
2015-11-05T19:31:18Z EvW joined #lisp
2015-11-05T19:31:24Z snv joined #lisp
2015-11-05T19:32:59Z EvW quit (Remote host closed the connection)
2015-11-05T19:33:08Z EvW joined #lisp
2015-11-05T19:35:27Z snv quit (Client Quit)
2015-11-05T19:36:15Z futpib joined #lisp
2015-11-05T19:39:07Z jackdaniel: fiddlerwoaroof: if it uses some glibc extensions then it's a bug
2015-11-05T19:39:25Z gravicappa quit (Ping timeout: 250 seconds)
2015-11-05T19:39:31Z jackdaniel: so it should build against uclibc for instance
2015-11-05T19:40:35Z NeverDie joined #lisp
2015-11-05T19:41:26Z krrrcks joined #lisp
2015-11-05T19:44:12Z cadadar joined #lisp
2015-11-05T19:46:45Z shka quit (Remote host closed the connection)
2015-11-05T19:47:15Z shka joined #lisp
2015-11-05T19:48:42Z pt1 joined #lisp
2015-11-05T19:51:17Z shka quit (Remote host closed the connection)
2015-11-05T19:52:01Z shka joined #lisp
2015-11-05T19:52:36Z johann_ joined #lisp
2015-11-05T19:55:34Z briantrice quit (Quit: briantrice)
2015-11-05T19:55:38Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-05T19:56:25Z yrk quit (Read error: Connection reset by peer)
2015-11-05T19:57:06Z johann_ quit (Ping timeout: 255 seconds)
2015-11-05T19:58:23Z freehck quit (Remote host closed the connection)
2015-11-05T20:04:34Z xrash quit (Remote host closed the connection)
2015-11-05T20:06:21Z gingerale quit (Remote host closed the connection)
2015-11-05T20:07:13Z prxq joined #lisp
2015-11-05T20:08:02Z xaotuk quit (Ping timeout: 272 seconds)
2015-11-05T20:09:00Z otjura quit (Quit: Leaving)
2015-11-05T20:09:52Z shka quit (Remote host closed the connection)
2015-11-05T20:14:27Z warweasle quit (Remote host closed the connection)
2015-11-05T20:15:48Z Bicyclidine joined #lisp
2015-11-05T20:15:49Z cmack` joined #lisp
2015-11-05T20:17:21Z heddwch quit (Ping timeout: 265 seconds)
2015-11-05T20:17:23Z cmack` quit (Remote host closed the connection)
2015-11-05T20:20:06Z Petit_Dejeuner quit (Ping timeout: 240 seconds)
2015-11-05T20:20:31Z heddwch joined #lisp
2015-11-05T20:21:06Z zacharias quit (Ping timeout: 240 seconds)
2015-11-05T20:24:01Z shka joined #lisp
2015-11-05T20:24:35Z futpib quit (Read error: Connection reset by peer)
2015-11-05T20:25:07Z futpib joined #lisp
2015-11-05T20:25:18Z scymtym_ quit (Ping timeout: 246 seconds)
2015-11-05T20:27:12Z lisse joined #lisp
2015-11-05T20:27:26Z TMM: Is emacs the best Lisp editor?
2015-11-05T20:28:03Z shka quit (Client Quit)
2015-11-05T20:28:20Z mood: TMM: That is generally considered to be the case, yes
2015-11-05T20:28:50Z cyraxjoe quit (Ping timeout: 240 seconds)
2015-11-05T20:28:55Z erif546 joined #lisp
2015-11-05T20:29:34Z mrSpec quit (Quit: mrSpec)
2015-11-05T20:29:38Z TMM: Ok, I'll try to learn more emacs :)
2015-11-05T20:29:54Z TMM: I normally use eclipse for my other languages, but I've been meaning to switch to emacs for a long time anyway
2015-11-05T20:30:32Z Yuuhi quit (Remote host closed the connection)
2015-11-05T20:31:22Z faalentijn joined #lisp
2015-11-05T20:31:31Z cyraxjoe joined #lisp
2015-11-05T20:33:05Z ryu0: TMM: vim is also worth looking at i suppose, but it's largely a matter of preferences.
2015-11-05T20:33:46Z faalentijn: ryu0: Couldn't you use evil-mode or viper in Emacs
2015-11-05T20:33:57Z faalentijn: Sorry if someone already mentioned this.
2015-11-05T20:33:59Z ryu0: faalentijn: wouldn't know. never touched emacs.
2015-11-05T20:34:42Z faalentijn: ryu0: Interesting, didn't expect that in a channel in #lisp. What do you run?
2015-11-05T20:35:41Z cyraxjoe_ joined #lisp
2015-11-05T20:35:44Z ryu0: faalentijn: vim + whatever other i need. i've grown fond of vim from my years working with C and other unix types of things.
2015-11-05T20:35:44Z cyraxjoe quit (Read error: Connection reset by peer)
2015-11-05T20:35:57Z TMM: I use vim usually only for fairly simple editing, although that does it no justice I know it has a lot of features
2015-11-05T20:36:00Z Karl_Dscc quit (Remote host closed the connection)
2015-11-05T20:36:10Z TMM: I don't know why I never bothered to learn any of the advanced features
2015-11-05T20:36:25Z ryu0: faalentijn: i hated it at first. it follows its own UI conventions.
2015-11-05T20:36:30Z fantazo quit (Ping timeout: 244 seconds)
2015-11-05T20:36:45Z ryu0: nothing like the first editors i used on windows.
2015-11-05T20:36:55Z faalentijn: I use vim for quick console editing (although I now aliased it to emacs + evil) and emacs for big work.
2015-11-05T20:37:08Z ryu0: i wonder if vile is any good.
2015-11-05T20:37:12Z ryu0: a vi clone called
2015-11-05T20:37:15Z ryu0: vi like emacs.
2015-11-05T20:37:21Z ryu0: (vile)
2015-11-05T20:37:28Z faalentijn: Yeah I loved vim for the first year or so I loved Linux. Gvim just sucked and I wanted a good X11 editor
2015-11-05T20:37:46Z ryu0: one of these days i'll read the vim book.
2015-11-05T20:38:01Z faalentijn: ryu0: viper is pretty good but it's way to emulate-y for me. Evil-mode is more liked overall in the Emacs community since it also allows some vim-plugins to run.
2015-11-05T20:38:15Z faalentijn: https://github.com/syl20bnr/spacemacs
2015-11-05T20:38:28Z faalentijn: http://www.emacswiki.org/emacs/Evil
2015-11-05T20:38:42Z ryu0: http://invisible-island.net/vile/
2015-11-05T20:39:10Z ryu0: okay, so it's not a vi clone. but i thought it was. anyway.
2015-11-05T20:39:14Z dash left #lisp
2015-11-05T20:39:59Z erif546 quit (Quit: Page closed)
2015-11-05T20:40:28Z faalentijn: https://www.gnu.org/software/emacs/manual/html_mono/viper.html
2015-11-05T20:40:38Z pjb: minion: memo for shka: if you really, really, really don't like accidently passing wrong type to function and just want to check, then don't use declarations! Use CHECK-TYPE.
2015-11-05T20:40:38Z minion: Remembered. I'll tell shka when he/she/it next speaks.
2015-11-05T20:41:14Z shka joined #lisp
2015-11-05T20:43:17Z pjb: minion: memo for shka: and then, while you can always try to declare or check the type of functions, the standard doesn't require implementation to check anything else than it to be a function. The exact signature can be ignored, and will probably be on most implementations.  Furthermore, in general, symbols designating functions are as good as functions so you would want to (check-type compare-fn (or function symbol)), nothing more,
2015-11-05T20:43:17Z minion: Remembered. I'll tell shka when he/she/it next speaks.
2015-11-05T20:43:17Z pjb: but no less.
2015-11-05T20:45:15Z shka quit (Remote host closed the connection)
2015-11-05T20:46:33Z pjb: minion: memo for shka: in lisp, all the types are related: they're all subtypes of T and supertypes of NIL!  Therefore a function can never return values of unrelated types!
2015-11-05T20:46:34Z minion: Remembered. I'll tell shka when he/she/it next speaks.
2015-11-05T20:47:23Z shka joined #lisp
2015-11-05T20:47:36Z mrSpec joined #lisp
2015-11-05T20:48:46Z gaya-1 quit (Quit: Leaving.)
2015-11-05T20:50:41Z ajf- joined #lisp
2015-11-05T20:52:41Z Bicyclidine quit (Quit: restart)
2015-11-05T20:52:54Z cyraxjoe_ quit (Ping timeout: 255 seconds)
2015-11-05T20:53:22Z cyraxjoe joined #lisp
2015-11-05T20:53:23Z johann_ joined #lisp
2015-11-05T20:55:36Z fe[nl]ix: Quadrescence: ping
2015-11-05T20:56:26Z Bicyclidine joined #lisp
2015-11-05T20:56:52Z shka quit (Remote host closed the connection)
2015-11-05T20:57:57Z johann_ quit (Ping timeout: 265 seconds)
2015-11-05T21:00:47Z farhaven quit (Ping timeout: 264 seconds)
2015-11-05T21:01:25Z milkseaweed joined #lisp
2015-11-05T21:06:22Z nedbat joined #lisp
2015-11-05T21:06:28Z farhaven joined #lisp
2015-11-05T21:06:55Z cpc26 joined #lisp
2015-11-05T21:07:01Z nedbat left #lisp
2015-11-05T21:07:27Z NeverDie quit (Quit: http://radiux.io/)
2015-11-05T21:08:20Z vlatkoB_ joined #lisp
2015-11-05T21:08:21Z cpc26_ quit (Ping timeout: 246 seconds)
2015-11-05T21:09:14Z NeverDie joined #lisp
2015-11-05T21:12:33Z lispyone quit (Remote host closed the connection)
2015-11-05T21:12:38Z vlatkoB quit (Ping timeout: 272 seconds)
2015-11-05T21:13:26Z milkseaweed quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-11-05T21:14:50Z LilSusieCrabCake quit (Ping timeout: 260 seconds)
2015-11-05T21:17:33Z NeverDie quit (Quit: http://radiux.io/)
2015-11-05T21:18:51Z hiroakip quit (Ping timeout: 246 seconds)
2015-11-05T21:20:15Z ozihcs joined #lisp
2015-11-05T21:30:42Z vlatkoB_ quit (Remote host closed the connection)
2015-11-05T21:32:59Z lnostdal quit (Ping timeout: 240 seconds)
2015-11-05T21:34:03Z pt1 quit (Remote host closed the connection)
2015-11-05T21:35:57Z algae quit (Quit: leaving)
2015-11-05T21:37:52Z briantrice joined #lisp
2015-11-05T21:38:35Z angavrilov quit (Remote host closed the connection)
2015-11-05T21:41:20Z scymtym_ joined #lisp
2015-11-05T21:42:27Z zacharias joined #lisp
2015-11-05T21:44:23Z jmo joined #lisp
2015-11-05T21:44:45Z Yanez quit (Ping timeout: 246 seconds)
2015-11-05T21:44:46Z jmo quit (Remote host closed the connection)
2015-11-05T21:45:34Z ozihcs quit (Quit: q)
2015-11-05T21:45:55Z lnostdal joined #lisp
2015-11-05T21:49:36Z Raimondi joined #lisp
2015-11-05T21:51:06Z quazimodo quit (Ping timeout: 240 seconds)
2015-11-05T21:53:37Z lispyone joined #lisp
2015-11-05T21:54:08Z johann_ joined #lisp
2015-11-05T21:54:54Z ASau joined #lisp
2015-11-05T21:57:54Z oleo_ joined #lisp
2015-11-05T21:58:59Z johann_ quit (Ping timeout: 264 seconds)
2015-11-05T21:59:20Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T22:00:24Z oleo quit (Ping timeout: 255 seconds)
2015-11-05T22:01:44Z ekinmur joined #lisp
2015-11-05T22:04:11Z cpc26 quit (Ping timeout: 252 seconds)
2015-11-05T22:04:57Z cpc26 joined #lisp
2015-11-05T22:07:10Z leafybas_ joined #lisp
2015-11-05T22:07:35Z EvW1 joined #lisp
2015-11-05T22:07:40Z happy-dude quit (Ping timeout: 240 seconds)
2015-11-05T22:07:56Z radioninja_work quit (Ping timeout: 250 seconds)
2015-11-05T22:08:08Z fitzsim` joined #lisp
2015-11-05T22:08:19Z EvW quit (Ping timeout: 240 seconds)
2015-11-05T22:08:19Z fluter quit (Ping timeout: 240 seconds)
2015-11-05T22:08:19Z EvW1 is now known as EvW
2015-11-05T22:08:59Z warweasle` quit (Ping timeout: 240 seconds)
2015-11-05T22:09:00Z fitzsim quit (Ping timeout: 240 seconds)
2015-11-05T22:09:07Z happy-dude joined #lisp
2015-11-05T22:09:19Z cpc26 quit (Ping timeout: 240 seconds)
2015-11-05T22:09:21Z DANtheBEASTman quit (Ping timeout: 240 seconds)
2015-11-05T22:09:21Z ghard quit (Ping timeout: 240 seconds)
2015-11-05T22:09:21Z foom quit (Ping timeout: 240 seconds)
2015-11-05T22:09:21Z aiwaz quit (Ping timeout: 240 seconds)
2015-11-05T22:11:08Z lispyone quit (Remote host closed the connection)
2015-11-05T22:11:59Z ghard joined #lisp
2015-11-05T22:13:09Z cpc26 joined #lisp
2015-11-05T22:14:46Z DANtheBEASTman joined #lisp
2015-11-05T22:14:50Z aiwaz joined #lisp
2015-11-05T22:15:31Z wedesoft joined #lisp
2015-11-05T22:16:43Z Draz quit (Ping timeout: 250 seconds)
2015-11-05T22:18:16Z Guest14 joined #lisp
2015-11-05T22:20:20Z tsoutseki quit (Quit: Leaving)
2015-11-05T22:22:32Z prxq quit (Remote host closed the connection)
2015-11-05T22:23:02Z ajf-: is there a step clause in a loop ? like for j from 0 to 10 step 2
2015-11-05T22:23:58Z fluter joined #lisp
2015-11-05T22:24:29Z ajf-: by, right?
2015-11-05T22:24:33Z ajf-: looks like so
2015-11-05T22:24:41Z oGMo: yes
2015-11-05T22:25:02Z foom joined #lisp
2015-11-05T22:25:19Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T22:27:10Z wedesoft quit (Remote host closed the connection)
2015-11-05T22:28:39Z wedesoft joined #lisp
2015-11-05T22:29:13Z nedbat joined #lisp
2015-11-05T22:32:19Z papachan quit (Quit: WeeChat 1.3)
2015-11-05T22:33:42Z faalentijn quit (Ping timeout: 255 seconds)
2015-11-05T22:36:19Z futpib quit (Ping timeout: 240 seconds)
2015-11-05T22:38:00Z ekinmur joined #lisp
2015-11-05T22:38:37Z ekinmur quit (Client Quit)
2015-11-05T22:38:57Z ekinmur joined #lisp
2015-11-05T22:41:25Z milkseaweed joined #lisp
2015-11-05T22:43:05Z cpc26_ joined #lisp
2015-11-05T22:43:36Z cpc26 quit (Ping timeout: 255 seconds)
2015-11-05T22:44:30Z faalentijn joined #lisp
2015-11-05T22:45:27Z sunwukong quit (Quit: Leaving)
2015-11-05T22:45:35Z grouzen joined #lisp
2015-11-05T22:47:20Z briantrice quit (Quit: briantrice)
2015-11-05T22:48:51Z schoppenhauer: can I have multiple acceptors in the same hunchentoot process?
2015-11-05T22:49:05Z schoppenhauer: serving different handlers?
2015-11-05T22:49:12Z mood: schoppenhauer: yes
2015-11-05T22:49:27Z jfe` quit (Remote host closed the connection)
2015-11-05T22:49:47Z jfe` joined #lisp
2015-11-05T22:50:35Z Tordek quit (Ping timeout: 264 seconds)
2015-11-05T22:50:40Z schoppenhauer: mood: how can I pass the acceptor(s) to define-easy-handler?
2015-11-05T22:51:17Z musegarden2 joined #lisp
2015-11-05T22:51:32Z vert2 quit (Ping timeout: 265 seconds)
2015-11-05T22:51:50Z mood: schoppenhauer: I don't think you can.
2015-11-05T22:52:11Z cadadar quit (Quit: Leaving.)
2015-11-05T22:52:12Z schoppenhauer: mood: the documentation says something about acceptor names. but I am not sure what that is.
2015-11-05T22:54:03Z Tordek joined #lisp
2015-11-05T22:54:13Z musegarden1 quit (Ping timeout: 268 seconds)
2015-11-05T22:54:41Z Bicyclidine: a lot of acceptor objects, looks like.
2015-11-05T22:54:53Z johann_ joined #lisp
2015-11-05T22:55:04Z quasus:  /join #lisp-fr
2015-11-05T22:55:13Z Bicyclidine: pass :name whatever to make-instance 'easy-acceptor, i think.
2015-11-05T22:55:18Z Shinmera quit (Quit: しつれいしなければならないんです。)
2015-11-05T22:55:36Z shookees quit (Remote host closed the connection)
2015-11-05T22:55:43Z Bicyclidine: or whatever acceptor class you have
2015-11-05T22:56:00Z shookees joined #lisp
2015-11-05T22:56:26Z schoppenhauer: Bicyclidine: ok. thx.
2015-11-05T22:57:35Z quazimodo joined #lisp
2015-11-05T22:59:20Z vert2 joined #lisp
2015-11-05T22:59:21Z johann_ quit (Ping timeout: 255 seconds)
2015-11-05T22:59:48Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-05T23:01:37Z tsoutseki joined #lisp
2015-11-05T23:02:01Z harish joined #lisp
2015-11-05T23:02:27Z jleija joined #lisp
2015-11-05T23:03:06Z EvW quit (Ping timeout: 240 seconds)
2015-11-05T23:04:32Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-05T23:04:35Z mrSpec quit (Remote host closed the connection)
2015-11-05T23:06:59Z Cymew quit (Ping timeout: 240 seconds)
2015-11-05T23:10:08Z bb010g quit (Quit: Connection closed for inactivity)
2015-11-05T23:14:56Z wedesoft quit (Remote host closed the connection)
2015-11-05T23:15:43Z Draz joined #lisp
2015-11-05T23:17:42Z fortitude quit (Ping timeout: 244 seconds)
2015-11-05T23:18:07Z thodg quit (Ping timeout: 246 seconds)
2015-11-05T23:24:11Z tsoutseki quit (Quit: Leaving)
2015-11-05T23:25:43Z NeverDie joined #lisp
2015-11-05T23:26:41Z mordocai quit (Read error: Connection reset by peer)
2015-11-05T23:27:47Z cpc26_ quit (Ping timeout: 252 seconds)
2015-11-05T23:28:10Z sjl joined #lisp
2015-11-05T23:29:44Z cpc26 joined #lisp
2015-11-05T23:33:43Z Tordek quit (Ping timeout: 244 seconds)
2015-11-05T23:34:23Z vert2 quit (Ping timeout: 252 seconds)
2015-11-05T23:35:34Z tmtwd joined #lisp
2015-11-05T23:35:39Z shookees quit (Ping timeout: 240 seconds)
2015-11-05T23:38:35Z CEnnis91 quit (Ping timeout: 264 seconds)
2015-11-05T23:40:12Z CEnnis91 joined #lisp
2015-11-05T23:45:36Z theverbg joined #lisp
2015-11-05T23:51:15Z Jesin quit (Quit: Leaving)
2015-11-05T23:53:00Z lispyone joined #lisp
2015-11-05T23:55:43Z johann_ joined #lisp
2015-11-05T23:56:31Z briantrice joined #lisp
2015-11-05T23:57:20Z kristof joined #lisp
2015-11-05T23:59:46Z LiamH quit (Quit: Leaving.)
2015-11-05T23:59:57Z Tordek joined #lisp
2015-11-06T00:00:15Z jason_m joined #lisp
2015-11-06T00:00:46Z Quadresce joined #lisp
2015-11-06T00:01:06Z johann_ quit (Ping timeout: 272 seconds)
2015-11-06T00:02:12Z lispyone quit (Remote host closed the connection)
2015-11-06T00:02:25Z Jesin joined #lisp
2015-11-06T00:02:39Z s00pcan quit (Ping timeout: 244 seconds)
2015-11-06T00:02:45Z lispyone joined #lisp
2015-11-06T00:03:15Z Quadresce: Is it possible to use the internals in lisp to get an unsafe pointer into the middle of an array?
2015-11-06T00:03:25Z vert2 joined #lisp
2015-11-06T00:03:26Z _sjs quit (Ping timeout: 240 seconds)
2015-11-06T00:03:35Z Quadresce: internals (of any lisp compiler)
2015-11-06T00:03:54Z Raimondi quit (Quit: The road to wisdom?—Well, it's plain and simple to express: Err and err and err again, but less and less and less.  — Piet Hein)
2015-11-06T00:04:18Z Vulfe joined #lisp
2015-11-06T00:04:36Z s00pcan joined #lisp
2015-11-06T00:05:06Z mishoo quit (Ping timeout: 246 seconds)
2015-11-06T00:07:05Z Xach: Quadresce: I thin you can use things like sap-ref and friends in sbcl.
2015-11-06T00:07:23Z lispyone quit (Ping timeout: 264 seconds)
2015-11-06T00:07:32Z Xach: you can get a sap ref to the vector data and then do the arithmetic from there, iirc.
2015-11-06T00:07:50Z Quadresce: Thanks, I'll look into it.
2015-11-06T00:09:06Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-06T00:09:09Z netrobyatmobile joined #lisp
2015-11-06T00:10:47Z kristof quit (Ping timeout: 260 seconds)
2015-11-06T00:11:32Z Vulfe quit (Read error: Connection reset by peer)
2015-11-06T00:13:04Z Vulfe joined #lisp
2015-11-06T00:14:20Z thodg joined #lisp
2015-11-06T00:16:09Z Vulfe quit (Read error: Connection reset by peer)
2015-11-06T00:17:43Z milkseaweed quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-11-06T00:18:40Z EvW joined #lisp
2015-11-06T00:18:48Z theverbg quit (Ping timeout: 250 seconds)
2015-11-06T00:20:15Z Xach: Quadresce: of course, you then can run afoul of gc
2015-11-06T00:20:16Z Vulfe joined #lisp
2015-11-06T00:20:29Z Quadresce: Yes :[
2015-11-06T00:21:26Z Bicyclidine: i think that's what that static-vectors thing is for
2015-11-06T00:21:40Z Quadresce: vectors not moved by gc?
2015-11-06T00:22:05Z Xach: yeah
2015-11-06T00:22:16Z Xach: allocated in a non-gc space or something
2015-11-06T00:22:43Z Xach really wishes he could go to another boston lisp meeting before he moves
2015-11-06T00:23:21Z Quadresce: Xach, when do you move
2015-11-06T00:23:56Z Xach: November 25
2015-11-06T00:24:06Z Xach: The timing just isn't right, too busy before then
2015-11-06T00:24:36Z nyef: Xach: Bummer. Was kindof looking forward to seeing you at a boston lisp meeting this month.
2015-11-06T00:25:03Z Xach: they're just not as special when they are regularly held!
2015-11-06T00:25:25Z sunwukong joined #lisp
2015-11-06T00:26:42Z nyef: Quadresce: With SBCL, if you're not going to be holding that array-internal pointer long, you can pin the vector.
2015-11-06T00:28:10Z nyef: On non-x86oid gencgc systems, you might even be able to arrange for the vector to be pinned permanently by mutating the pin list.
2015-11-06T00:28:43Z nyef: (On x86oids, pinning relies on the conservatism of the control stack, not on an explicit pin list.)
2015-11-06T00:29:56Z Quadresce: interesting
2015-11-06T00:30:56Z nyef: Of course, on cheneygc systems, pinning is simulated by using WITHOUT-GCING.
2015-11-06T00:31:16Z nyef: Fortunately, cheneygc-only systems are a (slowly) dying breed in SBCL.
2015-11-06T00:34:39Z vaporatorius__ quit (Ping timeout: 240 seconds)
2015-11-06T00:35:34Z Niac joined #lisp
2015-11-06T00:35:55Z nyef: Ugh. I'm thinking of stupid lowlevel hack after stupid lowlevel hack for manipulating the GC behavior of an object at allocation time.
2015-11-06T00:35:58Z lisse joined #lisp
2015-11-06T00:36:15Z EvW quit (Ping timeout: 250 seconds)
2015-11-06T00:36:20Z vaporatorius__ joined #lisp
2015-11-06T00:39:26Z stepnem quit (Ping timeout: 240 seconds)
2015-11-06T00:39:40Z EvW joined #lisp
2015-11-06T00:42:43Z papachan_ is now known as papachan
2015-11-06T00:48:06Z tmtwd quit (Remote host closed the connection)
2015-11-06T00:49:38Z Quadresce: nyef, sounds great!
2015-11-06T00:49:40Z tmtwd joined #lisp
2015-11-06T00:52:11Z Vulfe quit (Read error: Connection reset by peer)
2015-11-06T00:52:46Z harish quit (Ping timeout: 240 seconds)
2015-11-06T00:54:28Z Quadresce quit (Quit: Leaving)
2015-11-06T00:56:28Z johann_ joined #lisp
2015-11-06T00:57:28Z hitecnologys quit (Ping timeout: 272 seconds)
2015-11-06T00:59:39Z Vulfe joined #lisp
2015-11-06T00:59:40Z briantrice quit (Quit: briantrice)
2015-11-06T01:01:02Z johann_ quit (Ping timeout: 244 seconds)
2015-11-06T01:03:37Z scymtym_ quit (Ping timeout: 244 seconds)
2015-11-06T01:03:40Z alchemis7 joined #lisp
2015-11-06T01:04:45Z briantrice joined #lisp
2015-11-06T01:12:12Z k-stz quit (Remote host closed the connection)
2015-11-06T01:12:54Z lispyone joined #lisp
2015-11-06T01:14:51Z ebrasca quit (Remote host closed the connection)
2015-11-06T01:19:28Z pillton: Quadresce: CFFI has a macro called WITH-POINTER-TO-VECTOR-DATA.
2015-11-06T01:20:16Z pjb` joined #lisp
2015-11-06T01:20:47Z lispyone quit (Remote host closed the connection)
2015-11-06T01:20:55Z pillton: There is a function in SBCL which allows you to get the underlying vector of a specific array. Let me know if you want it.
2015-11-06T01:21:22Z lispyone joined #lisp
2015-11-06T01:22:04Z pjb quit (Ping timeout: 250 seconds)
2015-11-06T01:22:24Z pjb` is now known as pjb
2015-11-06T01:24:18Z ekinmur joined #lisp
2015-11-06T01:25:59Z lispyone quit (Ping timeout: 264 seconds)
2015-11-06T01:26:24Z Vulfe quit (Read error: Network is unreachable)
2015-11-06T01:29:46Z zacts quit (Read error: Connection reset by peer)
2015-11-06T01:30:30Z zacts joined #lisp
2015-11-06T01:34:25Z heddwch quit (Ping timeout: 265 seconds)
2015-11-06T01:35:46Z Vulfe joined #lisp
2015-11-06T01:35:50Z trebor_home quit (Ping timeout: 240 seconds)
2015-11-06T01:36:05Z MikeSeth_ is now known as MikeSeth
2015-11-06T01:36:32Z _sjs joined #lisp
2015-11-06T01:36:36Z Bicyclidine quit (Quit: live live live)
2015-11-06T01:37:26Z heddwch joined #lisp
2015-11-06T01:39:41Z ekinmur quit (Quit: Textual IRC Client: www.textualapp.com)
2015-11-06T01:43:54Z hitecnologys joined #lisp
2015-11-06T01:45:03Z heddwch quit (Ping timeout: 265 seconds)
2015-11-06T01:46:25Z heddwch joined #lisp
2015-11-06T01:47:11Z FreeBirdLjj joined #lisp
2015-11-06T01:50:35Z EvW quit (Ping timeout: 264 seconds)
2015-11-06T01:50:50Z lispyone joined #lisp
2015-11-06T01:51:12Z paddymahoney joined #lisp
2015-11-06T01:57:13Z johann_ joined #lisp
2015-11-06T01:57:57Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-06T01:58:23Z bb010g joined #lisp
2015-11-06T01:59:33Z holycow joined #lisp
2015-11-06T01:59:58Z holycow is now known as Guest36012
2015-11-06T02:00:31Z Guest36012: hi guys. anyone remember the name of a text editor that i believe was created after emacs sometime in the 80's was coded in full lisp (maybe?) and is named if i remember correctly after a tree?
2015-11-06T02:00:44Z Vulfe quit (Read error: Connection reset by peer)
2015-11-06T02:00:54Z pjb: Hemlock
2015-11-06T02:01:00Z Guest36012: THATS IT!
2015-11-06T02:01:04Z Guest36012: thanks pjb !
2015-11-06T02:01:12Z pjb: It's included in Clozure CL.app from the AppStore.
2015-11-06T02:01:23Z Guest36012: ohhhh .... THAT is where it is from.  okay
2015-11-06T02:01:31Z pjb: Otherwise you can get it with quicklisp for X11, but it'd need some love.
2015-11-06T02:02:04Z johann_ quit (Ping timeout: 272 seconds)
2015-11-06T02:02:23Z pjb: Oh, also Qt, and tty: hemlock.clx hemlock.qt hemlock.tty
2015-11-06T02:02:34Z Guest36012: what? oh weird, did not know.
2015-11-06T02:03:21Z Guest36012: pjb: thank you for the tips.  i have to run, i will be back later now that i have the notes on hemlock.
2015-11-06T02:03:27Z Guest36012 quit (Client Quit)
2015-11-06T02:05:34Z kobain quit (Read error: Connection reset by peer)
2015-11-06T02:05:55Z drmeister: Xach: Are you online?
2015-11-06T02:06:11Z XachX: Ja
2015-11-06T02:06:15Z drmeister: I found a problem in clasp that is causing a problem with quicklisp - not quicklisp's fault.
2015-11-06T02:06:37Z XachX: My favorite kind of problem. Not mine!
2015-11-06T02:06:49Z loke: drmeister: hello!
2015-11-06T02:07:00Z drmeister: Hello loke
2015-11-06T02:07:01Z drmeister: http://paste.lisp.org/display/158602
2015-11-06T02:07:07Z loke: Xach: "Ja"? You speak swedish now? :-)
2015-11-06T02:07:21Z drmeister: XachX: What block does the (return ...) at the very bottom return from?
2015-11-06T02:07:39Z loke: drmeister: Should be the loop
2015-11-06T02:07:43Z drmeister: Ok
2015-11-06T02:07:56Z drmeister: Because in Clasp only one value is being returned - it's a nasty bug.
2015-11-06T02:08:04Z Vulfe joined #lisp
2015-11-06T02:08:12Z drmeister: I'm trying to reproduce it with a small test case
2015-11-06T02:08:42Z loke: drmeister: But the loop is not wrapped in a MULTIPLE-VALUE-BIND so I don't understand how the second value  could be relevant?
2015-11-06T02:09:02Z drmeister: The caller expects the second return value
2015-11-06T02:09:16Z leafybas_ quit (Remote host closed the connection)
2015-11-06T02:09:19Z drmeister: https://www.irccloud.com/pastebin/ynLesTkN/
2015-11-06T02:09:35Z Vulfe quit (Read error: Connection reset by peer)
2015-11-06T02:09:47Z loke: drmeister: Ah OK, I see what you mean
2015-11-06T02:09:49Z loke: I misread
2015-11-06T02:10:18Z drmeister: (trace fetch) shows that only the first value is returned.
2015-11-06T02:10:20Z drmeister: https://www.irccloud.com/pastebin/vLoByj70/
2015-11-06T02:10:24Z drmeister: That's a partial trace
2015-11-06T02:10:41Z drmeister: Line 15:   |   <3 (QL-HTTP:FETCH T)
2015-11-06T02:10:51Z drmeister: I'm trying to reproduce it with a smaller test case
2015-11-06T02:12:09Z tippenei1 is now known as tippenein
2015-11-06T02:12:20Z loke: So the problem is when a multiple value is returned from a loop form?
2015-11-06T02:12:36Z s00pcan quit (Ping timeout: 265 seconds)
2015-11-06T02:12:44Z loke: So if you change the RETURN (values... to (RETURN-FROM fetch (values... it will work?
2015-11-06T02:13:39Z briantrice quit (Ping timeout: 240 seconds)
2015-11-06T02:13:45Z drmeister: I'll try that
2015-11-06T02:13:49Z Vulfe joined #lisp
2015-11-06T02:14:05Z s00pcan joined #lisp
2015-11-06T02:14:15Z quasus quit (Ping timeout: 252 seconds)
2015-11-06T02:14:24Z harish joined #lisp
2015-11-06T02:16:14Z harish quit (Client Quit)
2015-11-06T02:16:31Z harish joined #lisp
2015-11-06T02:16:49Z CharlesN quit (Remote host closed the connection)
2015-11-06T02:18:36Z pocket joined #lisp
2015-11-06T02:18:40Z atgreen joined #lisp
2015-11-06T02:19:59Z Draz quit (Quit: Leaving)
2015-11-06T02:21:57Z halfcrazy joined #lisp
2015-11-06T02:24:52Z kobain joined #lisp
2015-11-06T02:27:46Z pocket quit (Remote host closed the connection)
2015-11-06T02:29:39Z zacharias_ joined #lisp
2015-11-06T02:30:07Z briantrice joined #lisp
2015-11-06T02:31:24Z paddymahoney quit (Ping timeout: 250 seconds)
2015-11-06T02:32:29Z zacharias quit (Ping timeout: 244 seconds)
2015-11-06T02:33:06Z halfcrazy quit (Max SendQ exceeded)
2015-11-06T02:33:32Z drmeister: https://www.irccloud.com/pastebin/vLoByj70/
2015-11-06T02:33:45Z halfcrazy joined #lisp
2015-11-06T02:34:41Z pocket joined #lisp
2015-11-06T02:38:12Z kanru joined #lisp
2015-11-06T02:38:21Z aap_ joined #lisp
2015-11-06T02:39:28Z Bike: seems like your return-from is broken, then...
2015-11-06T02:39:35Z nedbat left #lisp
2015-11-06T02:40:05Z loke: Hello Bike: http://media-2.web.britannica.com/eb-media/88/6488-004-96D89FFF.jpg
2015-11-06T02:40:43Z Bike: hello
2015-11-06T02:41:05Z Vulfe quit (Read error: Connection reset by peer)
2015-11-06T02:41:29Z aap quit (Ping timeout: 250 seconds)
2015-11-06T02:41:50Z pocket quit (Ping timeout: 240 seconds)
2015-11-06T02:42:41Z halfcrazy quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T02:50:32Z smokeink joined #lisp
2015-11-06T02:52:36Z lispyone quit (Remote host closed the connection)
2015-11-06T02:52:57Z Vulfe joined #lisp
2015-11-06T02:58:01Z johann_ joined #lisp
2015-11-06T02:58:28Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T03:01:54Z smokeink quit (Ping timeout: 255 seconds)
2015-11-06T03:02:10Z johann_ quit (Ping timeout: 240 seconds)
2015-11-06T03:05:19Z kristof joined #lisp
2015-11-06T03:10:38Z lisse joined #lisp
2015-11-06T03:11:12Z halfcrazy joined #lisp
2015-11-06T03:15:25Z Vulfe quit (Read error: Connection reset by peer)
2015-11-06T03:22:19Z mordocai joined #lisp
2015-11-06T03:26:00Z drmeister: Stassats found a great test case and I tracked the problem down.
2015-11-06T03:27:20Z drmeister: XachX: Is there a way to force (ql:update-dist "quicklisp") to update?
2015-11-06T03:27:20Z Vulfe joined #lisp
2015-11-06T03:27:27Z smokeink joined #lisp
2015-11-06T03:27:50Z Xach: drmeister: I'm not sure what you mean by that. It updates every time it is run.
2015-11-06T03:27:56Z drmeister: I discovered a problem while running (ql:update-dist "quicklisp")  and I had to shutdown and start it again and now it says that I already have the latest version.
2015-11-06T03:27:57Z Vulfe quit (Remote host closed the connection)
2015-11-06T03:28:04Z Xach: drmeister: Ok, then you have the latest version.
2015-11-06T03:28:09Z drmeister: Shoot.
2015-11-06T03:28:20Z drmeister: I need the not the latest version to reproduce the problem.
2015-11-06T03:28:29Z Xach: ok, then you can go back in time
2015-11-06T03:28:42Z Xach: http://blog.quicklisp.org/2011/08/going-back-in-dist-time.html has a sketch of how to do it
2015-11-06T03:29:20Z drmeister: Excellent!
2015-11-06T03:30:34Z drmeister: Hmm, this may be an artifact of my last adventure:
2015-11-06T03:30:36Z drmeister: https://www.irccloud.com/pastebin/4vcTjUQ5/
2015-11-06T03:30:49Z drmeister: It's reporting that AVAILABLE-VERSIONS has no function bound to it.
2015-11-06T03:31:01Z drmeister: Maybe I broke my quicklisp?
2015-11-06T03:31:11Z Xach: drmeister: Do you get the same from (in-package :ql-dist)?
2015-11-06T03:31:20Z Xach: something is busted, but not sure what. those symbols are external.
2015-11-06T03:31:33Z drmeister: No - that works then.
2015-11-06T03:32:38Z drmeister: I'll go back to November 2014 - that was a good time.
2015-11-06T03:33:04Z Xach: the best of times, even
2015-11-06T03:33:34Z drmeister: and the worst of times.
2015-11-06T03:43:51Z mbuf joined #lisp
2015-11-06T03:45:57Z cyphase quit (Ping timeout: 246 seconds)
2015-11-06T03:48:31Z |3b| quit (Read error: Connection reset by peer)
2015-11-06T03:49:24Z |3b| joined #lisp
2015-11-06T03:51:38Z kristof quit (Ping timeout: 260 seconds)
2015-11-06T03:52:20Z badkins quit (Remote host closed the connection)
2015-11-06T03:55:54Z johann_ joined #lisp
2015-11-06T03:58:14Z ajf- quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T04:00:19Z kristof joined #lisp
2015-11-06T04:02:53Z cpc26 quit
2015-11-06T04:03:38Z marusich joined #lisp
2015-11-06T04:04:03Z mordocai: Is there any lisp related "light reading" people would recommend? For when i'm tired after work but still in a lispy mood?
2015-11-06T04:04:31Z mordocai: For context, I'm a linux noob
2015-11-06T04:04:33Z mordocai: lisp*
2015-11-06T04:04:43Z mordocai: Not linux. Been using linux for 10 years+ now :P
2015-11-06T04:05:14Z marusich: mordocai: perhaps SICP. I'm a lisp newb and I like it a lot. It's an intro to lisp and it also serves as a good introduction to core CS concepts like data abstraction, which is refreshing even if you are already familiar with the stuff from another language.
2015-11-06T04:05:32Z Xach: it's not super-light, but i like printing out source code and reading it sometimes
2015-11-06T04:05:40Z marusich: SICP: Structure and Interpretation of Computer Programs. free online: https://mitpress.mit.edu/sicp/full-text/book
2015-11-06T04:06:05Z mordocai: Xach: That might be a good idea actually.
2015-11-06T04:06:10Z mordocai: marusich: Also like your idea
2015-11-06T04:06:26Z Xach: i used to print it out four to a page, full duplex, but that got to be too small
2015-11-06T04:06:54Z marusich: In Lisp, is the list symbol '(a b c) the same as the symbol for the list consisting of three elements: 'a, 'b, and 'c? I'm a little confused about symbols
2015-11-06T04:07:00Z pillton prefers microfilm.
2015-11-06T04:07:34Z mordocai: How good code quality/style wise is alexandria? I've been wondering what all is in it so that might be something good to read.
2015-11-06T04:09:17Z resttime: marusich: The two are "equal" yes.
2015-11-06T04:09:45Z resttime: '(a b c) means (quote (a b c))
2015-11-06T04:09:51Z marusich: resttime, so '(a b c) is not in fact a symbol for the list consisting of the referents to a, b, and c?
2015-11-06T04:10:20Z resttime: Well it's not a "symbol" per se in the first place
2015-11-06T04:10:25Z Xach: marusich: if you evaluate '(a b c), the result is a list of three symbols.
2015-11-06T04:10:39Z marusich: ah,I see
2015-11-06T04:10:48Z Xach: marusich: it *reads* as a list, consisting of the symbol QUOTE and the list (A B C)
2015-11-06T04:11:15Z Xach: the evaluator does a special thing with lists starting with QUOTE
2015-11-06T04:11:46Z marusich: The difference between an "expression" that is to be evaluated, like (+ 1 2) and a "list" of the symbols is a little unclear to me. I feel like I'm missing something simple.
2015-11-06T04:12:13Z marusich: My understanding is that a list is a series of related cons cells, not an expression; I'm probably confused somehow.
2015-11-06T04:12:35Z loke: marusich: Yes you do, because in Lisp these concepts are axposed, and the difference important while in most other languages these concepts are all wrapped up in a black box.
2015-11-06T04:13:10Z loke: marusich: You are perfectly correct. However, the compiler uses the very same cons cells to represent the program itself.
2015-11-06T04:13:16Z marusich: I see
2015-11-06T04:13:49Z marusich: So expressions are lists to the compiler, and whether or not they should be evaluated depends?
2015-11-06T04:14:04Z resttime: Read-Eval-Print-Loop
2015-11-06T04:14:23Z loke: marusich: In, say, C, the internal representation of a program is not exposed to the programmer. He just takes source code and it magically becomes runnable. In Lisp, the internal representation is exposed and happens to be the exact same data structure (generally cons calls and symbols) that the programmer uses to store his own data.
2015-11-06T04:14:27Z Xach: marusich: lisp programs are made of lists
2015-11-06T04:14:35Z marusich: I see.
2015-11-06T04:15:08Z loke: That's why the list (+ 1 2) isboth a list of thee values (the symbol + and the numbers 1 and 2) as well as a valid representation of a programmatic expression that adds the numbers 1 and 2
2015-11-06T04:15:19Z mordocai: The docs for common-lisp.net projects really need to be updated to show that their home is now gitlab.
2015-11-06T04:15:34Z mordocai: I keep forgetting that and being confused when I follow their git clone instructions
2015-11-06T04:15:54Z marusich: What Xach said makes sense to me: "if you evaluate '(a b c), the result is a list of three symbols". Am I correct in understanding, then, that '(a b c) or (quote (a b c)) does not evaluate to a symbol; it evaluates a list of symbols, and those symbols are the same as (quote a), (quote b), and (quote c)?
2015-11-06T04:16:02Z loke: This is what I tried to emphasise in a presentation I did a few years ago: https://docs.google.com/presentation/d/1mIHAruC3nbI-CZPVjX7AuRp-bj9xjJima0l6XrHUI6Y/edit#slide=id.p
2015-11-06T04:16:17Z Xach: marusich: no, not correct.
2015-11-06T04:16:23Z loke: There is a (bad) video of the same presentation of youtube somwehere
2015-11-06T04:16:31Z Xach: marusich: (QUOTE A) is a list of two symbols. it *evaluates* to the symbol A.
2015-11-06T04:16:47Z marusich: So, let me rephrase
2015-11-06T04:17:08Z marusich: I correct in understanding, then, that '(a b c) or (quote (a b c)) does not evaluate to a symbol; it evaluates a list of symbols, and those symbols are the same as *the symbols that you get when you evaluate* (quote a), (quote b), and (quote c)??
2015-11-06T04:17:20Z Xach: yes.
2015-11-06T04:17:25Z marusich: That makes sense to me
2015-11-06T04:17:36Z marusich: So there  is no concept of a "list symbol"?
2015-11-06T04:17:53Z tmtwd quit (Quit: Leaving)
2015-11-06T04:17:54Z Xach: there is a symbol by that name
2015-11-06T04:17:58Z resttime: LIST is a symbol
2015-11-06T04:18:07Z marusich: loke, thank you for the link; I'll take a peek at it.
2015-11-06T04:18:14Z Xach: but a list, the object, is not a symbol
2015-11-06T04:18:21Z jleija quit (Quit: leaving)
2015-11-06T04:18:42Z Xach: well, NIL is a symbol and a list, but nil is so very special in common lisp.
2015-11-06T04:18:52Z marusich: What I mean is, I'm curious to know if there are multiple symbols for the multiple lists you might have floating around in a program. A symbol to refer to the list (1 2 3), another to refer to (a b c), etc. Is that so?
2015-11-06T04:19:21Z resttime: Only through lexical binding I suppose
2015-11-06T04:19:23Z marusich: Since you said '(1 2 3) evaluates to a list of symbols, not to a symbol itself, I suspect the answer may be "no"
2015-11-06T04:19:51Z resttime: (let ((a '(1 2 3))) a) -> (1 2 3)
2015-11-06T04:21:06Z marusich: I see. Another point of confusion for me is that sometimes, it's hard to tell if the output in my REPL is referring to a symbol or the referent of that symbol. E.g., '(1 2 3) -> (1 2 3), but is that the number 1 or the symbol? (the symbol,  I think)
2015-11-06T04:21:21Z marusich: Is that just something I'll have to get used to with most REPLs out there?
2015-11-06T04:21:42Z cyphase__ joined #lisp
2015-11-06T04:21:46Z Bike: i think you're overestimating what a symbol is
2015-11-06T04:22:18Z marusich: How's that? I'm definitely thinking about it more than most people might, since I'm trying to make sure I understand it correctly.
2015-11-06T04:22:35Z Bike: a symbol is basically just a string, or more intuitively a "name"
2015-11-06T04:22:45Z Xach: marusich: lists, symbols, numbers, etc. have certain syntax that the reader understands.
2015-11-06T04:22:48Z Bike: it's read by typing the name, and it's output as the name
2015-11-06T04:23:04Z Xach: marusich: when you learn a little of the syntax you can understand exactly what the repl is displaying. usually.
2015-11-06T04:23:08Z Bike: but if you just type 1 you'll get a number, which is not a symbol, and if you type (a b c) you'll get a list of symbols, which is not a symbol
2015-11-06T04:23:20Z leafybas_ joined #lisp
2015-11-06T04:24:35Z kp666 joined #lisp
2015-11-06T04:24:47Z cyphase__ quit (Max SendQ exceeded)
2015-11-06T04:24:55Z resttime: (+ 1 2) -> Reads as (+ 1 2) -> Evals as 3 -> Prints as 3
2015-11-06T04:25:36Z marusich: So how would it look for (quote 1)?
2015-11-06T04:26:05Z Bike: (quote 1) -> reads as (quote 1) -> evals as 1 (a number) -> prints as 1
2015-11-06T04:26:24Z marusich: Why does it not eval as the symbol 1?
2015-11-06T04:26:25Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-06T04:26:36Z Xach: marusich: because of the rules of symbol syntax baked into the reader.
2015-11-06T04:26:42Z resttime: Hmmm, I think your confusion is QUOTE doesn't return a symbol but as the argument without EVAL.
2015-11-06T04:26:46Z Bike: it reads as the list with first element the symbol "quote", and the second element the number 1
2015-11-06T04:26:52Z Bike: quote doesn't know anything about symbols
2015-11-06T04:27:13Z Bike: when you evaluate a list with first element "quote" and second element anything, the second element is the result
2015-11-06T04:27:56Z leafybas_ quit (Ping timeout: 265 seconds)
2015-11-06T04:28:12Z Xach: that is different from "normal" rules, which say: evaluate everything after the first element, then treat the first element as a function to be called with the evaluated arugments.
2015-11-06T04:28:31Z Vulfe joined #lisp
2015-11-06T04:28:53Z marusich: Bike, so does that mean that the loop for (quote a) goes: read as (quote a) (in here, a is a symbol), eval as a (the symbol), prints as a?
2015-11-06T04:29:00Z faalentijn quit (Ping timeout: 272 seconds)
2015-11-06T04:29:10Z Bike: yes, (quote a) evaluates to a
2015-11-06T04:29:18Z marusich: I see
2015-11-06T04:29:34Z marusich: I think that may be where I was getting confused the most;  I had assumed that quote receives whatever a evaluates to
2015-11-06T04:29:44Z Bike: no, as xach said, quote is special
2015-11-06T04:29:58Z marusich: I see.
2015-11-06T04:29:59Z Bike: pretty much everything else would "receive" whatever a evaluates to
2015-11-06T04:30:07Z loke: That's what is called a "special form". There are a handful of those.
2015-11-06T04:30:14Z Bike: e.g. (+ a b) is read as (+ a b), evaluates as what a evaluates to plus what b evaluates to
2015-11-06T04:30:21Z resttime: marusich: Say my name.
2015-11-06T04:30:26Z resttime: Say "my name."
2015-11-06T04:30:36Z Xach: the magic of quoting!
2015-11-06T04:30:40Z Xach: special!
2015-11-06T04:30:50Z marusich: Yeah, I didn't realize that it was a special form. That makes more sense. Thank you for the explanation; I think I understand now.
2015-11-06T04:31:01Z marusich: At the ver least, that should be enough to un-block me!  Thank you
2015-11-06T04:31:02Z Bike: before you know it you'll be mainlining quines in a dive bar in vienna
2015-11-06T04:31:18Z _sjs quit (Ping timeout: 260 seconds)
2015-11-06T04:33:23Z Vulfe quit (Ping timeout: 244 seconds)
2015-11-06T04:33:49Z _sjs joined #lisp
2015-11-06T04:37:06Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T04:38:11Z cpc26 joined #lisp
2015-11-06T04:38:15Z faalentijn joined #lisp
2015-11-06T04:41:00Z yrdz quit (Read error: Connection reset by peer)
2015-11-06T04:41:16Z yrdz joined #lisp
2015-11-06T04:42:11Z pillton: Bike: Now that is a road to lisp.
2015-11-06T04:42:47Z raphaelss joined #lisp
2015-11-06T04:45:12Z beach joined #lisp
2015-11-06T04:45:22Z beach: Good morning everyone!
2015-11-06T04:49:42Z EvW joined #lisp
2015-11-06T04:52:28Z cyphase__ joined #lisp
2015-11-06T04:52:39Z pyon quit (Quit: Angels fall, all for you, heretic! Demon heart, bleed for us! (My soul is yours, Dark Master. I will fight for you.))
2015-11-06T04:53:35Z kristof quit (Ping timeout: 264 seconds)
2015-11-06T04:54:11Z EvW quit (Ping timeout: 264 seconds)
2015-11-06T04:54:18Z pyon joined #lisp
2015-11-06T04:58:28Z cyphase__ is now known as cyphase
2015-11-06T04:58:33Z beach: pyon: Dream Theater fan?
2015-11-06T04:58:44Z pyon: beach: Indeed.
2015-11-06T04:58:51Z beach: I recognized the lyrics.
2015-11-06T04:59:04Z peytonien joined #lisp
2015-11-06T05:01:53Z drmeister: Hey beach
2015-11-06T05:02:41Z drmeister: beach - I am running into a problem with funwind_protect (my implementation of unwind-protect that takes a protected form and a cleanup form) - do you have a few minutes to talk about it?
2015-11-06T05:04:23Z beach: I do.
2015-11-06T05:04:40Z malbertife joined #lisp
2015-11-06T05:05:01Z aeth_ is now known as aeth
2015-11-06T05:05:07Z drmeister: I wrote the code so that when an unwind happens in the protected for in the cleanup form the multiple value return value would be saved and then restored after the cleanup form was evaluated.
2015-11-06T05:05:36Z beach: OK.
2015-11-06T05:05:40Z drmeister: In September for some reason (I think because SLDB wouldn't work properly) I commented out the code that saved and restored the return value.
2015-11-06T05:05:54Z drmeister: The commit message only says "fixed unwind-protect problem"
2015-11-06T05:06:33Z drmeister: Fast forward to today and we find that this:   (defun test () (block nil (unwind-protect (return (values 1 2)) (print 10))))
2015-11-06T05:06:46Z drmeister: Doesn't work because the return-from values are lost when (print 10) evaluates.
2015-11-06T05:06:51Z beach: An you can't remember the problem?
2015-11-06T05:07:12Z drmeister: So I uncommented the code that saved/restored the return value and now the case above works but SLDB crashes when I "q"uit out of it.
2015-11-06T05:07:20Z sdothum quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-11-06T05:07:32Z drmeister: I think it had to do with sldb - with what I'm seeing happen now.
2015-11-06T05:07:35Z drmeister: I'm testing it.
2015-11-06T05:08:19Z drmeister: I went into the #clasp logs to see if I talked about it back in september but I can't find anything.
2015-11-06T05:08:22Z beach: Sounds strange.  How can SLDB be influenced by what you do, unless you overwrite its memory.
2015-11-06T05:09:10Z drmeister: I don't know.
2015-11-06T05:09:18Z moei quit (Quit: Leaving...)
2015-11-06T05:09:33Z beach: I guess you might destroy the stack somehow.
2015-11-06T05:10:19Z kobain quit (Ping timeout: 240 seconds)
2015-11-06T05:10:46Z drmeister: But I should save and restore the return value around the cleanup form.   Maybe it is broken somehow.
2015-11-06T05:11:31Z mordocai: How can I force quicklisp to recompile a library?
2015-11-06T05:11:51Z Xach: You can use asdf directly and pass :force t
2015-11-06T05:12:06Z mordocai goes to lookup how to do that
2015-11-06T05:12:14Z beach: drmeister: But the example works, you said?
2015-11-06T05:12:41Z drmeister: The one I just posted works now that I save/restore the return value
2015-11-06T05:13:22Z beach: The only thing I can think of would be if saving/restoring the return values overwrites some memory that it shouldn't.
2015-11-06T05:13:36Z drmeister: When I comment out that code so that I don't save/restore the return value I can (error "foo") and exit sldb over and over again with no problems.
2015-11-06T05:15:44Z drmeister: Yup, and when I turn on the code that saves/restores the return value and I go (error "foo") sldb crashes when I try to quit.
2015-11-06T05:16:09Z beach: Definitely sounds like the stack is trashed.
2015-11-06T05:16:22Z native_killer joined #lisp
2015-11-06T05:16:31Z beach: But then, I don't know how SLDB works.
2015-11-06T05:16:51Z native_killer quit (Max SendQ exceeded)
2015-11-06T05:16:57Z drmeister: but the test case:   (defun test () (block nil (unwind-protect (return (values 1 2)) (print 10))))     works fine.
2015-11-06T05:17:17Z beach: I understand.
2015-11-06T05:17:38Z drmeister: I'm going to push the code that breaks sldb and maybe stassats has an idea or recalls what was going on in September.
2015-11-06T05:17:49Z beach: Maybe it is possible to find out what action SLDB takes for quit.
2015-11-06T05:18:11Z drmeister: Tomorrow I'll look through the code and try and figure out why it's crashing.
2015-11-06T05:18:13Z beach: Doesn't SLDB run in a separate process like GDB?
2015-11-06T05:18:20Z drmeister: I don't think so.
2015-11-06T05:18:53Z beach: Ah, then it is vulnerable to someone trashing its memory.
2015-11-06T05:20:47Z drmeister: I'll check with stassats tomorrow
2015-11-06T05:21:04Z beach: Yeah.  Sorry, I am not of much help here.
2015-11-06T05:24:16Z leafybas_ joined #lisp
2015-11-06T05:25:15Z raphaelss quit (Remote host closed the connection)
2015-11-06T05:25:18Z whiteline quit (Ping timeout: 260 seconds)
2015-11-06T05:25:22Z drmeister: Thank you though - I'll check with stas - he knows how Slime/sldb "q" works
2015-11-06T05:26:01Z Nikotiini quit (Remote host closed the connection)
2015-11-06T05:26:28Z beach: Oh, SLIME debugger.  For some reason I was thinking of LLVM debugger.
2015-11-06T05:26:41Z beach: That's LLDB isn't it.  Duh!
2015-11-06T05:27:33Z beach: The SLIME debugger only invokes one of your restarts I would think.
2015-11-06T05:28:26Z leafybas_ quit (Ping timeout: 240 seconds)
2015-11-06T05:28:57Z beach: Then you might just write some code that invokes the same restart as SLDB does.
2015-11-06T05:29:04Z beach: Then you have a test case.
2015-11-06T05:30:44Z peytonien quit (Quit: leaving)
2015-11-06T05:33:19Z ramky joined #lisp
2015-11-06T05:36:07Z joshe quit (Ping timeout: 250 seconds)
2015-11-06T05:36:33Z lnostdal quit (Ping timeout: 246 seconds)
2015-11-06T05:38:34Z oleo_ quit (Quit: Verlassend)
2015-11-06T05:42:47Z Harag quit (Ping timeout: 264 seconds)
2015-11-06T05:43:55Z Raimondi joined #lisp
2015-11-06T05:45:42Z OrangeShark quit (Quit: Leaving)
2015-11-06T05:47:39Z pjb: marusich: A symbol named "1" would be represented as: \1  The integer one would be represented as: 1
2015-11-06T05:48:31Z pjb: marusich: Other representations of \1 include |1|, and other representations of 1 include 1/1: (quote (\1 |1| 1 1/1)) #| --> (|1| |1| 1 1) |#
2015-11-06T05:48:47Z pjb: marusich: (mapcar 'type-of (quote (\1 |1| 1 1/1))) #| --> (symbol symbol bit bit) |#
2015-11-06T05:48:55Z pt1 joined #lisp
2015-11-06T05:49:55Z ryu0: pjb: how unusual. reminds me of regular expression back references.
2015-11-06T05:50:02Z lnostdal joined #lisp
2015-11-06T05:50:04Z beach left #lisp
2015-11-06T05:50:13Z pjb: marusich: notice: (setf *read-base* 2)  (mapcar 'type-of '(0 1 2 3 4 5)) #| --> (bit bit symbol symbol symbol symbol) |#
2015-11-06T05:51:13Z pjb: 1. is also another representation of one, expressed in base ten.
2015-11-06T05:51:23Z pjb: (setf *read-base* 10.)
2015-11-06T05:55:19Z cpc26 quit (Ping timeout: 240 seconds)
2015-11-06T05:55:19Z cpc26_ joined #lisp
2015-11-06T05:55:24Z DrCode quit (Quit: ZNC - http://znc.in)
2015-11-06T05:56:01Z mordocai quit (Read error: Connection reset by peer)
2015-11-06T05:59:43Z DrCode joined #lisp
2015-11-06T06:02:32Z schaueho joined #lisp
2015-11-06T06:06:50Z Niac quit (Read error: Connection reset by peer)
2015-11-06T06:06:50Z pt1 quit (Remote host closed the connection)
2015-11-06T06:08:07Z johann_ quit (Remote host closed the connection)
2015-11-06T06:11:27Z Niac joined #lisp
2015-11-06T06:14:50Z ovx999 joined #lisp
2015-11-06T06:18:07Z thodg quit (Ping timeout: 246 seconds)
2015-11-06T06:20:04Z Vulfe joined #lisp
2015-11-06T06:20:41Z FreeBirdLjj quit (Read error: Connection timed out)
2015-11-06T06:24:30Z Vulfe quit (Ping timeout: 246 seconds)
2015-11-06T06:24:47Z otjura joined #lisp
2015-11-06T06:27:10Z otjura quit (Client Quit)
2015-11-06T06:27:44Z araujo joined #lisp
2015-11-06T06:27:44Z araujo quit (Changing host)
2015-11-06T06:27:44Z araujo joined #lisp
2015-11-06T06:28:26Z araujo quit (Max SendQ exceeded)
2015-11-06T06:28:29Z fantazo joined #lisp
2015-11-06T06:36:23Z FreeBirdLjj joined #lisp
2015-11-06T06:36:54Z vlatkoB joined #lisp
2015-11-06T06:41:41Z happy-dude quit (Quit: Connection closed for inactivity)
2015-11-06T06:45:41Z shookees joined #lisp
2015-11-06T06:47:35Z schaueho quit (Ping timeout: 264 seconds)
2015-11-06T06:47:55Z pt1 joined #lisp
2015-11-06T06:48:00Z nydel joined #lisp
2015-11-06T06:57:44Z briantrice quit (Quit: briantrice)
2015-11-06T06:59:55Z ramky quit (Read error: Connection reset by peer)
2015-11-06T07:02:12Z Shinmera joined #lisp
2015-11-06T07:02:38Z fantazo quit (Quit: Verlassend)
2015-11-06T07:02:54Z jason_m quit (Ping timeout: 272 seconds)
2015-11-06T07:06:26Z phoe_krk quit (Quit: phoe_krk)
2015-11-06T07:08:21Z cods_ is now known as cods
2015-11-06T07:08:32Z cods quit (Changing host)
2015-11-06T07:08:32Z cods joined #lisp
2015-11-06T07:08:55Z johann_ joined #lisp
2015-11-06T07:10:31Z faalentijn quit (Ping timeout: 252 seconds)
2015-11-06T07:13:33Z johann_ quit (Ping timeout: 244 seconds)
2015-11-06T07:14:47Z resttime quit (Quit: Bye bye!)
2015-11-06T07:15:35Z aap_ is now known as aap
2015-11-06T07:23:53Z LilSusieCrabCake joined #lisp
2015-11-06T07:32:11Z sunwukong quit (Quit: Leaving)
2015-11-06T07:33:13Z Cymew joined #lisp
2015-11-06T07:33:13Z moei joined #lisp
2015-11-06T07:36:02Z flambard joined #lisp
2015-11-06T07:36:10Z tralala joined #lisp
2015-11-06T07:40:46Z freehck joined #lisp
2015-11-06T07:41:45Z malbertife quit (Ping timeout: 265 seconds)
2015-11-06T07:46:14Z HDurer quit (Ping timeout: 260 seconds)
2015-11-06T07:48:39Z cmack joined #lisp
2015-11-06T07:48:41Z NeverDie quit (Quit: http://radiux.io/)
2015-11-06T07:51:18Z snv joined #lisp
2015-11-06T07:52:26Z defaultxr quit (Quit: gnight)
2015-11-06T07:53:16Z faalentijn joined #lisp
2015-11-06T07:56:39Z HDurer joined #lisp
2015-11-06T07:57:38Z ASau quit (Remote host closed the connection)
2015-11-06T07:58:06Z ASau joined #lisp
2015-11-06T07:59:03Z Harag joined #lisp
2015-11-06T07:59:43Z mishoo joined #lisp
2015-11-06T08:02:26Z ramky joined #lisp
2015-11-06T08:02:40Z _cosmonaut_ joined #lisp
2015-11-06T08:03:27Z Harag quit (Ping timeout: 250 seconds)
2015-11-06T08:03:36Z _cosmonaut_ quit (Remote host closed the connection)
2015-11-06T08:04:57Z _cosmonaut_ joined #lisp
2015-11-06T08:07:24Z mrSpec joined #lisp
2015-11-06T08:08:32Z faalentijn quit (Ping timeout: 250 seconds)
2015-11-06T08:09:42Z johann_ joined #lisp
2015-11-06T08:11:35Z faalentijn joined #lisp
2015-11-06T08:13:14Z solyd joined #lisp
2015-11-06T08:14:25Z cadadar joined #lisp
2015-11-06T08:14:42Z johann_ quit (Ping timeout: 260 seconds)
2015-11-06T08:15:49Z jlarocco_ quit (Quit: Leaving)
2015-11-06T08:23:25Z mvilleneuve joined #lisp
2015-11-06T08:27:43Z ramky quit (Ping timeout: 250 seconds)
2015-11-06T08:28:35Z ramky joined #lisp
2015-11-06T08:31:59Z HDurer quit (Ping timeout: 264 seconds)
2015-11-06T08:33:21Z ZabaQ joined #lisp
2015-11-06T08:33:56Z araujo joined #lisp
2015-11-06T08:34:39Z araujo quit (Max SendQ exceeded)
2015-11-06T08:35:05Z reg_ quit (Remote host closed the connection)
2015-11-06T08:35:18Z araujo joined #lisp
2015-11-06T08:40:33Z attila_lendvai joined #lisp
2015-11-06T08:40:33Z attila_lendvai quit (Changing host)
2015-11-06T08:40:33Z attila_lendvai joined #lisp
2015-11-06T08:41:01Z ZabaQ quit (Read error: No route to host)
2015-11-06T08:41:04Z HDurer joined #lisp
2015-11-06T08:44:10Z mea-culpa joined #lisp
2015-11-06T08:48:06Z zacharias_ quit (Ping timeout: 244 seconds)
2015-11-06T08:51:32Z TMM quit (Quit: Ex-Chat)
2015-11-06T08:53:36Z faalentijn quit (Ping timeout: 250 seconds)
2015-11-06T08:54:17Z EvW joined #lisp
2015-11-06T08:56:53Z Vulfe joined #lisp
2015-11-06T08:58:30Z EvW quit (Ping timeout: 246 seconds)
2015-11-06T08:58:59Z quazimodo quit (Ping timeout: 240 seconds)
2015-11-06T08:59:08Z ZabaQ joined #lisp
2015-11-06T09:01:32Z Vulfe quit (Ping timeout: 244 seconds)
2015-11-06T09:04:10Z harish quit (Ping timeout: 240 seconds)
2015-11-06T09:05:18Z seg joined #lisp
2015-11-06T09:06:11Z xrash joined #lisp
2015-11-06T09:08:21Z gniourf joined #lisp
2015-11-06T09:10:29Z johann_ joined #lisp
2015-11-06T09:12:02Z xaotuk joined #lisp
2015-11-06T09:12:06Z ASau quit (Ping timeout: 272 seconds)
2015-11-06T09:12:20Z Harag joined #lisp
2015-11-06T09:12:45Z tsoutseki joined #lisp
2015-11-06T09:14:07Z faalentijn joined #lisp
2015-11-06T09:14:57Z johann_ quit (Ping timeout: 255 seconds)
2015-11-06T09:20:19Z dilated_dinosaur quit (Ping timeout: 240 seconds)
2015-11-06T09:24:04Z easye: "native" voice recognition in our lingua franca?  I need a non-internet connected recognition of about 64 spoken "words".  I plan to make it so the user can train the recognition locally.
2015-11-06T09:24:08Z tsoutseki quit (Quit: Leaving)
2015-11-06T09:24:47Z leafybas_ joined #lisp
2015-11-06T09:25:27Z cmack quit (Ping timeout: 252 seconds)
2015-11-06T09:25:38Z Harag quit (Ping timeout: 260 seconds)
2015-11-06T09:26:10Z pjb: easye: what about asking siri about it?
2015-11-06T09:26:34Z easye ain't paying that AAPL tax currently.
2015-11-06T09:27:02Z cmack joined #lisp
2015-11-06T09:27:04Z pjb: or google or samsung's equivalent.
2015-11-06T09:27:16Z easye: The easiest thing would be to CFFI somebody's C/C++ library.
2015-11-06T09:27:18Z pjb: Or else, you can just type common lisp speach recognition in google. https://sourceforge.net/projects/cl-asr/
2015-11-06T09:27:31Z pjb: speech, works better without typoes.
2015-11-06T09:27:48Z easye: ASR looks like the ticket.  Thanks!
2015-11-06T09:28:31Z angavrilov joined #lisp
2015-11-06T09:29:09Z easye: although <http://sourceforge.net/projects/cl-asr/files/?source=navbar> is empty...
2015-11-06T09:29:16Z randommelon joined #lisp
2015-11-06T09:29:23Z pjb: there may be a svn or git repo?
2015-11-06T09:29:28Z knobo joined #lisp
2015-11-06T09:29:35Z leafybas_ quit (Ping timeout: 264 seconds)
2015-11-06T09:29:36Z easye: Don't see one.
2015-11-06T09:30:00Z easye: minion: location of ASR?
2015-11-06T09:30:00Z minion: does torturing a poor bot with things beyond its comprehension please you?
2015-11-06T09:30:38Z TMM joined #lisp
2015-11-06T09:31:52Z easye: Cool.  No source.  I can try to do it myself.
2015-11-06T09:32:09Z easye always wanted to code wavelets in a language other than assembly.
2015-11-06T09:32:31Z pjb: Author seems to be: http://www.cs.cmu.edu/~belamber/ You could ask him directly?
2015-11-06T09:32:47Z jackdaniel: (defmacro wavelet (&body body) `(with-asm ,@body)) ; ? :)
2015-11-06T09:33:01Z easye: jackdaniel: heh
2015-11-06T09:33:14Z Niac quit (Quit: Lost terminal)
2015-11-06T09:33:44Z easye: Time to dust off the emails of the CMU people I might know.
2015-11-06T09:34:24Z jackdaniel: sphinx (not CL though) seems to be actively developed
2015-11-06T09:35:10Z jackdaniel: sphinx4 is java and pocketsphinx is C so the first would be a nice fit for ABCL while the latter for any CFFI compat implementation
2015-11-06T09:35:34Z easye: Yep.  Sphinx <http://cmusphinx.sourceforge.net/wiki/download> looks plausibly like something I would try to wrap in the loving embrace of CFFI.
2015-11-06T09:35:55Z pjb: That definitely looks like a garbage collected project :-(
2015-11-06T09:36:03Z easye: Yeah.  If you can the the JVM runtime up, the ABCL/JNA bridge is remarkably efficient.
2015-11-06T09:36:35Z pjb: You see why there's so much NIH in lisp… It's easier to just rewrite it than track libraries…
2015-11-06T09:36:47Z randommelon left #lisp
2015-11-06T09:36:48Z easye: Problem for me is that ABCL drags on a RPI 2 B (4x ARM core / 1 Gib RAM)
2015-11-06T09:36:56Z easye: So, I'm using sbcl.
2015-11-06T09:37:07Z easye: "Good enough for government work."
2015-11-06T09:37:25Z easye should check out ECL.
2015-11-06T09:37:31Z jackdaniel: do it \o/
2015-11-06T09:37:41Z jackdaniel: threads work on arm boards
2015-11-06T09:37:51Z Karl_Dscc joined #lisp
2015-11-06T09:37:53Z jackdaniel: regarding your earlier question on #sbcl
2015-11-06T09:38:29Z easye: Oh.  Do they?  #sbcl claimed that stassats thinks the current RPI boards don't have enough registers to "do" threads efficiently.
2015-11-06T09:39:08Z easye: ARM64 has enough registers, so that's what you should target.
2015-11-06T09:39:10Z jackdaniel: ECL takes another approach - it hooks into pthreads (and windows threads for windows platform)
2015-11-06T09:39:30Z easye: Sure.
2015-11-06T09:39:37Z jackdaniel: so you have threads on any unix supporting pthreads
2015-11-06T09:39:40Z easye: And we have gcc-4.9 which is a fine compiler.
2015-11-06T09:39:51Z easye: "We" == arm32 community
2015-11-06T09:40:08Z easye: As much as Linux supports threads...
2015-11-06T09:40:39Z vaporatorius__ quit (Ping timeout: 240 seconds)
2015-11-06T09:40:39Z easye: And ECL's default GC is Boehm?
2015-11-06T09:40:51Z jackdaniel: default and the only one working for now
2015-11-06T09:41:01Z easye: Fine.  Thanks for the info!
2015-11-06T09:41:06Z jackdaniel: sure :-)
2015-11-06T09:42:25Z jackdaniel: before the next release I want to also bring the alternative interface for green threads (removed long time ago)
2015-11-06T09:44:42Z cmack quit (Ping timeout: 246 seconds)
2015-11-06T09:50:39Z ovx999 quit (Ping timeout: 246 seconds)
2015-11-06T09:52:17Z cadadar quit (Quit: Leaving.)
2015-11-06T09:52:21Z zacharias_ joined #lisp
2015-11-06T09:55:24Z easye: jackdaniel: +1 on an altenate "Green" threads implementation  sometimes you want to be correct more than you wish to be fleet.
2015-11-06T09:57:44Z jackdaniel: and green threads are really lightweight what is a big plus if you spawn gazzilion threads
2015-11-06T09:58:41Z easye: Yep.  I don't think I used anything but a green thread implementation before 1999 in Java.
2015-11-06T10:00:09Z easye: So, why doesn't SBCL have a green threads implementation?
2015-11-06T10:00:32Z heddwch quit (Read error: Connection reset by peer)
2015-11-06T10:00:39Z easye: "to fall back upon"
2015-11-06T10:00:40Z jackdaniel: I don't know, CMU CL has them afair
2015-11-06T10:00:51Z knobo quit (Ping timeout: 255 seconds)
2015-11-06T10:01:07Z jackdaniel: I want to give green threads a separate api so they may work side-by-side with the native threads
2015-11-06T10:01:24Z easye nods.  Yep.
2015-11-06T10:01:51Z jackdaniel: and maybe write for bordeaux-threads second implementation and the one which would be picked would depend on, idk, *threads-model*
2015-11-06T10:02:08Z easye: Try to refactor out hte need for a special?
2015-11-06T10:02:43Z easye: Think of the CPS abstraction a call is made within?
2015-11-06T10:03:11Z jackdaniel: I mean that you would be able to spawn two kinds of threads in the same process
2015-11-06T10:03:13Z easye: Scratch that.  Not sure that makes sense.
2015-11-06T10:03:23Z easye: Fine.
2015-11-06T10:03:35Z easye: As long as Bordeaux-Threads can abstract.
2015-11-06T10:04:06Z jackdaniel: yeah, I'm not sure if such switching would be a good idea
2015-11-06T10:04:16Z leafybas_ joined #lisp
2015-11-06T10:04:19Z heddwch joined #lisp
2015-11-06T10:04:21Z easye: I'm trying to think of a way you could avoid needing to define another implementation in BT.
2015-11-06T10:04:25Z jackdaniel: but it's something I'll definetely think about when finish support in ECL
2015-11-06T10:04:34Z easye: Not sure it you could do it, but it would be a neat hack.
2015-11-06T10:05:06Z jackdaniel: if I want to present the separate api then implementation will be necessary if want to support from BT
2015-11-06T10:05:38Z easye: Sure.
2015-11-06T10:07:00Z jackdaniel: there is also https://github.com/thezerobit/green-threads - I could write a separate backend for it and write a special backend in BT for GT
2015-11-06T10:07:38Z jackdaniel: so one could just request green threads from BT for any implementation
2015-11-06T10:07:44Z easye: Do you have applications in mind that you could test?
2015-11-06T10:08:34Z jackdaniel: yeah - each native thread provides heap and is a VM for a set of the green threads (something erlang-like)
2015-11-06T10:09:20Z easye: Suggestion: set up the thing you want to test, possibly swap implememtations on it.  Iterate.
2015-11-06T10:09:23Z leafybas_ quit (Remote host closed the connection)
2015-11-06T10:09:41Z leafybas_ joined #lisp
2015-11-06T10:09:51Z jackdaniel: but if you mean like end-user application - no, I don't. Just find it fun and nice thing to do
2015-11-06T10:11:01Z yrdz quit (Read error: Connection reset by peer)
2015-11-06T10:11:13Z johann_ joined #lisp
2015-11-06T10:11:17Z ryan_vw quit (Ping timeout: 244 seconds)
2015-11-06T10:11:17Z yrdz joined #lisp
2015-11-06T10:11:30Z ryan_vw joined #lisp
2015-11-06T10:11:48Z hyoyoung_ quit (Ping timeout: 244 seconds)
2015-11-06T10:12:02Z hyoyoung joined #lisp
2015-11-06T10:14:39Z leafybas_ quit (Remote host closed the connection)
2015-11-06T10:15:56Z johann_ quit (Ping timeout: 244 seconds)
2015-11-06T10:18:14Z myrkraverk joined #lisp
2015-11-06T10:18:21Z Karl_Dscc quit (Remote host closed the connection)
2015-11-06T10:18:42Z myrkraverk: Is there lispism for "the directory this .cl file is in" ?
2015-11-06T10:18:58Z myrkraverk: Kind of like $ORIGIN and ldload.
2015-11-06T10:19:18Z Shinmera: *compile-file-pathname* and *load-pathname*.
2015-11-06T10:19:47Z Shinmera: Well, that'll give you the path of course. You then have to turn it into a directory with (make-pathname :name NIL :type NIL :defaults ..)
2015-11-06T10:19:56Z Shinmera: *path to the file
2015-11-06T10:20:31Z Shinmera: If you're using ASDF you can also rely on (asdf:system-source-directory :my-system) or asdf:system-relative-pathname.
2015-11-06T10:24:49Z quazimodo joined #lisp
2015-11-06T10:29:17Z FreeBird_ joined #lisp
2015-11-06T10:29:23Z myrkraverk: I'm not using ASDF, I'm just trying to load a .so file in the same directory.  Maybe this works.
2015-11-06T10:31:07Z Shinmera: #.(or *compile-file-truename* *load-truename*) should do fine for that.
2015-11-06T10:31:18Z Shinmera: (or -pathname, if you want a pathname)
2015-11-06T10:32:32Z FreeBirdLjj quit (Ping timeout: 272 seconds)
2015-11-06T10:32:36Z leafybas_ joined #lisp
2015-11-06T10:33:08Z leafybas_ quit (Remote host closed the connection)
2015-11-06T10:33:34Z leafybas_ joined #lisp
2015-11-06T10:35:00Z FreeBird_ quit (Ping timeout: 250 seconds)
2015-11-06T10:38:02Z preacherAKAnd joined #lisp
2015-11-06T10:39:57Z EvW joined #lisp
2015-11-06T10:43:35Z faalentijn quit (Ping timeout: 260 seconds)
2015-11-06T10:44:21Z quazimodo quit (Ping timeout: 244 seconds)
2015-11-06T10:45:02Z whiteline joined #lisp
2015-11-06T10:48:11Z sjl quit (Ping timeout: 264 seconds)
2015-11-06T11:00:15Z remi`bd joined #lisp
2015-11-06T11:01:10Z C4K3 joined #lisp
2015-11-06T11:04:51Z quazimodo joined #lisp
2015-11-06T11:05:20Z Guest14 joined #lisp
2015-11-06T11:08:56Z EvW1 joined #lisp
2015-11-06T11:10:19Z EvW quit (Ping timeout: 240 seconds)
2015-11-06T11:10:19Z EvW1 is now known as EvW
2015-11-06T11:10:29Z leafybas_ quit (Read error: Connection reset by peer)
2015-11-06T11:10:45Z leafybas_ joined #lisp
2015-11-06T11:11:06Z solyd quit (Ping timeout: 240 seconds)
2015-11-06T11:12:00Z johann_ joined #lisp
2015-11-06T11:12:25Z ZabaQ quit (Quit: Leaving)
2015-11-06T11:15:51Z eazar001 quit (Ping timeout: 250 seconds)
2015-11-06T11:16:10Z johann_ quit (Ping timeout: 240 seconds)
2015-11-06T11:17:22Z MaggieAndEazar joined #lisp
2015-11-06T11:22:48Z jdz: just to clarify -- in both cases the value is NIL or a pathname
2015-11-06T11:23:28Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T11:24:12Z jdz: clhs 20.1.3
2015-11-06T11:24:12Z specbot: Truenames: http://www.lispworks.com/reference/HyperSpec/Body/20_ac.htm
2015-11-06T11:25:01Z gabriella joined #lisp
2015-11-06T11:25:33Z gabriella: hello :)
2015-11-06T11:27:07Z Karl_Dscc joined #lisp
2015-11-06T11:27:32Z gabriella: you know, I found this:
2015-11-06T11:27:35Z gabriella: Common LISP is the PL/I of Lisps.  Too big and too incomprehensible, with no examiniation of the real world of software engineering. The CL effort resembles a bunch of spoiled children, each insisting "include my feature or I'll pull out, and then we'll all go down the tubes".  Everybody had vested interests, both financial and emotional. CL is a nightmare; it has effectively killed LISP development in this country.  It is not commerc
2015-11-06T11:27:46Z gabriella: no future outside of the traditional academic/defense/research arena.  It should be embarassing to everybody in the field that most shells and tools are no longer written in LISP.
2015-11-06T11:28:27Z Zhivago: A reasonable argument can be made along those lines.
2015-11-06T11:29:20Z gabriella: And also this: "I think CL is the WORST thing that could possibly happen to LISP. In fact, I consider it a language different from “true” LISP."
2015-11-06T11:29:44Z pjb: It's also the best thing that occured to lisp. Without Common Lisp, lisp would be dead by now.
2015-11-06T11:30:25Z pjb: You can consider CL to be the seed vault of lisp during the AI winter.
2015-11-06T11:30:46Z gabriella: pjb: CL is doomed to death anyway.
2015-11-06T11:30:52Z pjb: Just like you.
2015-11-06T11:30:58Z pjb: But I'll bet on you first.
2015-11-06T11:31:08Z gabriella: pjb: and you :)
2015-11-06T11:31:14Z pjb: yes, and me before.
2015-11-06T11:31:20Z LilSusieCrabCake quit (Ping timeout: 265 seconds)
2015-11-06T11:31:24Z pjb: So AFAIAC, lisp is eternal.
2015-11-06T11:32:08Z gabriella: but me is not like CL, because "Common Lisp did kill Lisp. Period. (just languages take a long time dying …) It is to Lisp what C++ is to C. A monstrosity that totally ignores the basics of language design, simplicity and orthogonality to begin with."
2015-11-06T11:32:44Z faalentijn joined #lisp
2015-11-06T11:33:13Z pjb: gabriella: this is just a lie that CL killed lisp. If you want to write a vlisp or a xlisp or a EuLisp program, you can.
2015-11-06T11:33:29Z pjb: Just fetch the sources of those implementation in some archive, port it on linux and go ahead!
2015-11-06T11:33:42Z mprelude: Last I checked, C++ is still doing pretty well, gabriella.
2015-11-06T11:33:51Z pjb: Even LISP 1.5 sources are available and you can make them run on a 7090 emulator.
2015-11-06T11:34:07Z halfcrazy quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T11:35:05Z gabriella: pjb: lie? "Every decision of the committee can be locally rationalized as the right thing. We believe that the sum of these decisions, however, has produced something greater than its parts; an unwieldy, overweight beast, with signiﬁcant costs (especially on other than micro-codable personal Lisp engines) in compiler size and speed, in runtime performance, in programmer overhead needed to produce eﬃcient programs, and in intellect
2015-11-06T11:35:17Z gabriella: wishing to be a proﬁcient COMMON LISP programmer.
2015-11-06T11:35:21Z gabriella: "
2015-11-06T11:35:39Z C4K3 quit (Remote host closed the connection)
2015-11-06T11:35:39Z xrash quit (Read error: Connection reset by peer)
2015-11-06T11:36:22Z jdz: gabriella: do you have a point?
2015-11-06T11:37:06Z _death: WJ found out about IRC?
2015-11-06T11:37:24Z mprelude: gabriella: Feel free to create an alternative specification which better matches the needs of modern programming in a lisp-esque way. I'd be genuinely interested in trying alternatives, I've already played with several other functional languages. Unfortunately, bemoaning the supposed shortcomings of a language is just ignorant of the fact that all languages have them -- and the biggest shortcoming of cl is a
2015-11-06T11:37:26Z mprelude: lack of an extensive set of documented libraries, which would only be made worse by a further division in lisp specifications.
2015-11-06T11:37:47Z mprelude: That probably didn't make much sense, I'm very tired. Hopefully someone got my point. :)
2015-11-06T11:39:09Z gabriella: mprelude: I have no so much time and bucks to create specification... The time is lost.
2015-11-06T11:39:15Z xrash joined #lisp
2015-11-06T11:44:44Z cadadar joined #lisp
2015-11-06T11:46:42Z DGASAU quit (Ping timeout: 260 seconds)
2015-11-06T11:47:22Z preacher-aka-nd joined #lisp
2015-11-06T11:48:44Z quasus joined #lisp
2015-11-06T11:48:51Z preacher-aka-nd quit (Remote host closed the connection)
2015-11-06T11:49:27Z preacherAKAnd quit (Ping timeout: 244 seconds)
2015-11-06T11:50:50Z DGASAU joined #lisp
2015-11-06T11:50:54Z gabriella: mprelude: the biggest shortcoming of CL - its enormous size and complexity, which are without micro-coded support make CL suck
2015-11-06T11:50:57Z pillton quit (Remote host closed the connection)
2015-11-06T11:51:21Z guaqua: dunno. i think there are plenty of good common lisp implementations
2015-11-06T11:51:24Z guaqua: reasonably fast
2015-11-06T11:51:30Z guaqua: reasonably stable
2015-11-06T11:52:07Z guaqua: talking about microcode-cpus and common lisp is a bit like talking about how jvm sucks because its jit-compilation is complicated
2015-11-06T11:52:20Z guaqua: common lisp still kicks ass without the microcode
2015-11-06T11:52:29Z Nikotiini joined #lisp
2015-11-06T11:52:37Z guaqua: jvm still kicks ass even though its jit-compilation is not for the faint of heart
2015-11-06T11:52:39Z jdz: gabriella: i love the CL size and complexity because otherwise the complexity ends up in user programs, many times over
2015-11-06T11:53:14Z ramky quit (Ping timeout: 260 seconds)
2015-11-06T11:53:27Z guaqua: it's not simple nor easy, but that can be said of any reasonably complex system people build
2015-11-06T11:53:30Z gabriella: guaqua: other big problem - there are very very few Lisp hackers. If you are talking about Java, then you must know the number of Java programmers available.
2015-11-06T11:54:01Z guaqua: that's more of a HR and management problem, not availability of developers
2015-11-06T11:54:16Z jdz: haha, all CL programmers I personally know are smart people; cannot say the same about the Java programmers.
2015-11-06T11:54:20Z gabriella: guaqua: no, it's a CL problem, not HR.
2015-11-06T11:54:29Z gabriella: jdz: lol
2015-11-06T11:54:32Z guaqua: it's almost as hard to find really skilled java developers than it probably is for common lisp
2015-11-06T11:54:57Z guaqua: any skilled developer can learn another environment and thrive in it. best developers look for challenges and learning experiences
2015-11-06T11:55:35Z guaqua: if you want average and you have high employee churn rate, you probably are better off with java
2015-11-06T11:55:54Z guaqua: if you instead would like to build for the long term, you want skilled people to stay
2015-11-06T11:56:18Z guaqua: and of course, most companies are probably in the high-developer-churn category so they might actually be better off with java
2015-11-06T11:56:20Z guaqua: who knows
2015-11-06T11:56:29Z guaqua: i'm not especially drawn to that kind of companies personally
2015-11-06T11:57:18Z gabriella: guaqua: you lie. Many very popular startups written not in CL. Facebook, Twitter, Instagram etc etc. Even Reddit was rewritten. There is no Lisp developers at all.
2015-11-06T11:57:52Z gabriella: Even Clozure lost them. Lol.
2015-11-06T11:58:52Z gabriella: Oh, there is no Lisp developers at all compared to Java or C
2015-11-06T11:58:58Z guaqua: i don't know where i lied? i just stated that you probably are better off with java if you have high developer churn
2015-11-06T11:59:12Z EvW quit (Ping timeout: 255 seconds)
2015-11-06T11:59:17Z guaqua: i.e. if your biggest problem is not your actual domain, but how you can keep your developers
2015-11-06T12:01:23Z gabriella: guaqua: I sad about lie because it seems to me, that all that Lisp propaganda is a big lie.
2015-11-06T12:01:48Z Karl_Dscc quit (Remote host closed the connection)
2015-11-06T12:01:53Z jdz: gabriella: don't listen to "that Lisp propaganda", then?
2015-11-06T12:02:00Z JuanDaugherty quit (Quit: Hibernate, reboot, etc.)
2015-11-06T12:02:20Z sjl joined #lisp
2015-11-06T12:02:34Z jdz: we're here because we enjoy Common Lisp, if that is not the case for you you can safely leave
2015-11-06T12:04:03Z guaqua: just re-eval your channel-list and go, that's the beauty of lisp!
2015-11-06T12:04:06Z Shinmera: I'm glad I didn't miss anything of significance during my lunch break.
2015-11-06T12:04:21Z guaqua: with java you would probably have to wait for minutes for your maven build to finish
2015-11-06T12:04:46Z ramky joined #lisp
2015-11-06T12:05:12Z gabriella: guaqua: it seems to me, that only language that can be considered as useful tool is a C -- small, fast, clean.
2015-11-06T12:05:20Z gabriella: guaqua: Java suck.
2015-11-06T12:05:56Z jdz: gabriella: you're getting really boring now
2015-11-06T12:06:17Z guaqua: is there something for gabriella in the naggum archives? :)
2015-11-06T12:06:48Z gabriella: guaqua: heh, don't touch Erik please.
2015-11-06T12:07:12Z ZabaQ joined #lisp
2015-11-06T12:07:53Z Shinmera: Indeed. It would be pretty indecent and also illegal to touch Erik now.
2015-11-06T12:08:07Z Shinmera: You should, however, read his archived usenet posts.
2015-11-06T12:08:50Z gabriella: Shinmera: I've read it.
2015-11-06T12:08:57Z gabriella: if you talk to me
2015-11-06T12:09:31Z Shinmera: I'm talking to whoever cares to listen.
2015-11-06T12:12:45Z johann_ joined #lisp
2015-11-06T12:17:19Z johann_ quit (Ping timeout: 240 seconds)
2015-11-06T12:20:28Z bjorkintosh quit (Quit: Leaving)
2015-11-06T12:20:53Z bjorkintosh joined #lisp
2015-11-06T12:21:00Z kristof joined #lisp
2015-11-06T12:21:11Z ahungry quit (Ping timeout: 264 seconds)
2015-11-06T12:26:42Z leafyba__ joined #lisp
2015-11-06T12:26:48Z leafybas_ quit (Read error: Connection reset by peer)
2015-11-06T12:29:04Z kristof quit (Ping timeout: 272 seconds)
2015-11-06T12:29:30Z tsoutseki joined #lisp
2015-11-06T12:29:35Z schoppenhauer: hi. hm. I want to run hunchentoot at port 80 on a specific IP. is creating and starting the acceptor as root, then dropping privileges with sb-posix:setgid and setuid, and then loading the rest, a good way to go? the documentation links to another document which in turn recommends "authbind", but authbind does LD_PRELOAD on the glibc, so this will probably not work with sbcl.
2015-11-06T12:30:06Z nyef: What's the matter with glibc?
2015-11-06T12:30:11Z Shinmera: Generally the recommendation is to /not/ expose Hunchentoot to the public and instead proxy it with something like nginx.
2015-11-06T12:30:30Z schoppenhauer: why is this the recommendation?
2015-11-06T12:30:39Z schoppenhauer: what is the advantage?
2015-11-06T12:30:49Z nyef: I know that I looked into this kind of thing once, but I don't remember what I ended up finding. /-:
2015-11-06T12:30:51Z Shinmera: Because Hunchentoot is /slooooooow/ with serving static files, might be insecure in some parts, and handles SSL badly.
2015-11-06T12:30:57Z EvW joined #lisp
2015-11-06T12:31:29Z schoppenhauer: Shinmera: I don't need ssl. and insecurity will not really be mitigated by a proxy server, will it?
2015-11-06T12:31:52Z Shinmera: Well security in relation to HTTP preliminary handling.
2015-11-06T12:32:21Z Xach: I use naked hunchentoot for development and proxied for production.
2015-11-06T12:32:58Z Shinmera: I do as Xach says.
2015-11-06T12:33:04Z gabriella: schoppenhauer: NGINX is event-driven, while Hunchentoot is threaded. So, when latter is behind the former, you site is possibly able to handle much more clients.
2015-11-06T12:33:21Z schoppenhauer: Xach: what advantage does hunchentoot have over, say, a small scgi-layer, then?
2015-11-06T12:33:59Z schoppenhauer: Xach: if I can't really use it as http-server.
2015-11-06T12:34:32Z schoppenhauer: I mean, it *has* a lot of bloat with it. all of the stuff like chunga and cl+ssl could be thrown away, etc.
2015-11-06T12:35:34Z alchemis7 quit (Remote host closed the connection)
2015-11-06T12:35:54Z schoppenhauer: gabriella: how would NGINX be able to handle more clients, if it just forwards to hunchentoot?
2015-11-06T12:35:57Z sjl quit (Quit: WeeChat 1.3)
2015-11-06T12:36:18Z schoppenhauer: Xach: why do you not run hunchentoot without proxy in production?
2015-11-06T12:36:31Z p_l: schoppenhauer: multiple hunchentoots, having nginx handle static files...
2015-11-06T12:36:40Z p_l: schoppenhauer: I don't even run nginx without proxy in production
2015-11-06T12:36:44Z knobo joined #lisp
2015-11-06T12:36:47Z gabriella: schoppenhauer: there is no reason not use NGNIX -- it based on async IO which helps you a lot to avoid unavailability of the site if clients on slow connection or emulate it to attack you site.
2015-11-06T12:37:27Z schoppenhauer: p_l: so what *are* you running in production?
2015-11-06T12:37:57Z schoppenhauer: p_l: also: why multiple hunchentoots? one can have multiple acceptors in the same hunchentoot.
2015-11-06T12:38:21Z gabriella: naive guy :)
2015-11-06T12:38:23Z flip214: schoppenhauer: failure isolation would be my guess
2015-11-06T12:38:25Z p_l: schoppenhauer: in a current project, two nginx behind active/passive haproxy cluster
2015-11-06T12:38:26Z badkins joined #lisp
2015-11-06T12:38:46Z stepnem joined #lisp
2015-11-06T12:39:02Z p_l: SSL is terminated on haproxy, which also proxies other tcp-based protocols (mostly crappy ThriftRPC)
2015-11-06T12:39:09Z _death: schoppenhauer: one answer to your original question is: https://wiki.apache.org/httpd/NonRootPortBinding
2015-11-06T12:40:29Z schoppenhauer: _death: I know about capabilities. but the linux capabilities are inflexible. anyway, I just use a proxy…
2015-11-06T12:41:00Z p_l: so traffic in current $DAYJOB project is 2x firewalls/routers -> 2x switches -> 2x haproxy load-balancers on virtual IP managed by VRRP -> web application -> bunch of backend services
2015-11-06T12:41:10Z XachX: schoppenhauer: much of my traffic is static gifs and pngs so I don't want to waste lisp cycles on things nginx is very good at
2015-11-06T12:41:27Z ehu quit (Read error: Connection reset by peer)
2015-11-06T12:41:34Z XachX: See eg pixelspeechbubble.com
2015-11-06T12:41:41Z schoppenhauer: it's just funny that a question like "I want to run hunchentoot" gets as first answers "hunchentoot is bad ad X, Y, Z, so don't use it"
2015-11-06T12:41:53Z Shinmera: We didn't say that.
2015-11-06T12:42:06Z schoppenhauer: no, but it sounded like that :3
2015-11-06T12:42:15Z gabriella: schoppenhauer: :)
2015-11-06T12:42:28Z gabriella: schoppenhauer: maybe you are right ;)
2015-11-06T12:42:28Z _death: but my personal server also uses hunchentoot w/ front-facing nginx
2015-11-06T12:42:37Z Shinmera: schoppenhauer: Would you rather we lied about its deficiencies?
2015-11-06T12:43:05Z schoppenhauer: (I only use hunchentoot because of path-dependency … I used it when I was a lisp-fanboy, and now it is probably more work to stop using it than to keep it up)
2015-11-06T12:43:16Z p_l: schoppenhauer: difference between web server that is honestly more designed for use by application, and dedicated high-performance web server application)
2015-11-06T12:44:07Z gabriella: schoppenhauer: just curious, what do you intend to use instead of Hunchentoot?
2015-11-06T12:44:23Z gabriella: schoppenhauer: is there better alternative?
2015-11-06T12:44:25Z schoppenhauer: Shinmera: no. but seriously, if I hear that, the question is … why use hunchentoot at all, instead of a small scgi-layer.
2015-11-06T12:44:47Z Shinmera: schoppenhauer: Mostly because it's comfortable for development.
2015-11-06T12:44:55Z Shinmera: That's my case, anyway.
2015-11-06T12:44:58Z BitPuffin joined #lisp
2015-11-06T12:45:03Z schoppenhauer: gabriella: currently, I use it for my blog, only. and it does its job. the other thing I wanted to use it for is under a nda (and I probably will not use it for that)
2015-11-06T12:45:14Z Shinmera: I don't have to bother setting up an http server on all my workstations, I can just quickload my thing and start hacking away.
2015-11-06T12:45:34Z BitPuffin quit (Remote host closed the connection)
2015-11-06T12:45:58Z p_l: schoppenhauer: because nobody wrote scgi layer that would have to handle most of the work that hunchentoot does anyway, and because in general most users seem to be moving away from FCGI or custom webserver-webapp protocols?
2015-11-06T12:46:04Z Shinmera: The framework I use abstracts away Hunchentoot though, so I could also easily switch to some other backend for production if the need arose.
2015-11-06T12:46:25Z BitPuffin joined #lisp
2015-11-06T12:46:45Z schoppenhauer: fun fact: when I was a lisp fanboy, and tried to use hunchentoot without proxy, I wrote https://github.com/dasuxullebt/cl-fuckyou :3
2015-11-06T12:46:51Z gabriella: Shinmera: do you belife youself? :-)
2015-11-06T12:47:16Z schoppenhauer: but nobody liked cl-fuckyou because of its name :(
2015-11-06T12:47:22Z Shinmera: I believe in not taking shit from idiots.
2015-11-06T12:48:13Z schoppenhauer: but, Shinmera's idea of using hunchentoot for testing might give cl-fuckyou a second use in combination with hunchentoot … one could use both to test fastcgi-applications without having a full-blown server application
2015-11-06T12:48:26Z gabriella: schoppenhauer: why you are not a lisp-fanboy anymore?
2015-11-06T12:48:59Z schoppenhauer: gabriella: because I have grown older.
2015-11-06T12:49:10Z schoppenhauer: gabriella: and wiser.
2015-11-06T12:49:44Z schoppenhauer: gabriella: have you read "php sucks but it doesnt matter"
2015-11-06T12:49:46Z schoppenhauer: ?
2015-11-06T12:50:13Z gabriella: schoppenhauer: no, but I can confirm that :)
2015-11-06T12:50:22Z gabriella: even without reading :)
2015-11-06T12:50:26Z schoppenhauer: gabriella: http://blog.codinghorror.com/php-sucks-but-it-doesnt-matter/
2015-11-06T12:50:51Z gabriella: I have to read http://ergoemacs.org/misc/xah_as_good_as_dead.html
2015-11-06T12:51:04Z schoppenhauer: gabriella: I prefer to create stuff with passive aggressive names (like cl-fuckyou)
2015-11-06T12:51:05Z gabriella: I think that it can be with each Lisp-fanboy :)
2015-11-06T12:51:45Z gabriella: schoppenhauer: why not call somethine cl-suckyoubrainoff ?
2015-11-06T12:52:05Z sdothum joined #lisp
2015-11-06T12:52:05Z gabriella: or cl-fanboy
2015-11-06T12:52:15Z schoppenhauer: gabriella: hm. "FUCKYOU" is an acronym.
2015-11-06T12:52:21Z preacherAKAnd joined #lisp
2015-11-06T12:52:22Z schoppenhauer: gabriella: I need to make it an acronym
2015-11-06T12:52:38Z pt1_ joined #lisp
2015-11-06T12:52:48Z schoppenhauer: gabriella: I will maybe extend cl-fuckyou with "suckyou" functionality for serving scgi too
2015-11-06T12:52:58Z johs quit (Remote host closed the connection)
2015-11-06T12:53:14Z gabriella: cl-fanboy "Fantastic Utter Neat Buster Old Yuk"
2015-11-06T12:53:21Z gabriella: acronym
2015-11-06T12:53:49Z nyef: minion: What does IDIOT stand for?
2015-11-06T12:53:49Z minion: Isometrograph Dermapterous Inburnt Oversubtile Tiger
2015-11-06T12:54:23Z nyef: ... minion has a weird vocabulary.
2015-11-06T12:54:37Z gabriella: how about cl-is-dead library ?
2015-11-06T12:54:46Z gabriella: (ql:quickload 'cl-is-dead)
2015-11-06T12:55:20Z attila_lendvai: any quick ideas what makes slime not react to C-c C-c? I'm using some FFI stuff that uses networking, and my lisp event loop runs well, prints stuff into the emacs slime repl, but C-c C-c doesn't interrupt the repl thread.
2015-11-06T12:55:24Z harish_ joined #lisp
2015-11-06T12:56:24Z harish_ quit (Remote host closed the connection)
2015-11-06T12:56:31Z gabriella: schoppenhauer: so, you are on PHP now?
2015-11-06T12:56:34Z Colleen quit (Quit: See you, space cowboy...)
2015-11-06T12:56:35Z pt1 quit (Ping timeout: 260 seconds)
2015-11-06T12:56:44Z harish_ joined #lisp
2015-11-06T12:56:45Z Colleen joined #lisp
2015-11-06T12:56:47Z schoppenhauer: gabriella: php? no.
2015-11-06T12:57:25Z gabriella: schoppenhauer: continue the CL battle? :)
2015-11-06T12:58:29Z schoppenhauer: gabriella: I guess I will keep my blog with hunchentoot, and for the other thing I will maybe use scgi. or fastcgi.
2015-11-06T12:58:46Z Vulfe joined #lisp
2015-11-06T12:58:50Z ramky quit (Ping timeout: 272 seconds)
2015-11-06T12:59:09Z schoppenhauer: gabriella: and maybe iteratees rather than threads.
2015-11-06T12:59:39Z gabriella: schoppenhauer: are you making money with your blog on Hunchentoot?
2015-11-06T13:01:07Z schoppenhauer: gabriella: define "making money"? I have a flattr button since a few days. but the last years it costed me money to host, and I do not expect this to change. (that is, it is my personal blog, without commercial interests)
2015-11-06T13:01:32Z Shinmera: Don't you know? In order for anything to be valid in this world it has to make money!!
2015-11-06T13:01:46Z schoppenhauer: gabriella: uxul.de
2015-11-06T13:02:06Z gabriella: Shinmera: yes, it is.
2015-11-06T13:02:16Z schoppenhauer: Shinmera: it makes money. for hetzner (the vps provider) :3
2015-11-06T13:02:44Z gabriella: Shinmera: because even the 20 yo CL spec wasn't written without money
2015-11-06T13:02:58Z Shinmera: I honestly don't give a fuck
2015-11-06T13:03:20Z Vulfe quit (Ping timeout: 244 seconds)
2015-11-06T13:03:39Z guaqua: schoppenhauer: another way to look at "why use a proxy in front of your application" is that the security model is simpler. you probably can get something that's been packaged by your distribution and gets security updates from them
2015-11-06T13:04:06Z guaqua: and then run the application as a regular user, or even as some sort of restricted user
2015-11-06T13:04:24Z johs joined #lisp
2015-11-06T13:04:34Z gabriella: schoppenhauer: well, you blog is not making money. I see :)
2015-11-06T13:05:06Z schoppenhauer: guaqua: I don't see how an additional process should add security.
2015-11-06T13:05:24Z schoppenhauer: gabriella: it is not intended to. it is intended to get on people's nerves.
2015-11-06T13:05:27Z s00pcan quit (Ping timeout: 260 seconds)
2015-11-06T13:05:30Z guaqua: well, you only addressed the complexity, not of maintenance
2015-11-06T13:05:43Z guaqua: also the bugs in your own privilege dropping solution
2015-11-06T13:05:49Z gabriella: schoppenhauer: wow, how useful :)
2015-11-06T13:06:25Z schoppenhauer: gabriella: well, there are shittier blogs out there. and less funny (and worse drawn) comics which make more money.
2015-11-06T13:06:54Z guaqua: i've used haproxy succesfully and i do recommend it. it doesn't do static file serving, but it does a fine job load balancing and forwarding different urls to different backends. it can also be used for throttling per ip (or even something more complex)
2015-11-06T13:07:13Z quazimodo quit (Ping timeout: 250 seconds)
2015-11-06T13:07:15Z s00pcan joined #lisp
2015-11-06T13:07:35Z gabriella: is there are Hunchentoot-based service which makes money?
2015-11-06T13:09:00Z kobain joined #lisp
2015-11-06T13:09:30Z schoppenhauer: guaqua: anyway. using something like authbind would mitigate the privilege problem.
2015-11-06T13:11:14Z RainBowww joined #lisp
2015-11-06T13:12:26Z guaqua: schoppenhauer: definitely. i would still personally just run a separate server and be done with it
2015-11-06T13:13:29Z johann_ joined #lisp
2015-11-06T13:15:15Z Khisanth quit (Ping timeout: 255 seconds)
2015-11-06T13:15:24Z danlentz_ joined #lisp
2015-11-06T13:17:23Z gabriella quit
2015-11-06T13:17:26Z badkins quit (Ping timeout: 240 seconds)
2015-11-06T13:17:32Z mbuf quit (Quit: Ex-Chat)
2015-11-06T13:17:39Z johann_ quit (Ping timeout: 240 seconds)
2015-11-06T13:17:55Z xrash quit (Read error: Connection reset by peer)
2015-11-06T13:19:49Z schoppenhauer: mkay.
2015-11-06T13:21:55Z znpy joined #lisp
2015-11-06T13:22:18Z xrash joined #lisp
2015-11-06T13:23:46Z agumonkey quit (Ping timeout: 240 seconds)
2015-11-06T13:24:30Z zacharias_ quit (Ping timeout: 246 seconds)
2015-11-06T13:24:40Z RainBowww left #lisp
2015-11-06T13:26:21Z agumonkey joined #lisp
2015-11-06T13:27:45Z lmj joined #lisp
2015-11-06T13:29:03Z rotty joined #lisp
2015-11-06T13:29:13Z MaggieAndEazar quit (Quit: Connection closed for inactivity)
2015-11-06T13:31:13Z eudoxia joined #lisp
2015-11-06T13:38:02Z sdothum quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-11-06T13:38:09Z faalentijn quit (Ping timeout: 246 seconds)
2015-11-06T13:38:58Z sdothum joined #lisp
2015-11-06T13:39:50Z zacharias_ joined #lisp
2015-11-06T13:40:19Z EvW quit (Ping timeout: 240 seconds)
2015-11-06T13:41:39Z BitPuffin quit (Ping timeout: 246 seconds)
2015-11-06T13:43:37Z EvW joined #lisp
2015-11-06T13:45:51Z baboon`` joined #lisp
2015-11-06T13:45:55Z baboon``: hello
2015-11-06T13:46:45Z eudoxia quit (Quit: Leaving)
2015-11-06T13:46:50Z baboon``: I'm going through lisp-koans right now, and so far so good, but I don't understand why in this example ( https://gist.github.com/c817472679bb5c690d88 ), (equal h1 h2) is nil and not t
2015-11-06T13:47:03Z baboon``: it's about hash tables equality
2015-11-06T13:47:33Z baboon``: I understand that eq works on references equality, so it's nil
2015-11-06T13:48:00Z Shinmera: clhs equal
2015-11-06T13:48:00Z specbot: http://www.lispworks.com/reference/HyperSpec/Body/f_equal.htm
2015-11-06T13:48:03Z baboon``: equalp recursively checks every item down the hash-table, and since they're respectively equalp, it works
2015-11-06T13:48:26Z baboon``: Shinmera: I read that, I would never bother you otherwise :)
2015-11-06T13:48:41Z Guest14 joined #lisp
2015-11-06T13:48:58Z Shinmera: Well it says right there that they're only equal if they're eq.
2015-11-06T13:49:12Z baboon``: h1 and h2 seem like they should be isomorphic, unless I don't understand the definition as good as I think
2015-11-06T13:49:12Z Shinmera: And since h1 and h2 are different objects, they're not eq and thus not equal
2015-11-06T13:49:14Z thodg joined #lisp
2015-11-06T13:49:49Z Shinmera: EQ checks if they're identical. As in, the same instance of object.
2015-11-06T13:49:51Z native_killer joined #lisp
2015-11-06T13:50:15Z Xach is going to use humbler for a "post to tumblr" option on his sites
2015-11-06T13:50:39Z quasus quit (Ping timeout: 240 seconds)
2015-11-06T13:50:39Z baboon``: so equal is only different from eq if it is not applied to its particularities, that is "Symbol, Number, Characters, Conses, Arrays and Pathnames"?
2015-11-06T13:50:49Z Shinmera: Yes.
2015-11-06T13:50:58Z baboon``: I see, thank you
2015-11-06T13:51:04Z Shinmera: Well actually see the figure below
2015-11-06T13:51:09Z Shinmera: Numbers f.e. use EQL
2015-11-06T13:51:22Z Shinmera: because they don't have to be EQ. Same for characters.
2015-11-06T13:51:37Z badkins joined #lisp
2015-11-06T13:51:43Z baboon``: as a general practice, do people tend to use all the different eq functions?
2015-11-06T13:52:04Z Shinmera: Generally you should not use EQ, but EQL and EQUAL are often used.
2015-11-06T13:52:24Z Shinmera: EQUALP often ends up a bit too lenient, so I see it less.
2015-11-06T13:52:39Z Shinmera: Thought it's very useful for case-insensitive string hash tables.
2015-11-06T13:52:42Z xaotuk_ joined #lisp
2015-11-06T13:53:05Z Shinmera: Often times though you might want to use a comparator specific to a type, like STRING= and so forth.
2015-11-06T13:53:26Z baboon``: only that? as I understand it right now, if I want to check whether two hash tables have the same options and elements, there is no other way than equalp
2015-11-06T13:53:26Z Shinmera: Xach: Let me know how it goes!
2015-11-06T13:53:41Z baboon``: ah, I see
2015-11-06T13:53:49Z johann_ joined #lisp
2015-11-06T13:53:50Z xaotuk quit (Disconnected by services)
2015-11-06T13:53:58Z baboon``: you use the specific equality operator
2015-11-06T13:53:59Z xaotuk_ is now known as xaotuk
2015-11-06T13:54:29Z Shinmera: Well, for hash tables I'd most likely want to use a custom test so that the values are compared as I want them to be compared, rather than just using equalp.
2015-11-06T13:54:37Z baboon`` checking if string= is recursive down hash tables
2015-11-06T13:54:47Z Shinmera: That's a string test.
2015-11-06T13:54:49Z pjb: Nope.
2015-11-06T13:55:03Z pjb: not appliable to hash-tables.
2015-11-06T13:55:07Z baboon``: then how would you compare two hash tables filled with strings all lowercase? equalp?
2015-11-06T13:55:19Z pjb: You can't.
2015-11-06T13:55:24Z pjb: You write your own comparison.
2015-11-06T13:55:49Z baboon``: the price for equalp is so high, you'd write your own comparison function?
2015-11-06T13:56:08Z Shinmera: (loop for k being the hash-keys of m1 for v being the hash-values of m1 always (some-test v (gethash k m2)))
2015-11-06T13:56:12Z lispyone joined #lisp
2015-11-06T13:56:28Z pjb: baboon``: It's not a question of price, it's a question that everybody writes tens of programs in which each a different equality function is needed!
2015-11-06T13:56:35Z baboon``: yeah said in two lines it doesn't look so bad :p
2015-11-06T13:56:43Z pjb: So, you can't fill the CL standard with thousands of different equalities!
2015-11-06T13:57:00Z ryu0: pjb: because you can't predict every possible use case?
2015-11-06T13:57:08Z pjb: Shinmera: you need to compare sets of keys.
2015-11-06T13:57:12Z phoe_krk joined #lisp
2015-11-06T13:57:19Z baboon``: and that's macro-able, placing `some-test` as argument
2015-11-06T13:57:22Z Shinmera: pjb: Ah- right.
2015-11-06T13:57:32Z pjb: ryu0: you can predict all of them. They are just too numerous.
2015-11-06T13:57:44Z preacherAKAnd quit (Quit: Konversation terminated!)
2015-11-06T13:57:46Z ryu0: pjb: and infinite?
2015-11-06T13:58:10Z pjb: Not if you have a finite set of variants with a finite set of alternatives each.
2015-11-06T13:58:10Z ryu0: people can probably keep adding use cases...
2015-11-06T13:58:13Z Shinmera: pjb: Though, just to add to your point, for some things you might only care about the values being the same even if the key sets are different :)
2015-11-06T13:58:24Z pjb: ryu0: this is really basic maths, I wonder why you ask.
2015-11-06T13:58:27Z baboon``: well thank you all, I go back to my koans before I dive through PCL. I enjoy it so far :)
2015-11-06T13:58:58Z pjb: Shinmera: definitely. But then you would test for a "subset" (sub-relationship) between the two hash-tables.
2015-11-06T13:59:19Z ryu0: pjb: was just curious what your reasoning was. i expected it would mainly be because it isn't pragmatic to include every possibility.
2015-11-06T13:59:33Z Shinmera: (dwim)
2015-11-06T13:59:37Z pjb: This is what I said: there would be too many of them.
2015-11-06T13:59:47Z Yuuhi joined #lisp
2015-11-06T14:00:41Z ryu0: pjb: i guess my mistake was thinking it to be infinite. i just figured since people keep coming up with more and more things, the possibilities would keep growing indefinitely.
2015-11-06T14:00:59Z pjb: ryu0: in computing there is very few occasion of having real infinities.
2015-11-06T14:01:10Z ryu0: ah, that never occurred to me.
2015-11-06T14:01:22Z pyon quit (Quit: dang!)
2015-11-06T14:01:27Z kp666 quit (Remote host closed the connection)
2015-11-06T14:01:49Z dxtr quit (Ping timeout: 250 seconds)
2015-11-06T14:02:19Z native_killer quit (Quit: Leaving)
2015-11-06T14:02:25Z LiamH joined #lisp
2015-11-06T14:02:32Z pjb: Sometimes there's a need for a common interface for the various ways of comparing. Then: https://common-lisp.net/project/cdr/document/8/cleqcmp.html
2015-11-06T14:03:11Z ryu0: i just recalled how in C, you frequently had to write forms of equality functions, such as for qsort and bsearch.
2015-11-06T14:03:21Z pjb: The funny thing is that if you want to compare strings, you might prefer to use EQUAL or EQUALP than STRING= or STRING-EQUAL.
2015-11-06T14:03:34Z pjb: Because the later also compare symbols and characters (string designators) ;-)
2015-11-06T14:03:50Z pjb: ryu0: same in lisp. For the same reason.
2015-11-06T14:04:20Z pjb: Having predefined equalities is useful, but only for general cases.  In specific cases, you need specific equalities.
2015-11-06T14:04:27Z ryu0: it seemed like an infinite number of possible ways to define it.
2015-11-06T14:04:35Z ryu0: but, i suppose it isn't.
2015-11-06T14:04:38Z ryu0: it's just very large.
2015-11-06T14:04:44Z pjb: In maths there are an infinite number of equivalence relationships.
2015-11-06T14:04:45Z kushal joined #lisp
2015-11-06T14:04:52Z pjb: But in a computer, we're always limited by the finite memory.
2015-11-06T14:04:59Z ryu0: ah, so that's what you mean./
2015-11-06T14:05:12Z ryu0: i'm getting theory and reality mixed up then?
2015-11-06T14:06:00Z heddwch quit (Ping timeout: 265 seconds)
2015-11-06T14:06:04Z araujo_ joined #lisp
2015-11-06T14:06:55Z araujo_ quit (Max SendQ exceeded)
2015-11-06T14:06:56Z ryu0: pjb: correct me if i'm wrong, but it appears to me that CL has few operators, most stuff appeared implemented as functions, macros, and such?
2015-11-06T14:07:07Z baboon``: might be silly but, can't you project a value as a representation of its atoms and compare that generically?
2015-11-06T14:07:10Z pjb: For example, in practice the set of all the strings you will process will be finite, because there will be a maximum length of all the strings.  Then you could enumerate all the equivalence classes for strings of this maximum length. This would be a very big number, but very finite.
2015-11-06T14:07:27Z pjb: ryu0: all the macro, special operators and functions are operators.
2015-11-06T14:07:30Z araujo_ joined #lisp
2015-11-06T14:07:42Z ryu0: huh. okay. i'm thinking too much like C then.
2015-11-06T14:08:04Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T14:08:13Z ryu0: i was thinking only + and such as operators from C. i thought functions were separate.
2015-11-06T14:08:15Z pjb: ryu0: the distinction between special operators and macros is only useful in the context of the CLHS specification.  In practice, implementation can choose what macro is implemented as a special operator, and what special operator is implemented as a macro.
2015-11-06T14:08:42Z pjb: baboon``: of course, in enumerating all the combinations, you would decompose the compound objects and enumerates on their components.
2015-11-06T14:08:48Z araujo quit (Ping timeout: 255 seconds)
2015-11-06T14:10:14Z ryu0: pjb: clearly i need to study more mathematics, but i've taken enough for functional to make sense i guess.
2015-11-06T14:10:21Z snv quit (Read error: Connection reset by peer)
2015-11-06T14:10:35Z ryu0: pjb: thanks again for your help.
2015-11-06T14:11:16Z snv joined #lisp
2015-11-06T14:11:51Z pjb: There are good books: http://www.amazon.com/Mathematics-Physics-Programmers-Charles-Development/dp/1584503300
2015-11-06T14:12:37Z ryu0: pjb: what level do i need to be able to understand this?
2015-11-06T14:12:46Z ryu0: i haven't taken any calculus yet.
2015-11-06T14:13:52Z pjb: It's hard for me to tell, because I've been educated in France, where the levels are actually quite different from the USA.  But basically, you don't need much of what is taught at university level, only school before university.
2015-11-06T14:14:05Z ryu0: oh.
2015-11-06T14:14:08Z pjb: But then, it seems that you need 2 years into university in the USA to reach the same level…
2015-11-06T14:15:00Z ryu0: i've taken all the prereqs to calculus, our college level algebra and trigonometry.
2015-11-06T14:15:14Z ryu0: just haven't started it. wasn't required for my major.
2015-11-06T14:15:22Z warweasle joined #lisp
2015-11-06T14:15:30Z pjb: You could try TAOCP (it's a little expensive, with 4 volumes), but if you're beginning it would be the right time to study it.
2015-11-06T14:15:51Z pjb: http://www.amazon.com/Computer-Programming-Volumes-1-4A-Boxed/dp/0321751043
2015-11-06T14:16:10Z ryu0: i'm not a novice, but i am only just starting to study formally really...
2015-11-06T14:16:36Z ryu0: wow.
2015-11-06T14:16:42Z pjb: Then it's a good study.  And since it's all about algorithms, you only learn relevant maths with it.
2015-11-06T14:16:56Z ryu0: yeouch. i'll add it to my wish list.
2015-11-06T14:17:17Z ryu0: i have a pile of books I bought on C, CL, and discrete mathematics.
2015-11-06T14:17:21Z EvW quit (Ping timeout: 246 seconds)
2015-11-06T14:17:25Z ryu0: just haven't got to them yet.
2015-11-06T14:17:43Z pjb: start reading the books about discrete mathematics.
2015-11-06T14:17:45Z ryu0: i fully expect to keep using C, just not as much.
2015-11-06T14:17:58Z EvW joined #lisp
2015-11-06T14:18:14Z ryu0: CL is feeling liberating for a lot of work.
2015-11-06T14:18:25Z ryu0: doesn't take as long to make things happen.
2015-11-06T14:18:29Z pjb: Yes, sometimes you have to fall back to C, but it's very rare.  Once every two or three years.
2015-11-06T14:18:32Z warweasle: ryu0: :)
2015-11-06T14:19:06Z ryu0: it was helpful though in learning what low level operations are cheap and expensive and such...
2015-11-06T14:19:30Z pt1_ quit (Remote host closed the connection)
2015-11-06T14:19:30Z ryu0: it seems system calls in general are expensive if used too frequently.
2015-11-06T14:20:05Z ryu0: i'd guess that's part of why you want to buffer writes and reads if possible.
2015-11-06T14:21:03Z Guest14 joined #lisp
2015-11-06T14:21:10Z pjb: If you want to relax, I would advise you to read GEB: http://www.amazon.com/G%C3%B6del-Escher-Bach-Eternal-Golden/dp/0465026567/ref=sr_1_1?s=books&ie=UTF8&qid=1446819662&sr=1-1&keywords=GEB
2015-11-06T14:21:16Z algae joined #lisp
2015-11-06T14:21:54Z shookees quit (Quit: TATA AND FAREWELL)
2015-11-06T14:23:00Z faalentijn joined #lisp
2015-11-06T14:26:06Z pyon joined #lisp
2015-11-06T14:26:46Z warweasle: ryu0: You can use the clib library for a lot of things. they buffer for you.
2015-11-06T14:27:03Z ryu0: warweasle: i'm aware. that's part of the 'magic' that happens in FILE struct.
2015-11-06T14:27:09Z warweasle: pjb: I never finished. Worth it?
2015-11-06T14:27:34Z pjb: warweasle: GEB? Definitely. I consider it the best book of the XXth century.
2015-11-06T14:27:39Z warweasle: ryu0: My apologies. I assumed you were less experienced that you are.
2015-11-06T14:27:41Z ryu0: there's a lot of implementation details in FILE struct, especially on POSIX.
2015-11-06T14:27:52Z ryu0: i'm just not experience in CL.
2015-11-06T14:27:59Z ryu0: i am experienced with C and posix to some degree.
2015-11-06T14:28:22Z ryu0: about 8 years now, but i can see it has hindered my thinking in some respects.
2015-11-06T14:28:30Z warweasle: ryu0: I use C and other languages at work. I use lisp at home and for data processing to keep from burning out.
2015-11-06T14:29:18Z ajf- joined #lisp
2015-11-06T14:29:29Z ryu0: supposedly you can wrap FILE around any file descriptor, but i haven't tried them all.
2015-11-06T14:29:36Z ryu0: fdopen i believe is the function?
2015-11-06T14:30:01Z warweasle: ryu0: Yes. Then you can set various properties with ioctrl
2015-11-06T14:30:07Z ryu0: ioctl.
2015-11-06T14:30:16Z ajf- quit (Client Quit)
2015-11-06T14:30:44Z ryu0: yea, i've used it on device files and such, but that's typically an implementation specific thing.
2015-11-06T14:31:03Z warweasle: Did anyone mention Paradigms of Artificial Intelligence Programming. (PAIP)
2015-11-06T14:31:35Z warweasle: That book really pushed my undersanding of lisp...And prolog.
2015-11-06T14:31:40Z pjb: A good introduction to CL, and some good CL examples.
2015-11-06T14:31:47Z ryu0: warweasle: i assume you've heard of open_memstream and fmemopen?
2015-11-06T14:31:59Z warweasle: ryu0: Yes.
2015-11-06T14:32:12Z ryu0: k. another way i saw to open memory buffers.
2015-11-06T14:32:17Z ryu0: err as FILE.
2015-11-06T14:32:38Z ryu0: i found it fun. i used it in some cases to get a library to write to memory. :)
2015-11-06T14:33:46Z warweasle: ryu0: Thank you for reminding me of it. I could use that today, in fact.
2015-11-06T14:34:09Z warweasle has a bad habit of using the Boheim(sp) garbage collector.
2015-11-06T14:34:16Z ryu0: i find ISO C boring anyway. It's more fun to use C with extensions. :D
2015-11-06T14:35:14Z ryu0: warweasle: from experience, the one language i hate the most is unix shell scripts. -_-
2015-11-06T14:35:36Z lmj quit (Quit: Lost terminal)
2015-11-06T14:35:37Z ryu0: haha.
2015-11-06T14:35:46Z pjb: ryu0: you can write your scripts in CL. I've been writing my unix scripts in clisp since 2000.
2015-11-06T14:36:01Z ryu0: i intend to.
2015-11-06T14:36:12Z vaporatorius joined #lisp
2015-11-06T14:36:20Z ryu0: i only use shell these days for quick hack jobs where i don't care about much flexibility.
2015-11-06T14:36:49Z ryu0: mainly for personal automation.
2015-11-06T14:37:00Z ryu0: anyway.
2015-11-06T14:37:07Z warweasle: ryu0: It's good for that, but the syntax is a little difficult.
2015-11-06T14:37:27Z ryu0: i noticed. it's especially tedious to figure out how to correctly handle strings with spaces at times.
2015-11-06T14:37:42Z ryu0: especially if i have to use the eval function. XD
2015-11-06T14:38:56Z ryu0: warweasle: did you know the shell can perform integer arithmetic with $(( ))?
2015-11-06T14:39:17Z tsoutseki quit (Remote host closed the connection)
2015-11-06T14:39:21Z EvW quit (Ping timeout: 265 seconds)
2015-11-06T14:39:24Z ryu0: i believe it uses fixed size integers, but even so, it has some uses.
2015-11-06T14:40:42Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-06T14:41:05Z ryu0: yep. seems to use 64 bit signed integers.
2015-11-06T14:41:10Z ryu0: on my server.
2015-11-06T14:41:46Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-06T14:42:01Z warweasle: ryu0: I always used dc...as bad as it is. Or Perl when it's more than just if then statements. May as well make it easy on me.
2015-11-06T14:42:28Z ryu0: warweasle: true enough. i've started using awk for text processing in some cases.
2015-11-06T14:42:44Z ryu0: not hard to grasp once i started using it.
2015-11-06T14:42:46Z warweasle: ryu0: I don't really like awk, but sed I understand.
2015-11-06T14:43:03Z ryu0: oh? awk doesn't seem complicated.
2015-11-06T14:43:15Z ryu0: and seems to allow more than sed does.
2015-11-06T14:43:18Z pjb: clisp -q -norc -x '(* 3 2)'
2015-11-06T14:43:24Z warweasle: ryu0: By the time I look up the answer I could have done it with perl.
2015-11-06T14:43:33Z ryu0: haha. good point.
2015-11-06T14:43:35Z thodg quit (Quit: Lost terminal)
2015-11-06T14:43:44Z ryu0: i guess if you don't already know it.
2015-11-06T14:43:46Z ryu0: =p
2015-11-06T14:44:49Z pjb: alias x='clisp -q -norc -x' ; x '(* 3 2)'
2015-11-06T14:44:59Z pjb: You can't alias = in bash :-(
2015-11-06T14:45:22Z ryu0: pjb: on that subject, do you know if there's some repo for debian/ubuntu for the other major CL implementations? i only find SBCL.
2015-11-06T14:45:50Z pjb: ccl is written in ccl, so no (fetch it from http://ccl.clozure.com/download.html)
2015-11-06T14:45:51Z warweasle: ryu0: I think ECL has one.
2015-11-06T14:45:56Z pjb: cmucl idem.
2015-11-06T14:46:11Z ryu0: idem?
2015-11-06T14:46:27Z pjb: It's latin.
2015-11-06T14:46:37Z pjb: https://www.google.fr/search?q=idem
2015-11-06T14:46:46Z pjb: clisp is lacking a maintainer currently, so it may have been removed from current distributions.
2015-11-06T14:47:05Z duggiefresh joined #lisp
2015-11-06T14:47:14Z pjb: abcl is written in java, so it may also have some difficulties being packaged in some distributions.
2015-11-06T14:47:41Z ryu0: java? does that mean it is capable of providing access to java apis as an extension?
2015-11-06T14:47:46Z pjb: Yes.
2015-11-06T14:47:47Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T14:47:58Z ryu0: interesting. so it's a bit like clojure then.
2015-11-06T14:48:09Z pjb: It's better to fetch them and compile them yourself than to rely on distribution makers who don't care too much about lisp.
2015-11-06T14:48:21Z pjb: It's better than clojure, since it's CL!
2015-11-06T14:48:44Z ryu0: pjb: valid point. i can easily do that given my experience doing a lot of packaging of FOSS.
2015-11-06T14:49:30Z ryu0: pjb: are the majority of CL implementations implemented in C?
2015-11-06T14:49:36Z pjb: No, in CL.
2015-11-06T14:49:59Z warweasle: ryu0: It's a point of pride to implement lisp is lisp.
2015-11-06T14:50:01Z pjb: http://cliki.net/Common%20Lisp%20implementation
2015-11-06T14:50:03Z ryu0: okay. i was thinking part of them has to speak native machine code at some point.
2015-11-06T14:50:40Z Guest14 joined #lisp
2015-11-06T14:50:45Z pjb: Very little. Just to interface with libc.
2015-11-06T14:50:55Z warweasle: ryu0: ECL, since it's embedible is in C and C++, but it still compiles itself in a matter of speaking.
2015-11-06T14:50:56Z dTal: somebody had to speak machine code long ago, but they're dead now
2015-11-06T14:51:07Z ryu0: haha.
2015-11-06T14:51:11Z Guest14 quit (Client Quit)
2015-11-06T14:51:12Z pjb: clisp an ecl are about half CL and half C.  abcl is about half CL and half java.
2015-11-06T14:52:01Z warweasle: ryu0: There are also many bootstap lisp interpreters...And other lisps written as various tools. TinyScheme comes to mind.
2015-11-06T14:52:12Z ryu0: huh.
2015-11-06T14:52:25Z lispyone quit (Remote host closed the connection)
2015-11-06T14:52:48Z ryu0: it was newLISP that got me interested in lisp again. i ended up wanting to do more so CL seemed like a good choice.
2015-11-06T14:53:15Z warweasle: ryu0: newLisp has some interesting features.
2015-11-06T14:53:27Z ryu0: CL just seems more mature and capable.
2015-11-06T14:53:37Z Jesin quit (Quit: Leaving)
2015-11-06T14:53:42Z psy_ joined #lisp
2015-11-06T14:54:08Z psy_ quit (Max SendQ exceeded)
2015-11-06T14:54:54Z dTal: If I wanted to implement a language with basically lispy semantics, but a different syntax, would it be better to do it in Common Lisp or Scheme? Answers on a postcard
2015-11-06T14:54:57Z oleo joined #lisp
2015-11-06T14:54:57Z oleo quit (Changing host)
2015-11-06T14:54:57Z oleo joined #lisp
2015-11-06T14:55:09Z pjb: dTal: Common Lisp.
2015-11-06T14:55:17Z pjb: Since we have reader macros, it would be easier to do.
2015-11-06T14:55:18Z psy_ joined #lisp
2015-11-06T14:55:22Z oleo: sup pjb
2015-11-06T14:55:22Z pjb: See for example Vacietis.
2015-11-06T14:55:35Z dTal: I suspected this
2015-11-06T14:55:43Z warweasle: dTal: Or PAIP-Prolog
2015-11-06T14:56:13Z warweasle: dTal: Or CL-JS. It's kind of cool.
2015-11-06T14:56:56Z dTal: kind of cool is insufficient! I need SUPER-cool!
2015-11-06T14:56:57Z shum joined #lisp
2015-11-06T14:57:20Z ryu0: dTal: keep adding one to cool until it is >= SUPER-cool. :)
2015-11-06T14:57:26Z dTal: CL-JS is just Common Lisp, right?
2015-11-06T14:57:41Z sdothum quit (Read error: Connection reset by peer)
2015-11-06T14:57:45Z ryu0: i thought it was a CL implementation that compiles to JS?
2015-11-06T14:57:46Z pjb: No, it's different.
2015-11-06T14:58:03Z ryu0: but, i believe it's not a complete implementation?
2015-11-06T14:58:37Z warweasle: ryu0: It did pretty well with the js-bullet library, but it's just too big to process.
2015-11-06T14:58:40Z Xach: cl-js is an implementation of a javascript runtime in Common Lisp.
2015-11-06T14:58:41Z faalentijn quit (Read error: Connection reset by peer)
2015-11-06T14:58:54Z ryu0: Oh.
2015-11-06T14:59:02Z warweasle: Xach: Does it compile to CL or is it an interpreter?
2015-11-06T14:59:04Z Xach: you feed it a javascript program and it runs it.
2015-11-06T14:59:08Z armour joined #lisp
2015-11-06T14:59:18Z Shinmera: JSCL is the CL implementation in JS
2015-11-06T14:59:19Z Xach: warweasle: I don't know. It was fast for its time, so I think it compiled.
2015-11-06T14:59:23Z Shinmera: though it isn't much of one at this point
2015-11-06T14:59:28Z warweasle: I seem to remember it can create lisp function.
2015-11-06T14:59:32Z Xach: I would like to try cl-js as an extension language for non-CL hackers sometime.
2015-11-06T14:59:50Z faalentijn joined #lisp
2015-11-06T15:00:01Z lispyone joined #lisp
2015-11-06T15:00:05Z ryu0: Xach: you mean to extend a host application written in CL?
2015-11-06T15:00:12Z Xach: ryu0: Yes.
2015-11-06T15:00:28Z ryu0: ah.
2015-11-06T15:00:37Z Jesin joined #lisp
2015-11-06T15:00:50Z knobo quit (Ping timeout: 260 seconds)
2015-11-06T15:00:51Z ryu0: but why JS? there's other languages i've seen used for extensions. huh.
2015-11-06T15:01:03Z pjb: JS is "popular".
2015-11-06T15:01:06Z kobain quit (Ping timeout: 240 seconds)
2015-11-06T15:01:06Z ryu0: LUA being a big one, but mainly for C/C++ hosts from what i've seen.
2015-11-06T15:02:16Z ryu0: pjb: i see. i've never used JS but i've heard a lot of bad things about it.
2015-11-06T15:02:24Z ryu0: in short a lot of things i read said it sucks.
2015-11-06T15:02:31Z dTal is wondering how much work it would take to reimplement Nial, given the semantics are all but the same as Lisp but the interpreter sucks
2015-11-06T15:02:50Z pt1 joined #lisp
2015-11-06T15:03:04Z Xach: ryu0: because cl-js exists and other things don't.
2015-11-06T15:03:13Z ryu0: Xach: well, that's good enough reason.
2015-11-06T15:03:25Z ryu0: the other languages don't exist in native CL.
2015-11-06T15:03:27Z ryu0: that i know of.
2015-11-06T15:03:32Z Xach: or not as well-done, or easy to use
2015-11-06T15:03:34Z pjb: cl-python
2015-11-06T15:03:39Z pjb: LSE
2015-11-06T15:03:44Z warweasle: ryu0: It's not bad for what it is. If you need a safe language (js by itself can't do anything) to embed. It's actually pretty nice. I used it to run hardware test scripts on aircraft testers.
2015-11-06T15:04:02Z ryu0: as long as it's just a scripting language?
2015-11-06T15:04:03Z pjb: There are a ton of languages: http://cliki.net/programming%20language
2015-11-06T15:04:54Z faalentijn quit (Remote host closed the connection)
2015-11-06T15:04:57Z ryu0: BASIC!? haha.
2015-11-06T15:05:05Z warweasle: ryu0: I used SpiderMonkey and added in my interface functions. The REPL really helped development. In fact, that's how the test hardware comunicates with everything else. Through an ssh connection.
2015-11-06T15:05:15Z tralala quit (Quit: out)
2015-11-06T15:05:33Z ryu0: so it has ethernet or some other network device?
2015-11-06T15:05:34Z warweasle: ryu0: Did I mention this was an embedded environment.
2015-11-06T15:05:57Z warweasle: ryu0: Yes, it is controlled by a laptop so we could future proof it.
2015-11-06T15:06:11Z ryu0: ethernet is likely to remain for some time...
2015-11-06T15:06:23Z warweasle: ryu0: That was our thinking as well.
2015-11-06T15:06:26Z ryu0: most reliable way of networking i've ever seen.
2015-11-06T15:06:27Z dTal: SHame the Blocky link is dead, it sounds interesting
2015-11-06T15:06:36Z ryu0: wifi is spotty.
2015-11-06T15:06:38Z pt1 quit (Read error: No route to host)
2015-11-06T15:06:43Z pt1_ joined #lisp
2015-11-06T15:07:02Z ryu0: warweasle: i imagine you could get away with capping it at 10 megabit?
2015-11-06T15:07:19Z ryu0: how fast does a communication link need to be for that?
2015-11-06T15:07:29Z ryu0: err not fast
2015-11-06T15:07:32Z ryu0: but bandwidth.
2015-11-06T15:09:19Z warweasle: ryu0: Not fast, it was just sending "command line like" strings to the java interpreter and it sent stuff back.
2015-11-06T15:09:44Z warweasle: ryu0: We also used scp to get files from the device.
2015-11-06T15:10:17Z warweasle: ryu0:  Way overkill too. 1024 bit key based authentication.
2015-11-06T15:10:21Z faalentijn joined #lisp
2015-11-06T15:11:07Z warweasle: ryu0: But we kept the link at full 100Mbs
2015-11-06T15:15:38Z ekinmur joined #lisp
2015-11-06T15:17:27Z mvilleneuve joined #lisp
2015-11-06T15:18:33Z xrash quit (Ping timeout: 252 seconds)
2015-11-06T15:21:21Z xrash joined #lisp
2015-11-06T15:21:48Z atgreen quit (Ping timeout: 244 seconds)
2015-11-06T15:22:06Z _sjs quit (Ping timeout: 246 seconds)
2015-11-06T15:23:21Z faalentijn quit (Quit: WeeChat 1.3)
2015-11-06T15:23:56Z NeverDie joined #lisp
2015-11-06T15:28:53Z ryu0: warweasle: ah.
2015-11-06T15:29:13Z tsoutseki joined #lisp
2015-11-06T15:29:29Z nzambe joined #lisp
2015-11-06T15:30:11Z ryu0: warweasle: at least it provides more bandwidth than serial, like RS232 -_-
2015-11-06T15:31:35Z wuzzz joined #lisp
2015-11-06T15:32:02Z xrash quit (Ping timeout: 265 seconds)
2015-11-06T15:33:15Z ryu0: warweasle: oh yea. it can also be used to lock-out unauthorized clients, if you only permit key login.
2015-11-06T15:33:47Z xrash joined #lisp
2015-11-06T15:33:57Z smokeink quit (Remote host closed the connection)
2015-11-06T15:34:02Z wuzzz: #Shinmera:  I figured out my threading issue.  At some point I'd started using a global to store the result of the (make-instance 'my-qt-app) call and passing that to the qt main loop.  this was to allow me to invoke methods of the class while in the repl and while having the qt main loop run in another thread.  saving images using qtools in this way resulted in threading errors,
2015-11-06T15:34:24Z wuzzz: changing this back to passing the result of the make-instance call directly to the qt main loop solved that problem
2015-11-06T15:34:34Z johann_ quit (Remote host closed the connection)
2015-11-06T15:34:34Z Shinmera: Huh, alright.
2015-11-06T15:34:49Z Shinmera: Well, glad you figured it out!
2015-11-06T15:36:10Z EvW joined #lisp
2015-11-06T15:36:53Z wuzzz: At the moment, after I modified deploy.lisp and my local asdf file, trying to use ccl to save an image and kernel with application-type set to :gui results in an application window that will hang shortly after handing a few gui events.  I'll stick with the :console deployment for now, this is just a one off app
2015-11-06T15:38:12Z Shinmera: Hm, that's odd.
2015-11-06T15:38:20Z wuzzz: I did try using qtools to build all of the examples as standalone apps, and the only one that worked on ccl was the helloworld app.  the rest either caused ccl to crash or with the melody app, there was an error about lacking a smokephonon.dll or somesuch.  when I get back to regular internet I'll put together some issues with specifics, unless you get to them first
2015-11-06T15:38:45Z lispyone quit (Remote host closed the connection)
2015-11-06T15:38:54Z leafyba__ quit (Read error: Connection reset by peer)
2015-11-06T15:39:02Z leafybas_ joined #lisp
2015-11-06T15:39:09Z Shinmera: I probably won't, I'm pretty busy with university, much to my own chagrin.
2015-11-06T15:39:33Z knobo joined #lisp
2015-11-06T15:40:48Z quasus joined #lisp
2015-11-06T15:40:58Z EvW quit (Ping timeout: 272 seconds)
2015-11-06T15:41:10Z mordocai joined #lisp
2015-11-06T15:41:55Z lispyone joined #lisp
2015-11-06T15:42:11Z xaotuk quit (Ping timeout: 265 seconds)
2015-11-06T15:42:11Z wuzzz: cool.  I appreciate the simple deployment script, it cuts down on the acrobatics necessary to get a binary out the door.
2015-11-06T15:42:18Z wuzzz: so thank you very much!
2015-11-06T15:42:50Z Shinmera: Sure. I just wish things worked as they should on CCL too.
2015-11-06T15:43:04Z quasus quit (Client Quit)
2015-11-06T15:43:13Z Guest14 joined #lisp
2015-11-06T15:43:13Z dilated_dinosaur joined #lisp
2015-11-06T15:43:26Z wuzzz: it seems to be an issue with commonqt and ccl and windows, at least.  Those are the common threads so far
2015-11-06T15:43:49Z wuzzz: I can reproduce the issue with my manual method of wrapping up the binaries without using qtools
2015-11-06T15:43:53Z Shinmera: May be. CommonQt Windows is sadly rather untested.
2015-11-06T15:44:03Z Shinmera: Especially on CCL
2015-11-06T15:44:09Z wuzzz: lol figures
2015-11-06T15:45:30Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-06T15:46:09Z wuzzz: the sooner I can ditch windows the happier I'll be
2015-11-06T15:47:27Z pt1_ quit (Remote host closed the connection)
2015-11-06T15:48:31Z atgreen joined #lisp
2015-11-06T15:48:45Z Shinmera: Well, at least qt-libs worked right away, so I'm happy about that.
2015-11-06T15:54:20Z clop2 quit (Quit: Leaving)
2015-11-06T15:54:22Z snv: wuzzz, LUNIX IS TEH OPERATIANSHHIAN SYSTAM OF TEH 1337 HAXX0RZZZZ THAT PWN ALL IN QUAEK 3 BECAUSE IT SI MANS GAEM@!111ONEONEELEVEN
2015-11-06T15:54:40Z Shinmera: Did you have a stroke?
2015-11-06T15:54:46Z wuzzz: snv: I like your enthusiasm
2015-11-06T15:55:05Z mvilleneuve joined #lisp
2015-11-06T15:55:28Z halfcrazy joined #lisp
2015-11-06T15:56:09Z OrangeShark joined #lisp
2015-11-06T15:59:08Z Karl_Dscc joined #lisp
2015-11-06T16:00:24Z halfcrazy quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T16:01:07Z mrSpec quit (Quit: mrSpec)
2015-11-06T16:01:08Z xaotuk joined #lisp
2015-11-06T16:01:43Z shka joined #lisp
2015-11-06T16:01:58Z knobo quit (Ping timeout: 260 seconds)
2015-11-06T16:02:22Z ajf- joined #lisp
2015-11-06T16:02:26Z nydel quit (Ping timeout: 260 seconds)
2015-11-06T16:02:27Z vert2 quit (Ping timeout: 260 seconds)
2015-11-06T16:02:43Z Tordek quit (Ping timeout: 250 seconds)
2015-11-06T16:03:55Z nydel joined #lisp
2015-11-06T16:04:15Z vert2 joined #lisp
2015-11-06T16:04:20Z Tordek joined #lisp
2015-11-06T16:05:51Z tsoutseki quit (Ping timeout: 252 seconds)
2015-11-06T16:05:56Z shka: pjb: i'm aware that this is sbcl specific behavior
2015-11-06T16:06:56Z tsoutseki joined #lisp
2015-11-06T16:09:41Z Meow-J quit (Quit: Connection closed for inactivity)
2015-11-06T16:09:59Z ajf-: can I ls all the functions that are available to me somehow ?
2015-11-06T16:10:05Z _sjs joined #lisp
2015-11-06T16:10:29Z mrSpec joined #lisp
2015-11-06T16:10:45Z shka quit (Remote host closed the connection)
2015-11-06T16:11:11Z shka joined #lisp
2015-11-06T16:11:18Z Bike: you could, but there's thousands
2015-11-06T16:11:23Z Shinmera: (dolist (p (list-all-packages)) (do-symbols (s p) (when (fboundp s) (print s))))
2015-11-06T16:11:23Z pjb: ajf-: yes, somehow.
2015-11-06T16:11:29Z hiroakip joined #lisp
2015-11-06T16:11:33Z ajf-: uhm but can't I limit it to a certains cope ?
2015-11-06T16:11:35Z ajf-: *scope
2015-11-06T16:11:45Z Bike: there are thousands of global functions
2015-11-06T16:11:47Z ajf-: or maybe just ls all the functions in a particular package
2015-11-06T16:11:51Z Bike: you could list everything from one package, yes
2015-11-06T16:11:52Z ajf-: as in packagename::
2015-11-06T16:12:05Z Bike: by an obvious modification of what shinmera just posted for youu
2015-11-06T16:12:14Z pjb: (do-all-symbols (s) (when (and (fboundp s) (not (or (macro-function s) (special-operator-p s)))) (print s)))
2015-11-06T16:12:25Z pjb: ajf-: you're a programmer, right?
2015-11-06T16:12:26Z ajf-: alright thanks I'll play with that in a bit
2015-11-06T16:12:29Z pjb: Then you can do whatever you want.
2015-11-06T16:12:31Z ajf-: ye
2015-11-06T16:12:37Z ajf-: also
2015-11-06T16:12:46Z ajf-: is it posible to show the documentation string for a function
2015-11-06T16:12:49Z shka quit (Read error: No route to host)
2015-11-06T16:12:50Z ajf-: or the source even
2015-11-06T16:13:26Z shka joined #lisp
2015-11-06T16:13:34Z ajf-: describe, inspect ok
2015-11-06T16:13:45Z ovx999 joined #lisp
2015-11-06T16:14:51Z pjb: But notice how fboundp is not enough, since the standard allows implementations to fbound macro and special operators names too. http://www.lispworks.com/documentation/HyperSpec/Body/11_abaa.htm
2015-11-06T16:15:17Z pjb: ajf-: why do you ask? Didn't you read CLHS?
2015-11-06T16:15:20Z shka quit (Read error: Connection reset by peer)
2015-11-06T16:15:30Z futpib joined #lisp
2015-11-06T16:15:39Z xaotuk quit (Ping timeout: 240 seconds)
2015-11-06T16:15:46Z ajf-: i'll get to that in a sec pjb
2015-11-06T16:16:00Z leafybas_ quit (Read error: Connection reset by peer)
2015-11-06T16:16:03Z pjb: http://www.lispworks.com/documentation/HyperSpec/Body/c_enviro.htm
2015-11-06T16:16:05Z leafyba__ joined #lisp
2015-11-06T16:17:46Z shka joined #lisp
2015-11-06T16:18:21Z ajf-: nice thanks
2015-11-06T16:18:35Z leafybas_ joined #lisp
2015-11-06T16:19:47Z badkins quit (Read error: Connection reset by peer)
2015-11-06T16:19:50Z TMM quit (Quit: Ex-Chat)
2015-11-06T16:20:40Z clop joined #lisp
2015-11-06T16:21:20Z vert2 quit (Ping timeout: 265 seconds)
2015-11-06T16:22:06Z Tordek quit (Ping timeout: 250 seconds)
2015-11-06T16:22:08Z nydel quit (Ping timeout: 272 seconds)
2015-11-06T16:22:46Z leafyba__ quit (Ping timeout: 272 seconds)
2015-11-06T16:22:47Z shka quit (Remote host closed the connection)
2015-11-06T16:23:03Z flambard quit (Quit: kthxbai)
2015-11-06T16:23:22Z leafybas_ quit (Remote host closed the connection)
2015-11-06T16:23:47Z shka joined #lisp
2015-11-06T16:23:49Z leafybas_ joined #lisp
2015-11-06T16:26:03Z netrobyatmobile quit (Quit: Connection closed for inactivity)
2015-11-06T16:28:23Z faalentijn joined #lisp
2015-11-06T16:29:34Z lisse joined #lisp
2015-11-06T16:33:48Z ZabaQ quit (Quit: Leaving)
2015-11-06T16:33:48Z bb010g quit (Ping timeout: 264 seconds)
2015-11-06T16:34:11Z shka quit (Remote host closed the connection)
2015-11-06T16:34:36Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-06T16:35:21Z johann_ joined #lisp
2015-11-06T16:38:02Z shka joined #lisp
2015-11-06T16:38:31Z bb010g joined #lisp
2015-11-06T16:39:51Z tsoutseki quit (Quit: Leaving)
2015-11-06T16:40:00Z johann_ quit (Ping timeout: 255 seconds)
2015-11-06T16:40:39Z phoe_krk quit (Quit: phoe_krk)
2015-11-06T16:41:10Z tsoutseki joined #lisp
2015-11-06T16:41:12Z hiroakip quit (Ping timeout: 246 seconds)
2015-11-06T16:41:46Z xrash quit (Ping timeout: 240 seconds)
2015-11-06T16:42:01Z shka quit (Remote host closed the connection)
2015-11-06T16:42:42Z shka joined #lisp
2015-11-06T16:44:46Z xrash joined #lisp
2015-11-06T16:45:04Z EvW joined #lisp
2015-11-06T16:45:21Z warweasle is now known as warweasle_needs_
2015-11-06T16:46:15Z Petit_Dejeuner joined #lisp
2015-11-06T16:46:42Z shka quit (Remote host closed the connection)
2015-11-06T16:46:52Z Tordek joined #lisp
2015-11-06T16:47:09Z shka joined #lisp
2015-11-06T16:47:40Z gravicappa joined #lisp
2015-11-06T16:48:33Z remi`bd quit (Quit: leaving)
2015-11-06T16:49:18Z defaultxr joined #lisp
2015-11-06T16:49:22Z kami joined #lisp
2015-11-06T16:49:39Z kami: Good evening.
2015-11-06T16:49:51Z vert2 joined #lisp
2015-11-06T16:50:01Z kami: AeroNotix: ping
2015-11-06T16:51:46Z prxq joined #lisp
2015-11-06T16:51:59Z tsoutseki quit (Ping timeout: 240 seconds)
2015-11-06T16:53:54Z hiroakip joined #lisp
2015-11-06T16:55:02Z araujo_ quit (Quit: Leaving)
2015-11-06T16:58:11Z faalentijn quit (Quit: WeeChat 1.3)
2015-11-06T17:00:22Z faalentijn joined #lisp
2015-11-06T17:01:27Z danieli joined #lisp
2015-11-06T17:02:53Z araujo joined #lisp
2015-11-06T17:03:01Z leafyba__ joined #lisp
2015-11-06T17:03:51Z warweasle_needs_ is now known as warweasle
2015-11-06T17:04:22Z znpy quit (Ping timeout: 260 seconds)
2015-11-06T17:04:43Z tsoutseki joined #lisp
2015-11-06T17:05:18Z zacharias_ quit (Ping timeout: 260 seconds)
2015-11-06T17:05:54Z gigetoo quit (Remote host closed the connection)
2015-11-06T17:05:59Z leafybas_ quit (Ping timeout: 240 seconds)
2015-11-06T17:06:08Z gigetoo joined #lisp
2015-11-06T17:06:52Z scymtym_ joined #lisp
2015-11-06T17:07:16Z kbtr quit (Remote host closed the connection)
2015-11-06T17:07:19Z leafyba__ quit (Ping timeout: 240 seconds)
2015-11-06T17:10:44Z badkins joined #lisp
2015-11-06T17:12:36Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-06T17:18:46Z kbtr joined #lisp
2015-11-06T17:18:56Z lisse joined #lisp
2015-11-06T17:19:06Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T17:19:35Z k-stz joined #lisp
2015-11-06T17:20:17Z cadadar quit (Quit: Leaving.)
2015-11-06T17:23:32Z Guest14 joined #lisp
2015-11-06T17:25:02Z fitzsim` is now known as fitzsim
2015-11-06T17:26:26Z kami quit (Ping timeout: 260 seconds)
2015-11-06T17:28:33Z briantrice joined #lisp
2015-11-06T17:28:56Z tristero joined #lisp
2015-11-06T17:30:08Z bb010g quit (Quit: Connection closed for inactivity)
2015-11-06T17:31:05Z shum quit (Read error: Connection reset by peer)
2015-11-06T17:31:23Z sdothum joined #lisp
2015-11-06T17:34:04Z joshe joined #lisp
2015-11-06T17:35:10Z joshe quit (Client Quit)
2015-11-06T17:35:23Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T17:35:36Z joshe joined #lisp
2015-11-06T17:36:08Z johann_ joined #lisp
2015-11-06T17:38:19Z raphaelsss joined #lisp
2015-11-06T17:39:25Z Posterdati: is it possible to convert a decimal to a bits array?
2015-11-06T17:40:03Z mordocai: Anything is possible! (I don't know how to do that, but sounds very possible)
2015-11-06T17:40:25Z nyef: Why do you want to do this?
2015-11-06T17:41:05Z johann_ quit (Ping timeout: 265 seconds)
2015-11-06T17:41:15Z Posterdati: I need to read 8 bits from an i2c device, select the specified bits change them and then write back
2015-11-06T17:41:30Z wuzzz quit (Ping timeout: 246 seconds)
2015-11-06T17:42:34Z Guest14 joined #lisp
2015-11-06T17:46:13Z bb010g joined #lisp
2015-11-06T17:46:21Z pyon quit (Quit: fix config)
2015-11-06T17:46:38Z sdothum quit (Read error: Connection reset by peer)
2015-11-06T17:46:46Z Posterdati: no idea>
2015-11-06T17:46:48Z Posterdati: ?
2015-11-06T17:47:21Z hiroakip quit (Ping timeout: 246 seconds)
2015-11-06T17:47:21Z EvW quit (Ping timeout: 246 seconds)
2015-11-06T17:47:48Z sdothum joined #lisp
2015-11-06T17:47:58Z mordocai: Posterdati: This looks like it has some relevant info on bit level operations https://psg.com/~dlamkins/sl/chapter18.html
2015-11-06T17:48:07Z mordocai: Not sure how up to date it is or anything though
2015-11-06T17:50:06Z HDurer quit (Ping timeout: 240 seconds)
2015-11-06T17:50:06Z Posterdati: mordocai: thanks
2015-11-06T17:50:33Z mordocai: Posterdati: also this http://www.lispforum.com/viewtopic.php?f=2&t=1205
2015-11-06T17:50:47Z Posterdati: I'm on it! Thanks
2015-11-06T17:51:23Z nzambe: Posterdati:you're using lisp to work with a microcontroller?
2015-11-06T17:51:29Z hiroakip joined #lisp
2015-11-06T17:51:41Z Posterdati: nzambe: more or less
2015-11-06T17:53:19Z lispyone quit (Remote host closed the connection)
2015-11-06T17:53:40Z haom joined #lisp
2015-11-06T17:53:44Z UtkarshRay joined #lisp
2015-11-06T17:54:49Z raphaelsss quit (Read error: Connection reset by peer)
2015-11-06T17:55:25Z cadadar joined #lisp
2015-11-06T18:00:43Z tsoutseki quit (Quit: Leaving)
2015-11-06T18:01:22Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T18:01:50Z HDurer joined #lisp
2015-11-06T18:02:07Z ekinmur joined #lisp
2015-11-06T18:04:44Z pyon joined #lisp
2015-11-06T18:06:07Z rszeno joined #lisp
2015-11-06T18:09:11Z ghard quit (Ping timeout: 264 seconds)
2015-11-06T18:09:25Z attila_lendvai joined #lisp
2015-11-06T18:09:25Z attila_lendvai quit (Changing host)
2015-11-06T18:09:25Z attila_lendvai joined #lisp
2015-11-06T18:13:46Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-06T18:13:57Z _cosmonaut_ quit (Remote host closed the connection)
2015-11-06T18:14:15Z znpy joined #lisp
2015-11-06T18:15:52Z reggy joined #lisp
2015-11-06T18:17:18Z eazar001 joined #lisp
2015-11-06T18:17:35Z HDurer quit (Ping timeout: 264 seconds)
2015-11-06T18:17:50Z MaggieAndEazar joined #lisp
2015-11-06T18:17:58Z lambda-smith joined #lisp
2015-11-06T18:24:14Z mea-culp` joined #lisp
2015-11-06T18:26:03Z mea-culpa quit (Ping timeout: 260 seconds)
2015-11-06T18:29:09Z HDurer joined #lisp
2015-11-06T18:31:16Z preacherAKAnd joined #lisp
2015-11-06T18:31:56Z pt1 joined #lisp
2015-11-06T18:34:37Z pt1 quit (Remote host closed the connection)
2015-11-06T18:35:08Z znpy quit (Ping timeout: 272 seconds)
2015-11-06T18:35:29Z malbertife joined #lisp
2015-11-06T18:35:58Z phoe_krk joined #lisp
2015-11-06T18:36:11Z leafybas_ joined #lisp
2015-11-06T18:36:20Z phoe_krk quit (Client Quit)
2015-11-06T18:36:28Z pt1 joined #lisp
2015-11-06T18:36:53Z johann_ joined #lisp
2015-11-06T18:38:46Z lambda-smith quit (Quit: Konversation terminated!)
2015-11-06T18:41:19Z johann_ quit (Ping timeout: 250 seconds)
2015-11-06T18:47:35Z theBlackDragon quit (Ping timeout: 264 seconds)
2015-11-06T18:47:42Z danieli quit (Ping timeout: 250 seconds)
2015-11-06T18:48:28Z danieli joined #lisp
2015-11-06T18:51:20Z danieli quit (Read error: Connection reset by peer)
2015-11-06T18:54:25Z k-stz quit (Remote host closed the connection)
2015-11-06T18:54:26Z rtra quit (Ping timeout: 240 seconds)
2015-11-06T18:56:21Z LilSusieCrabCake joined #lisp
2015-11-06T18:56:39Z malbertife quit (Quit: Leaving)
2015-11-06T18:56:57Z fantazo joined #lisp
2015-11-06T18:58:40Z rtra joined #lisp
2015-11-06T18:59:41Z pt1 quit (Remote host closed the connection)
2015-11-06T19:01:14Z sdothum quit (Read error: Connection reset by peer)
2015-11-06T19:01:23Z LilSusieCrabCake quit (Ping timeout: 244 seconds)
2015-11-06T19:02:23Z sdothum joined #lisp
2015-11-06T19:04:02Z quasus joined #lisp
2015-11-06T19:04:13Z developernotes joined #lisp
2015-11-06T19:05:59Z solyd joined #lisp
2015-11-06T19:07:07Z fantazo quit (Ping timeout: 260 seconds)
2015-11-06T19:10:11Z cmack joined #lisp
2015-11-06T19:10:19Z eudoxia joined #lisp
2015-11-06T19:10:43Z eudoxia quit (Remote host closed the connection)
2015-11-06T19:11:04Z fantazo joined #lisp
2015-11-06T19:11:13Z theBlackDragon joined #lisp
2015-11-06T19:15:19Z hiroakip quit (Ping timeout: 240 seconds)
2015-11-06T19:15:40Z LiamH quit (Ping timeout: 272 seconds)
2015-11-06T19:19:25Z leafybas_ quit (Read error: Connection reset by peer)
2015-11-06T19:19:52Z leafybas_ joined #lisp
2015-11-06T19:22:52Z rszeno quit (Quit: Leaving.)
2015-11-06T19:23:58Z tharugrim joined #lisp
2015-11-06T19:23:59Z sdothum quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-11-06T19:24:59Z wuzzz joined #lisp
2015-11-06T19:25:32Z sdothum joined #lisp
2015-11-06T19:28:36Z shka quit (Read error: Connection reset by peer)
2015-11-06T19:28:56Z shka joined #lisp
2015-11-06T19:36:26Z LiamH joined #lisp
2015-11-06T19:37:13Z pt1 joined #lisp
2015-11-06T19:37:41Z johann_ joined #lisp
2015-11-06T19:37:57Z pt1 quit (Remote host closed the connection)
2015-11-06T19:38:19Z HDurer quit (Ping timeout: 240 seconds)
2015-11-06T19:40:19Z Vulfe joined #lisp
2015-11-06T19:41:46Z gravicappa quit (Ping timeout: 240 seconds)
2015-11-06T19:41:55Z EvW joined #lisp
2015-11-06T19:42:06Z johann_ quit (Ping timeout: 260 seconds)
2015-11-06T19:42:16Z grouzen quit (Ping timeout: 272 seconds)
2015-11-06T19:42:29Z xrash quit (Remote host closed the connection)
2015-11-06T19:44:47Z Vulfe quit (Ping timeout: 244 seconds)
2015-11-06T19:45:56Z HDurer joined #lisp
2015-11-06T19:50:01Z lispyone joined #lisp
2015-11-06T19:59:34Z phoe_krk joined #lisp
2015-11-06T20:01:15Z theBlackDragon quit (Ping timeout: 252 seconds)
2015-11-06T20:02:37Z theBlackDragon joined #lisp
2015-11-06T20:04:40Z gingerale joined #lisp
2015-11-06T20:07:43Z Bicyclidine joined #lisp
2015-11-06T20:08:08Z White_Flame: Posterdati: look up LDB and BYTE.  It lets you access bits from an integer as their own integer.
2015-11-06T20:11:48Z mordocai: White_Flame: Posterdati's original question, btw, was for "decimal" not integer. I only linked integer stuff because that was what I was able to find.
2015-11-06T20:12:42Z White_Flame: hmm, aren't decimal libs usually built on top of rationals, so this should still work?
2015-11-06T20:12:53Z mordocai shrugs
2015-11-06T20:13:09Z mordocai: I don't really have any knowledge on the subject, was just trying to help look things up
2015-11-06T20:13:15Z White_Flame: hmm, probably not.  rational should never be an integer, thinking about it :)
2015-11-06T20:13:16Z dmiles_afk quit (Read error: Connection reset by peer)
2015-11-06T20:13:56Z White_Flame: but if it's microcontroller and i2c stuff, sounds like it's actually integer, not decimal
2015-11-06T20:14:05Z dmiles_afk joined #lisp
2015-11-06T20:14:57Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-06T20:15:24Z farhaven quit (Ping timeout: 246 seconds)
2015-11-06T20:15:30Z wuzzz quit (Ping timeout: 246 seconds)
2015-11-06T20:16:22Z tsoutseki joined #lisp
2015-11-06T20:17:11Z mrSpec quit (Quit: mrSpec)
2015-11-06T20:17:35Z freehck quit (Remote host closed the connection)
2015-11-06T20:17:35Z mrSpec joined #lisp
2015-11-06T20:24:00Z TMM joined #lisp
2015-11-06T20:26:25Z wuzzz joined #lisp
2015-11-06T20:29:08Z HDurer quit (Ping timeout: 272 seconds)
2015-11-06T20:29:13Z MaggieAndEazar quit (Quit: Connection closed for inactivity)
2015-11-06T20:30:21Z algae quit (Quit: leaving)
2015-11-06T20:32:41Z kushal quit (Ping timeout: 250 seconds)
2015-11-06T20:34:17Z snv quit (Quit: Leaving.)
2015-11-06T20:36:20Z ofeliany joined #lisp
2015-11-06T20:36:28Z faheem__: Xach: Apparently you like to mess with scammers. E.g. https://soundcloud.com/zach-beane/diners-club. Funny stuff. Also, the Jack Hack one, which is even funnier. You should be a comedian. I particularly liked it when you asked to hear more on the on-hold music.
2015-11-06T20:36:32Z faheem__: more of, sorry.
2015-11-06T20:37:12Z pillton joined #lisp
2015-11-06T20:38:24Z johann_ joined #lisp
2015-11-06T20:39:34Z HDurer joined #lisp
2015-11-06T20:40:59Z solyd quit (Ping timeout: 264 seconds)
2015-11-06T20:41:52Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T20:42:53Z lisse joined #lisp
2015-11-06T20:43:03Z johann_ quit (Ping timeout: 252 seconds)
2015-11-06T20:43:21Z ofeliany left #lisp
2015-11-06T20:44:21Z HDurer quit (Ping timeout: 255 seconds)
2015-11-06T20:44:49Z tsoutseki quit (Quit: Leaving)
2015-11-06T20:45:24Z Bicyclidine quit (Quit: back later)
2015-11-06T20:45:44Z Xach: http://www.xach.com/togo/ was the first one i did, many years ago
2015-11-06T20:45:59Z ovx999 quit (Ping timeout: 240 seconds)
2015-11-06T20:49:09Z haom left #lisp
2015-11-06T20:49:34Z kushal joined #lisp
2015-11-06T20:49:57Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T20:50:03Z TMM_ joined #lisp
2015-11-06T20:50:50Z faheem__: Xach:  So this is some kind of hobby, then? :-)
2015-11-06T20:50:57Z Xach: not any more
2015-11-06T20:51:31Z faheem__: Huh, do scammers actually respond to emails then? I've never replied, so I don't know.
2015-11-06T20:51:36Z faheem__: Apparently in that case.
2015-11-06T20:51:58Z faheem__: I guess they can't rob you if they don't reply, so...
2015-11-06T20:51:59Z TMM quit (Ping timeout: 240 seconds)
2015-11-06T20:52:08Z faheem__: It's just hard to imagine real people typing all that drivel.
2015-11-06T20:53:36Z shka quit (Quit: Konversation terminated!)
2015-11-06T20:54:15Z faheem__: Family photos? Cute.
2015-11-06T20:54:54Z ekinmur joined #lisp
2015-11-06T20:55:17Z farhaven joined #lisp
2015-11-06T20:56:22Z HDurer joined #lisp
2015-11-06T20:58:10Z Raimondii joined #lisp
2015-11-06T20:59:31Z RY58304 joined #lisp
2015-11-06T21:00:33Z HDurer quit (Ping timeout: 246 seconds)
2015-11-06T21:01:00Z Raimondi quit (Ping timeout: 255 seconds)
2015-11-06T21:02:16Z kdas_ joined #lisp
2015-11-06T21:03:07Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-06T21:03:34Z attila_lendvai joined #lisp
2015-11-06T21:03:34Z attila_lendvai quit (Changing host)
2015-11-06T21:03:34Z attila_lendvai joined #lisp
2015-11-06T21:03:39Z Raimondii is now known as Raimondi
2015-11-06T21:03:59Z RY58304 is now known as ozihcs
2015-11-06T21:04:22Z kushal quit (Ping timeout: 260 seconds)
2015-11-06T21:05:35Z kdas_ quit (Read error: Connection reset by peer)
2015-11-06T21:05:40Z hiroakip joined #lisp
2015-11-06T21:05:58Z kushal joined #lisp
2015-11-06T21:08:22Z Guest14 joined #lisp
2015-11-06T21:08:29Z lisse joined #lisp
2015-11-06T21:12:01Z vlatkoB quit (Ping timeout: 252 seconds)
2015-11-06T21:12:10Z warweasle quit (Remote host closed the connection)
2015-11-06T21:13:03Z HDurer joined #lisp
2015-11-06T21:13:07Z scymtym_ quit (Ping timeout: 252 seconds)
2015-11-06T21:13:54Z vlatkoB joined #lisp
2015-11-06T21:15:32Z pt1 joined #lisp
2015-11-06T21:16:18Z pt1 quit (Remote host closed the connection)
2015-11-06T21:24:56Z TMM_ quit (Quit: Ex-Chat)
2015-11-06T21:25:08Z preacherAKAnd quit (Quit: Konversation terminated!)
2015-11-06T21:25:31Z TMM joined #lisp
2015-11-06T21:26:15Z Bicyclidine joined #lisp
2015-11-06T21:26:17Z ozihcs quit (Quit: q)
2015-11-06T21:27:01Z halfcrazy joined #lisp
2015-11-06T21:27:11Z mvilleneuve joined #lisp
2015-11-06T21:27:51Z mvilleneuve quit (Client Quit)
2015-11-06T21:31:42Z hiroakip quit (Ping timeout: 246 seconds)
2015-11-06T21:31:57Z ebrasca joined #lisp
2015-11-06T21:33:36Z oleba` joined #lisp
2015-11-06T21:36:16Z xaotuk joined #lisp
2015-11-06T21:36:22Z prxq quit (Read error: Connection reset by peer)
2015-11-06T21:36:51Z ebrasca quit (Remote host closed the connection)
2015-11-06T21:37:21Z ebrasca joined #lisp
2015-11-06T21:38:05Z phoe_krk quit (Quit: phoe_krk)
2015-11-06T21:39:10Z johann_ joined #lisp
2015-11-06T21:39:35Z halfcrazy quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T21:40:50Z mrSpec quit (Quit: mrSpec)
2015-11-06T21:41:30Z gingerale quit (Remote host closed the connection)
2015-11-06T21:42:16Z kushal quit (Ping timeout: 265 seconds)
2015-11-06T21:43:45Z johann_ quit (Ping timeout: 250 seconds)
2015-11-06T21:46:19Z developernotes quit (Ping timeout: 240 seconds)
2015-11-06T21:46:49Z kobain joined #lisp
2015-11-06T21:55:18Z badkins quit (Read error: Connection reset by peer)
2015-11-06T21:56:07Z danlentz_ quit (Quit: Textual IRC Client: www.textualapp.com)
2015-11-06T21:56:32Z danlentz_ joined #lisp
2015-11-06T21:59:05Z resttime joined #lisp
2015-11-06T22:00:03Z Karl_Dscc quit (Remote host closed the connection)
2015-11-06T22:00:12Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T22:04:08Z srh joined #lisp
2015-11-06T22:06:08Z remi`bd joined #lisp
2015-11-06T22:06:43Z TMM quit (Remote host closed the connection)
2015-11-06T22:08:31Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T22:09:33Z TMM joined #lisp
2015-11-06T22:09:54Z quazimodo joined #lisp
2015-11-06T22:10:29Z Guest14 joined #lisp
2015-11-06T22:10:59Z tharu joined #lisp
2015-11-06T22:13:39Z tharugrim quit (Ping timeout: 240 seconds)
2015-11-06T22:15:03Z vlatkoB quit (Remote host closed the connection)
2015-11-06T22:19:43Z atgreen quit (Ping timeout: 250 seconds)
2015-11-06T22:20:30Z LiamH quit (Quit: Leaving.)
2015-11-06T22:20:45Z Whymind quit (Read error: Connection reset by peer)
2015-11-06T22:21:24Z Whymind joined #lisp
2015-11-06T22:24:37Z oleba` quit (Ping timeout: 252 seconds)
2015-11-06T22:24:54Z Ven joined #lisp
2015-11-06T22:30:44Z Ven quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-11-06T22:30:56Z angavrilov quit (Remote host closed the connection)
2015-11-06T22:31:36Z TMM quit (Remote host closed the connection)
2015-11-06T22:31:46Z duggiefresh quit (Remote host closed the connection)
2015-11-06T22:32:26Z TMM joined #lisp
2015-11-06T22:35:45Z pt1 joined #lisp
2015-11-06T22:39:09Z znpy joined #lisp
2015-11-06T22:39:53Z johann_ joined #lisp
2015-11-06T22:40:31Z resttime quit (Quit: Bye bye!)
2015-11-06T22:41:59Z badkins joined #lisp
2015-11-06T22:42:15Z armour quit (Ping timeout: 255 seconds)
2015-11-06T22:44:35Z johann_ quit (Ping timeout: 264 seconds)
2015-11-06T22:48:30Z oleo_ joined #lisp
2015-11-06T22:51:06Z oleo quit (Ping timeout: 240 seconds)
2015-11-06T22:59:49Z ASau joined #lisp
2015-11-06T23:02:20Z atgreen joined #lisp
2015-11-06T23:07:55Z shum joined #lisp
2015-11-06T23:08:14Z sdothum quit (Read error: Connection reset by peer)
2015-11-06T23:12:35Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T23:17:49Z remi`bd quit (Quit: leaving)
2015-11-06T23:18:59Z lispyone quit (Remote host closed the connection)
2015-11-06T23:20:07Z pt1 quit (Remote host closed the connection)
2015-11-06T23:21:24Z Raimondi quit (Ping timeout: 272 seconds)
2015-11-06T23:21:52Z duggiefresh joined #lisp
2015-11-06T23:25:19Z EvW quit (Ping timeout: 240 seconds)
2015-11-06T23:26:11Z Raimondi joined #lisp
2015-11-06T23:26:38Z lisse quit (Read error: Connection reset by peer)
2015-11-06T23:27:10Z lisse joined #lisp
2015-11-06T23:28:00Z wuzzz quit (Ping timeout: 246 seconds)
2015-11-06T23:38:18Z ekinmur joined #lisp
2015-11-06T23:40:35Z duggiefresh quit
2015-11-06T23:40:42Z johann_ joined #lisp
2015-11-06T23:40:50Z mordocai quit (Read error: Connection reset by peer)
2015-11-06T23:42:10Z Vulfe joined #lisp
2015-11-06T23:42:18Z mason` joined #lisp
2015-11-06T23:43:41Z constantine joined #lisp
2015-11-06T23:45:10Z johann_ quit (Ping timeout: 240 seconds)
2015-11-06T23:45:57Z Vulfe quit (Remote host closed the connection)
2015-11-06T23:46:11Z Vulfe joined #lisp
2015-11-06T23:49:50Z ajf- quit (Ping timeout: 240 seconds)
2015-11-06T23:50:47Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-06T23:51:36Z TMM quit (Quit: Ex-Chat)
2015-11-06T23:53:46Z xaotuk quit (Ping timeout: 260 seconds)
2015-11-07T00:00:48Z Vulfe quit (Read error: Connection reset by peer)
2015-11-07T00:02:25Z pocket joined #lisp
2015-11-07T00:02:28Z pt1 joined #lisp
2015-11-07T00:03:54Z futpib quit (Ping timeout: 260 seconds)
2015-11-07T00:06:56Z happy-dude joined #lisp
2015-11-07T00:08:18Z antonv joined #lisp
2015-11-07T00:08:40Z pocket quit (Remote host closed the connection)
2015-11-07T00:10:28Z pocket joined #lisp
2015-11-07T00:10:57Z yrdz quit (Read error: Connection reset by peer)
2015-11-07T00:11:13Z yrdz joined #lisp
2015-11-07T00:12:58Z Vulfe joined #lisp
2015-11-07T00:13:17Z Bicyclidine quit (Quit: no)
2015-11-07T00:13:50Z _sjs quit (Ping timeout: 260 seconds)
2015-11-07T00:14:37Z pocket quit (Remote host closed the connection)
2015-11-07T00:19:02Z mishoo quit (Ping timeout: 272 seconds)
2015-11-07T00:21:32Z jsgrant joined #lisp
2015-11-07T00:23:46Z pt1 quit (Remote host closed the connection)
2015-11-07T00:26:07Z baboon`` quit (Remote host closed the connection)
2015-11-07T00:27:52Z TMM joined #lisp
2015-11-07T00:34:17Z Niac joined #lisp
2015-11-07T00:35:33Z Yuuhi quit (Remote host closed the connection)
2015-11-07T00:36:27Z vmmenon joined #lisp
2015-11-07T00:36:31Z vmmenon left #lisp
2015-11-07T00:38:46Z quazimodo quit (Ping timeout: 240 seconds)
2015-11-07T00:39:08Z cadadar quit (Quit: Leaving.)
2015-11-07T00:40:34Z Vulfe quit (Read error: Connection reset by peer)
2015-11-07T00:41:23Z johann_ joined #lisp
2015-11-07T00:42:10Z lisse quit (Ping timeout: 240 seconds)
2015-11-07T00:43:52Z Shinmera quit (Quit: しつれいしなければならないんです。)
2015-11-07T00:46:02Z johann_ quit (Ping timeout: 260 seconds)
2015-11-07T00:46:48Z Nikotiini quit (Read error: Connection reset by peer)
2015-11-07T00:48:10Z jackdaniel: OK, ecl-android 0.0.1 released: https://common-lisp.net/project/ecl/ | https://news.ycombinator.com/item?id=10523026 :-)
2015-11-07T00:48:47Z EvW joined #lisp
2015-11-07T00:48:58Z antonv: jackdaniel: cool, congrats!
2015-11-07T00:49:23Z jackdaniel: thanks :) it's alpha quality for now, but I really want to start writing the next ECL Quarterly and didn't want to postpone it further
2015-11-07T00:50:09Z antonv: jackdaniel: so, we can connect slime to a swank running on android?
2015-11-07T00:50:25Z jackdaniel: exactly
2015-11-07T00:50:36Z jackdaniel: there is also quicklisp helper (get-quicklisp)
2015-11-07T00:50:37Z Vulfe joined #lisp
2015-11-07T00:50:53Z antonv: that's what we can call embeddable common lisp :)
2015-11-07T00:50:57Z jackdaniel: but libssl isn't bundled yet, so anything depending on cl+ssl will fail
2015-11-07T00:52:28Z antonv: jackdaniel: haw about cross compiling lisp programs for android?
2015-11-07T00:52:45Z antonv: i.e. buld lisp program on your desktop machine, and deploy it to android
2015-11-07T00:52:49Z jackdaniel: it's next on the roadmap (cross compilation in general)
2015-11-07T00:52:54Z antonv: can you do this?
2015-11-07T00:52:54Z jackdaniel: and yeah, it will be possible
2015-11-07T00:52:56Z antonv: ah, ok
2015-11-07T00:53:01Z jackdaniel: yes, but it's painful right now
2015-11-07T00:54:17Z antonv: jackdaniel: btw, are there cloud android servers?
2015-11-07T00:54:28Z antonv: can I install android on an ARM cloud hosting?
2015-11-07T00:54:42Z znpy quit (Read error: Connection reset by peer)
2015-11-07T00:54:47Z jason_m joined #lisp
2015-11-07T00:54:49Z jackdaniel: I don't know, never did that
2015-11-07T00:55:25Z antonv: ok
2015-11-07T00:57:02Z jackdaniel: goodnight o/
2015-11-07T00:58:30Z stepnem quit (Ping timeout: 265 seconds)
2015-11-07T01:01:47Z EvW quit (Ping timeout: 250 seconds)
2015-11-07T01:04:51Z cmack quit (Ping timeout: 246 seconds)
2015-11-07T01:04:59Z faalentijn quit (Ping timeout: 240 seconds)
2015-11-07T01:06:30Z briantrice quit (Quit: briantrice)
2015-11-07T01:07:10Z Ven joined #lisp
2015-11-07T01:09:05Z cpc26_ quit (Read error: Connection reset by peer)
2015-11-07T01:09:13Z cpc26 joined #lisp
2015-11-07T01:09:21Z Guest27734 joined #lisp
2015-11-07T01:09:37Z faalentijn joined #lisp
2015-11-07T01:10:03Z Guest27734 left #lisp
2015-11-07T01:12:20Z antonv: jackdaniel: goodnight!
2015-11-07T01:13:41Z briantrice joined #lisp
2015-11-07T01:16:45Z Vulfe quit (Read error: Connection reset by peer)
2015-11-07T01:17:31Z low-prof1 quit (Ping timeout: 244 seconds)
2015-11-07T01:19:28Z nimiux quit (Ping timeout: 246 seconds)
2015-11-07T01:19:48Z nimiux joined #lisp
2015-11-07T01:20:10Z low-prof1 joined #lisp
2015-11-07T01:21:53Z Ven quit (Read error: Connection reset by peer)
2015-11-07T01:23:23Z fantazo quit (Quit: Verlassend)
2015-11-07T01:24:21Z Ven joined #lisp
2015-11-07T01:25:44Z Vulfe joined #lisp
2015-11-07T01:26:38Z impulse quit (Ping timeout: 260 seconds)
2015-11-07T01:28:00Z impulse joined #lisp
2015-11-07T01:28:00Z Ven quit (Client Quit)
2015-11-07T01:31:34Z jsgrant quit (Remote host closed the connection)
2015-11-07T01:32:52Z Karl_Dscc joined #lisp
2015-11-07T01:33:01Z aiwaz is now known as Uroboros
2015-11-07T01:34:22Z netrobyatmobile joined #lisp
2015-11-07T01:34:54Z EvW joined #lisp
2015-11-07T01:35:27Z ekinmur joined #lisp
2015-11-07T01:37:03Z srh quit (Quit: Leaving)
2015-11-07T01:38:12Z Niac_ joined #lisp
2015-11-07T01:38:15Z Niac quit (Read error: Connection reset by peer)
2015-11-07T01:40:34Z leafybas_ quit (Remote host closed the connection)
2015-11-07T01:41:02Z NeverDie_ joined #lisp
2015-11-07T01:41:15Z myrkraverk quit (Ping timeout: 246 seconds)
2015-11-07T01:41:38Z s00pcan quit (Remote host closed the connection)
2015-11-07T01:42:12Z johann_ joined #lisp
2015-11-07T01:42:26Z s00pcan joined #lisp
2015-11-07T01:42:51Z NeverDie quit (Ping timeout: 260 seconds)
2015-11-07T01:43:02Z NeverDie_ quit (Max SendQ exceeded)
2015-11-07T01:43:33Z lisse joined #lisp
2015-11-07T01:44:08Z CharlesN joined #lisp
2015-11-07T01:44:18Z NeverDie joined #lisp
2015-11-07T01:46:45Z johann_ quit (Ping timeout: 255 seconds)
2015-11-07T01:49:12Z NeverDie quit (Max SendQ exceeded)
2015-11-07T01:50:12Z Vulfe quit (Read error: Connection reset by peer)
2015-11-07T01:53:03Z NeverDie joined #lisp
2015-11-07T01:53:39Z chu joined #lisp
2015-11-07T01:54:03Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-07T01:59:59Z Vulfe joined #lisp
2015-11-07T02:06:22Z lisse quit (Max SendQ exceeded)
2015-11-07T02:07:31Z lisse joined #lisp
2015-11-07T02:10:08Z bb010g quit (Quit: Connection closed for inactivity)
2015-11-07T02:19:30Z shum quit (Read error: Connection reset by peer)
2015-11-07T02:19:59Z sdothum joined #lisp
2015-11-07T02:20:33Z danlentz_ joined #lisp
2015-11-07T02:21:19Z ebrasca quit (Remote host closed the connection)
2015-11-07T02:22:20Z danlentz_ quit (Client Quit)
2015-11-07T02:25:21Z Jubb joined #lisp
2015-11-07T02:26:14Z lisse quit (Ping timeout: 244 seconds)
2015-11-07T02:28:28Z tharu quit (Quit: WeeChat 1.3)
2015-11-07T02:31:19Z Vulfe quit (Read error: Connection reset by peer)
2015-11-07T02:31:42Z happy-dude quit (Quit: Connection closed for inactivity)
2015-11-07T02:33:45Z briantrice quit (Quit: briantrice)
2015-11-07T02:37:29Z aap_ joined #lisp
2015-11-07T02:39:49Z peytonien joined #lisp
2015-11-07T02:40:30Z aap quit (Ping timeout: 240 seconds)
2015-11-07T02:40:50Z Vulfe joined #lisp
2015-11-07T02:41:24Z leafybas_ joined #lisp
2015-11-07T02:42:59Z johann_ joined #lisp
2015-11-07T02:44:42Z RazWelle1 joined #lisp
2015-11-07T02:45:40Z RazWelle1: Hey, I'm following the tutorial on http://www.adamtornhill.com/articles/lispweb.htm but I can't seem to get past compiling defpackage? I've installed the libraries using quickload, I even try loading with quickload each time I load the file.. but I keep getting compile errors
2015-11-07T02:45:47Z leafybas_ quit (Ping timeout: 250 seconds)
2015-11-07T02:46:40Z RazWelle1: Here's the error and code https://gyazo.com/066b73ca58b306c76330fa7967263a0b
2015-11-07T02:47:22Z johann_ quit (Ping timeout: 260 seconds)
2015-11-07T02:47:50Z wildlander joined #lisp
2015-11-07T02:50:16Z jason_m: RazWelle1: Are you sure you've quickloaded parenscript?
2015-11-07T02:51:23Z antonv: RazWelle1: note, that ; starts a comment
2015-11-07T02:52:18Z tokenrove quit (Ping timeout: 272 seconds)
2015-11-07T02:53:09Z RazWelle1: jason_m: antonv, I've tried including and not including and several variations inbetween
2015-11-07T02:53:33Z jason_m: RazWelle1: what do you mean when you say 'including'?
2015-11-07T02:53:40Z RazWelle1: I think I'm missing something but I can't tell what- I tried doing the (load and (ql:whatever at the beginning of the file but others tell me Is houldn't need that once I've quicklisp installed it in a previous session
2015-11-07T02:53:48Z RazWelle1: commented and non-commented
2015-11-07T02:54:15Z antonv: RazWelle1: execute a single expression (ql:quickload :parenscript)
2015-11-07T02:54:18Z antonv: what do you see?
2015-11-07T02:54:51Z antonv: ha
2015-11-07T02:54:58Z antonv: you are compiling the file!
2015-11-07T02:55:02Z antonv: _compiling_
2015-11-07T02:55:11Z RazWelle1: I run c-c c-k?
2015-11-07T02:55:21Z antonv: jason_m: he is _compiling_
2015-11-07T02:55:29Z jason_m: antonv: Right, i see it
2015-11-07T02:55:33Z antonv: RazWelle1: don't compile the file
2015-11-07T02:55:45Z antonv: just execute one expression
2015-11-07T02:55:52Z jason_m: RazWelle1: Compiling (ql:quickload :parenscript) is not the same as *executing* it
2015-11-07T02:56:01Z RazWelle1: Oh, what was the command for that again?
2015-11-07T02:56:22Z RazWelle1: I was running C-c C-k to send buffer to interpreter
2015-11-07T02:56:23Z RazWelle1: or so I thought
2015-11-07T02:56:25Z antonv: RazWelle1: stay rith after the expression and press C-x C-e
2015-11-07T02:56:42Z antonv: right after the expression
2015-11-07T02:57:13Z RazWelle1: Huh, that worked
2015-11-07T02:57:20Z RazWelle1: How do I do that for the entire file? >_>
2015-11-07T02:57:20Z jason_m: RazWelle1: C-c C-k compiles the file and loads the compiled result
2015-11-07T02:57:46Z RazWelle1: Ahh, I see
2015-11-07T02:58:22Z jason_m: RazWelle1: If you are just playing around, you can run the quickload's in your repl before loading your program(s)
2015-11-07T02:58:42Z antonv: RazWelle1: I always use C-x C-e
2015-11-07T02:58:53Z RazWelle1: jason_m: What can I do if I'm working with a lot of changes and want to send them all to the buffer at once?
2015-11-07T02:58:58Z antonv: that way I write program function by function
2015-11-07T02:59:34Z RazWelle1: What about when you're starting a new session? Like.. you've closed it and killed the program and you start again
2015-11-07T02:59:50Z RazWelle1: Or you want to re-establish a base image
2015-11-07T03:00:50Z RazWelle1: Oh, slime-eval-buffer I guess, thanks so much for solving that guys
2015-11-07T03:01:07Z antonv: RazWelle1: the closest to your current variant is to change top of your file to this: http://paste.lisp.org/display/158676
2015-11-07T03:01:26Z antonv: that way you can compile it, and also just load without compiling
2015-11-07T03:01:44Z RazWelle1: Ooh that's handy
2015-11-07T03:01:53Z antonv: Later you will want to create and ASDF system for your work
2015-11-07T03:01:55Z jason_m: RazWelle1: You might want to take a look at ASDF for a common way to solve the problem of loading dependencies (like parenscript) first
2015-11-07T03:02:06Z antonv: yes yes
2015-11-07T03:02:24Z RazWelle1: ok, adding asdf to my to-read list then, that tutorial didn't cover any of that :(
2015-11-07T03:02:25Z antonv: you will create and .asd file where you specify the dependencies
2015-11-07T03:02:39Z jason_m: but when you're just getting started, you an always hop over to the repl and load what you need
2015-11-07T03:02:43Z antonv: RazWelle1: when you ready to try ask here
2015-11-07T03:02:48Z RazWelle1: So.. should I never compile then? I'm a little clueless why compiling gunked things up
2015-11-07T03:02:57Z Draz joined #lisp
2015-11-07T03:03:12Z jason_m: yes - you can compile!  the problem was that parenscript was not yet loaded
2015-11-07T03:03:37Z RazWelle1: Ohhh, so that's why the last item in the defpackage list was always causing a problem then
2015-11-07T03:03:54Z RazWelle1: Oh I see now, after evaluation it compiles
2015-11-07T03:04:01Z jason_m: that's it!
2015-11-07T03:04:05Z RazWelle1: Thanks a bunch you two, you saved me a huge headache XD
2015-11-07T03:04:52Z jason_m: happy hacking!
2015-11-07T03:05:05Z RazWelle1: Will do! tyty!
2015-11-07T03:05:55Z Vulfe quit (Read error: Connection reset by peer)
2015-11-07T03:06:07Z antonv: RazWelle1: after the tutorial you may want to refer http://www.gigamonkeys.com/book/
2015-11-07T03:06:48Z antonv: eval-when is explained in http://www.gigamonkeys.com/book/the-special-operators.html
2015-11-07T03:07:11Z RazWelle1: antonv: Yeah, I started the tutorial because I wanted to get a quick feel for lisp web dev, I was going through the gigamonkeys book before then but I lost steam, so this is a nice way to get back into it
2015-11-07T03:07:36Z jason_m: RazWelle1: If I remember correctly, the hunchentoot web server interface has changed since that tutorial was written.  if you can't figure out the correct change to make, just come back and ask.
2015-11-07T03:07:44Z s00pcan quit (Quit: leaving)
2015-11-07T03:07:54Z atgreen quit (Ping timeout: 260 seconds)
2015-11-07T03:07:58Z jason_m: I worked through that tutorial myself 2 or 3 months ago
2015-11-07T03:08:04Z s00pcan joined #lisp
2015-11-07T03:08:15Z RazWelle1: jason_m: I'm actually hoping to use clacklisp after I finish this. What really intrigues me is writing lisp javascript and html all in the same place
2015-11-07T03:08:26Z rtra quit (Ping timeout: 240 seconds)
2015-11-07T03:08:38Z antonv: RazWelle1: about gigamonkeys book, I sometime skipped the lyrics, just looked for concreete info
2015-11-07T03:09:01Z antonv: need to work with array? - find the chapter about arrays and lookup needed functions
2015-11-07T03:09:04Z jason_m: RazWelle1: Great, I don't want to add too many things to your reading list, but clack is a good one!
2015-11-07T03:10:59Z yrdz quit (Read error: Connection reset by peer)
2015-11-07T03:11:07Z raz_ joined #lisp
2015-11-07T03:11:14Z yrdz joined #lisp
2015-11-07T03:11:20Z raz_: lol I lost my irssi session
2015-11-07T03:11:47Z raz_: brb attempting to dig it back up
2015-11-07T03:11:49Z raz_ quit (Client Quit)
2015-11-07T03:13:20Z rtra joined #lisp
2015-11-07T03:16:18Z RazWelles joined #lisp
2015-11-07T03:16:46Z RazWelles: jason_m: Sorry about that, lost my irssi session. Its sitting there.. I can even see it in this room XD but I hit some strange ctrl combination and lost it
2015-11-07T03:16:59Z RazWelles: But yeah I wanted to use clacklisp so I could pair it with nginx
2015-11-07T03:17:06Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-07T03:17:22Z Vulfe joined #lisp
2015-11-07T03:17:58Z jason_m: That tutorial could use another "update" - perhaps you could do a write-up on moving it over to clack!
2015-11-07T03:18:45Z RazWelles: Hehe, I'll let you know if I do. Its a shame that its so hard to find something that takes you from beginning to end quickstart with a basic lisp web-app
2015-11-07T03:19:07Z RazWelles: So maybe it would be good to have something like "use this, this this this this, and then here's some code, now you have a web app"
2015-11-07T03:19:23Z RazWelles: The emacs is a hard pill to swallow at first, I admit, though :(
2015-11-07T03:19:46Z RazWelles: I'm the emacs guy among a bunch of friends who use vim =P
2015-11-07T03:20:08Z jason_m: I'm also learning emacs.  I just keep chipping away at the info manuals for emacs and slime, and it is slowly coming together :)
2015-11-07T03:20:35Z RazWelles: I really really like the feature where I get to have nyancat in my status bar
2015-11-07T03:20:55Z jason_m: I tried using slimv with vim for a couple months before emacs.  the repl is fussy and the whole experience isn't as rich in vim.
2015-11-07T03:21:20Z jason_m: I bet your vim friends don't have nyancat!
2015-11-07T03:21:23Z RazWelles: Yeah, lisp and emacs are rather intertwined atm, not a bad thing, but makes the entry point more difficult
2015-11-07T03:21:31Z RazWelles: XD no, but my sublime friends do
2015-11-07T03:22:31Z RazWelles: A friend watched me last night over skype screenshare, using emacs, becuse I kept making typoes in monodevelop (too used to emacs keybindings), and they thought it was neat how I could jump around really quickly
2015-11-07T03:23:33Z RazWelles idles for a bit, thanks jason and anton again :)
2015-11-07T03:23:55Z ovx999 joined #lisp
2015-11-07T03:23:56Z Karl_Dscc quit (Remote host closed the connection)
2015-11-07T03:24:02Z jason_m: np - good luck!
2015-11-07T03:24:30Z s00pcan quit (Quit: leaving)
2015-11-07T03:24:56Z blubjr: the emacs shortcuts in osx are the nicest part about that os
2015-11-07T03:24:57Z s00pcan joined #lisp
2015-11-07T03:25:44Z pocket joined #lisp
2015-11-07T03:28:06Z Vulfe quit (Remote host closed the connection)
2015-11-07T03:28:48Z pocket quit (Remote host closed the connection)
2015-11-07T03:30:18Z tokik quit (Ping timeout: 244 seconds)
2015-11-07T03:31:09Z sdothum quit (Ping timeout: 255 seconds)
2015-11-07T03:31:19Z tokik joined #lisp
2015-11-07T03:33:26Z s00pcan quit (Quit: leaving)
2015-11-07T03:33:45Z s00pcan joined #lisp
2015-11-07T03:34:17Z briantrice joined #lisp
2015-11-07T03:35:30Z sdothum joined #lisp
2015-11-07T03:35:36Z briantrice quit (Client Quit)
2015-11-07T03:41:12Z UtkarshRay quit (Remote host closed the connection)
2015-11-07T03:43:43Z johann_ joined #lisp
2015-11-07T03:45:12Z peytonien quit (Quit: leaving)
2015-11-07T03:48:38Z johann_ quit (Ping timeout: 265 seconds)
2015-11-07T03:50:13Z tokenrove joined #lisp
2015-11-07T03:52:23Z EvW quit (Ping timeout: 264 seconds)
2015-11-07T03:56:10Z harish_ quit (Quit: Leaving)
2015-11-07T03:56:35Z harish joined #lisp
2015-11-07T03:59:14Z vydd quit (Ping timeout: 260 seconds)
2015-11-07T03:59:46Z badkins quit
2015-11-07T04:01:22Z pocket joined #lisp
2015-11-07T04:04:15Z Bahman joined #lisp
2015-11-07T04:04:25Z pocket quit (Remote host closed the connection)
2015-11-07T04:10:08Z FreeBirdLjj joined #lisp
2015-11-07T04:12:06Z s00pcan quit (Ping timeout: 255 seconds)
2015-11-07T04:13:51Z s00pcan joined #lisp
2015-11-07T04:13:59Z briantrice joined #lisp
2015-11-07T04:14:21Z vert2 quit (Ping timeout: 255 seconds)
2015-11-07T04:15:09Z Tordek quit (Ping timeout: 252 seconds)
2015-11-07T04:21:05Z broken_clock joined #lisp
2015-11-07T04:24:08Z leafybas_ joined #lisp
2015-11-07T04:25:31Z alchemis7 joined #lisp
2015-11-07T04:28:39Z Vulfe joined #lisp
2015-11-07T04:29:12Z leafybas_ quit (Ping timeout: 272 seconds)
2015-11-07T04:33:06Z jason_m quit (Ping timeout: 265 seconds)
2015-11-07T04:33:20Z Vulfe quit (Ping timeout: 244 seconds)
2015-11-07T04:33:45Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-07T04:35:13Z faheem__ quit (Quit: Connection closed for inactivity)
2015-11-07T04:40:15Z erjoalgo joined #lisp
2015-11-07T04:41:05Z lisse joined #lisp
2015-11-07T04:42:03Z s00pcan quit (Ping timeout: 260 seconds)
2015-11-07T04:43:43Z s00pcan joined #lisp
2015-11-07T04:44:28Z johann_ joined #lisp
2015-11-07T04:44:37Z vert2 joined #lisp
2015-11-07T04:45:16Z Tordek joined #lisp
2015-11-07T04:45:56Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-07T04:46:29Z FreeBirdLjj joined #lisp
2015-11-07T04:48:33Z erjoalgo: what is the analoge of java.util.Scanner in lisp
2015-11-07T04:48:33Z minion: erjoalgo, memo from pjb: you've been told bullshit by White_Flame.  The CLHS doesn't specify what #\[ means in namestrings.  The presence of #\[ in a namestrings makes it a namestring for a physical pathname, which is entirely unspecified by the ANSI Common Lisp standard. It's up to the implementation to specify what it may or may not mean.  So you should read the documentation of your specification. (And yes, often implementation
2015-11-07T04:48:50Z cmoney joined #lisp
2015-11-07T04:49:32Z johann_ quit (Ping timeout: 265 seconds)
2015-11-07T04:52:42Z Xach: erjoalgo: what does java.util.Scanner do?
2015-11-07T04:55:05Z erjoalgo: it incrementally scans a string or a stream, gives me nextInt(), nextChar() methods
2015-11-07T04:55:16Z vydd joined #lisp
2015-11-07T04:55:24Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-07T04:55:45Z erjoalgo: i guess i could do it with ppcre
2015-11-07T04:55:47Z FreeBirdLjj joined #lisp
2015-11-07T04:56:14Z erjoalgo: but i'd have to manually store the state and i'd be kind of painful
2015-11-07T04:56:39Z NeverDie quit (Ping timeout: 250 seconds)
2015-11-07T04:57:01Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-07T04:57:04Z erjoalgo: maybe this would be a good opportunity to learn clojure
2015-11-07T04:59:54Z vydd quit (Ping timeout: 260 seconds)
2015-11-07T04:59:55Z Xach: erjoalgo: string-streams provide a stream interface to strings.
2015-11-07T05:00:18Z Xach: e.g. (with-input-from-string (stream "hello") (read-char stream)) => #\h
2015-11-07T05:02:01Z erjoalgo: "3 4 a b c\ne f g\nh i j 2 2 x y\nz z" I need to eg parse this into a matrix, the numbers are the dimensions of the matrix
2015-11-07T05:02:35Z Xach: There are many options.
2015-11-07T05:02:42Z erjoalgo: i guess I can use labels + ppcre to make my own nextInt(), etc, just wanted to see if there was something more convenient
2015-11-07T05:02:59Z Tristam quit (Ping timeout: 240 seconds)
2015-11-07T05:03:19Z erjoalgo: (also I can't read the whole thing into memory at once, so can't eg split)
2015-11-07T05:03:43Z Xach: I sometimes make little (or not all that little) state machines for that kind of thing.
2015-11-07T05:04:29Z erjoalgo: yeah. i'll just go with labels+ppcre for now, shouldn't be too bad
2015-11-07T05:04:41Z erjoalgo: (thanks)
2015-11-07T05:05:31Z erjoalgo: and I think ppcre is implemented as a dfa too
2015-11-07T05:05:52Z NeverDie joined #lisp
2015-11-07T05:07:54Z erjoalgo: actually i'm not even sure I can use streams with ppcre
2015-11-07T05:08:15Z |3b| quit (Read error: Connection reset by peer)
2015-11-07T05:08:19Z Xach: ppcre operates on string input.
2015-11-07T05:08:27Z Xach: can you fit individual lines into memory?
2015-11-07T05:08:54Z erjoalgo: yeah, that would work
2015-11-07T05:09:04Z |3b| joined #lisp
2015-11-07T05:10:48Z erjoalgo: (parse-integer "090 123" :junk-allowed t :start 3  )==> 90 3
2015-11-07T05:10:55Z beach joined #lisp
2015-11-07T05:11:08Z beach: Good morning everyone!
2015-11-07T05:14:26Z jlarocco_ joined #lisp
2015-11-07T05:20:04Z erjoalgo: 2d char array in cl?
2015-11-07T05:20:13Z Xach: erjoalgo: that is not what I get from that form.
2015-11-07T05:20:45Z Xach: You can have a 2d character array in CL.
2015-11-07T05:21:14Z erjoalgo: sorry yeah. it was just me noticing i could use parse-integer incrementally. (parse-integer "090 123" :junk-allowed t :start 3  )==> 123 7
2015-11-07T05:23:02Z Xach: yes. the output can be used on the next call to parse the next number.
2015-11-07T05:23:29Z Raimondi quit (Remote host closed the connection)
2015-11-07T05:23:57Z Raimondi joined #lisp
2015-11-07T05:24:24Z NeverDie_ joined #lisp
2015-11-07T05:24:59Z leafybas_ joined #lisp
2015-11-07T05:26:33Z kobain quit (Ping timeout: 250 seconds)
2015-11-07T05:26:50Z NeverDie quit (Ping timeout: 272 seconds)
2015-11-07T05:29:26Z leafybas_ quit (Ping timeout: 240 seconds)
2015-11-07T05:35:35Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-07T05:36:06Z FreeBirdLjj joined #lisp
2015-11-07T05:37:08Z _sjs joined #lisp
2015-11-07T05:38:29Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-07T05:38:47Z FreeBirdLjj joined #lisp
2015-11-07T05:40:05Z White_Flame: erjoalgo: are the newlines meaningful delimiters in there?  if not, I'd just use regular READ or READ-FROM-STRING to get a list of numbers and symbols
2015-11-07T05:40:28Z White_Flame: oftentimes, I'll just surround the input with parens, and read as a single list
2015-11-07T05:40:30Z antonv quit (Ping timeout: 244 seconds)
2015-11-07T05:40:33Z White_Flame: (as long as it's a trusted input)
2015-11-07T05:44:51Z lnostdal quit (Ping timeout: 246 seconds)
2015-11-07T05:45:11Z johann_ joined #lisp
2015-11-07T05:47:25Z johann__ joined #lisp
2015-11-07T05:47:38Z johann_ quit (Read error: Connection reset by peer)
2015-11-07T05:48:13Z White_Flame: e.g.:  (read-from-string (format nil "(~a)" ...your input string...)) -> (3 4 A B C E F G H I J 2 2 X Y Z Z)
2015-11-07T05:49:05Z Vulfe joined #lisp
2015-11-07T05:52:10Z johann__ quit (Ping timeout: 260 seconds)
2015-11-07T05:53:36Z Vulfe quit (Ping timeout: 246 seconds)
2015-11-07T05:55:02Z dmiles_afk quit
2015-11-07T05:55:38Z dmiles_afk joined #lisp
2015-11-07T05:57:03Z halfcrazy joined #lisp
2015-11-07T05:57:25Z lnostdal joined #lisp
2015-11-07T05:57:40Z halfcrazy quit (Client Quit)
2015-11-07T05:58:44Z TheSelector joined #lisp
2015-11-07T06:01:15Z johann_ joined #lisp
2015-11-07T06:01:20Z cmoney quit (Remote host closed the connection)
2015-11-07T06:05:51Z ovx999 quit (Ping timeout: 246 seconds)
2015-11-07T06:13:47Z halfcrazy joined #lisp
2015-11-07T06:15:24Z beach quit (Ping timeout: 250 seconds)
2015-11-07T06:16:27Z angavrilov joined #lisp
2015-11-07T06:17:35Z meiji11 joined #lisp
2015-11-07T06:19:14Z halfcrazy quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-07T06:22:03Z smokeink joined #lisp
2015-11-07T06:24:49Z vlatkoB joined #lisp
2015-11-07T06:26:46Z constantine quit (Ping timeout: 240 seconds)
2015-11-07T06:43:03Z narendraj9 left #lisp
2015-11-07T06:49:50Z OrangeShark quit (Quit: Leaving)
2015-11-07T06:50:26Z CharlesN quit (Ping timeout: 272 seconds)
2015-11-07T06:55:02Z gravicappa joined #lisp
2015-11-07T06:59:45Z sulky quit (Ping timeout: 246 seconds)
2015-11-07T07:02:37Z pjb: git common-lisp.net doesn't respond anymore: fatal: unable to connect to common-lisp.net: common-lisp.net[0: 148.251.248.130]: errno=Connection refused common-lisp.net[1: 2a01:4f8:200:4310::30]: errno=No route to host
2015-11-07T07:02:37Z pjb:  
2015-11-07T07:04:06Z TheSelector quit (Ping timeout: 240 seconds)
2015-11-07T07:06:33Z pjb: Posterdati: you could try to read bits directly from your device. (with-open-file (stream "device" :element-type 'bit :direction :io) (let ((byte (make-array 8 :element-type 'bit))) (read-sequence byte stream) (setf (aref byte 3) 1) (write-sequence byte stream)))
2015-11-07T07:06:48Z pjb: Posterdati: depending on the implementation, this may do the right thing.
2015-11-07T07:12:10Z pjb: erjoalgo: the question is whether the numbers are given in row major order or column major order.
2015-11-07T07:12:20Z pjb: If in row major order, then it's trivial to fill the matrix with them.
2015-11-07T07:13:29Z pjb: (let* ((w (read s)) (h (read s)) (m (make-array (list w h)))) (loop for i below (* w h) do (setf (row-major-aref m i) (read s))) m)
2015-11-07T07:14:02Z pjb: If it's in column major order, then as long as you only have matrix (fixed rank), you can write the two loops.
2015-11-07T07:14:28Z LilSusieCrabCake joined #lisp
2015-11-07T07:14:59Z pjb: Oh, my common-lisp.net problem might be because I have an old repo referenced. Ignore it.
2015-11-07T07:15:31Z gingerale joined #lisp
2015-11-07T07:22:27Z s00pcan quit (Remote host closed the connection)
2015-11-07T07:29:26Z yeticry quit (Read error: Connection reset by peer)
2015-11-07T07:30:10Z yeticry joined #lisp
2015-11-07T07:37:54Z fiddlerwoaroof: erjoalgo: also, ABCL is really easy to use with Java
2015-11-07T07:39:05Z fiddlerwoaroof: erjoalgo: I saw someone's Jython script and threw this together  just because: https://github.com/fiddlerwoaroof/otp-travel-time-matrix/blob/master/test.lisp
2015-11-07T07:40:51Z Shinmera joined #lisp
2015-11-07T07:41:37Z fiddlerwoaroof: (it's still rushed, and there's still a coupld bugs I haven't fixed yet on Github)
2015-11-07T07:46:48Z Jubb quit (Remote host closed the connection)
2015-11-07T07:50:46Z scymtym_ joined #lisp
2015-11-07T07:55:32Z mvilleneuve joined #lisp
2015-11-07T07:55:57Z Beetny joined #lisp
2015-11-07T07:57:39Z sulky joined #lisp
2015-11-07T07:57:50Z cadadar joined #lisp
2015-11-07T08:02:27Z Yuuhi joined #lisp
2015-11-07T08:02:59Z Guest14 joined #lisp
2015-11-07T08:05:57Z preacherAKAnd joined #lisp
2015-11-07T08:08:25Z mea-culp` is now known as mea-culpa
2015-11-07T08:09:16Z constantine joined #lisp
2015-11-07T08:11:17Z Vulfe joined #lisp
2015-11-07T08:15:24Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-07T08:15:37Z mvilleneuve quit (Quit: This computer has gone to sleep)
2015-11-07T08:15:42Z Vulfe quit (Ping timeout: 246 seconds)
2015-11-07T08:17:48Z erjoalgo quit (Ping timeout: 246 seconds)
2015-11-07T08:18:28Z meiji11 quit (Read error: Connection reset by peer)
2015-11-07T08:20:33Z heurist quit (Quit: heurist)
2015-11-07T08:21:50Z Guest14 joined #lisp
2015-11-07T08:22:54Z sulky quit (Ping timeout: 272 seconds)
2015-11-07T08:29:24Z sulky joined #lisp
2015-11-07T08:32:06Z xificurC quit (Ping timeout: 240 seconds)
2015-11-07T08:38:04Z ghard joined #lisp
2015-11-07T08:39:20Z Niac joined #lisp
2015-11-07T08:41:01Z yrdz quit (Read error: Connection reset by peer)
2015-11-07T08:41:17Z yrdz joined #lisp
2015-11-07T08:41:32Z briantrice quit (Quit: briantrice)
2015-11-07T08:41:51Z Niac_ quit (Ping timeout: 244 seconds)
2015-11-07T08:43:17Z FreeBirdLjj quit (Ping timeout: 250 seconds)
2015-11-07T08:44:50Z Draz quit (Quit: Leaving)
2015-11-07T08:47:33Z constantine quit (Ping timeout: 246 seconds)
2015-11-07T08:48:07Z pt1 joined #lisp
2015-11-07T08:50:41Z Niac quit (Read error: Connection reset by peer)
2015-11-07T08:50:42Z ghard quit (Ping timeout: 246 seconds)
2015-11-07T08:51:06Z snv joined #lisp
2015-11-07T08:51:42Z Niac joined #lisp
2015-11-07T08:52:05Z FreeBirdLjj joined #lisp
2015-11-07T09:07:42Z Ven joined #lisp
2015-11-07T09:11:02Z yrdz quit (Read error: Connection reset by peer)
2015-11-07T09:11:15Z yrdz joined #lisp
2015-11-07T09:11:45Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-07T09:17:06Z Guest14 joined #lisp
2015-11-07T09:19:37Z xaotuk joined #lisp
2015-11-07T09:20:48Z gingerale quit (Ping timeout: 246 seconds)
2015-11-07T09:23:07Z gingerale joined #lisp
2015-11-07T09:23:55Z aap_ is now known as aap
2015-11-07T09:26:04Z leafybas_ joined #lisp
2015-11-07T09:30:05Z xaotuk quit (Ping timeout: 250 seconds)
2015-11-07T09:30:14Z Niac quit (Quit: Lost terminal)
2015-11-07T09:30:15Z leafybas_ quit (Ping timeout: 246 seconds)
2015-11-07T09:30:50Z mishoo joined #lisp
2015-11-07T09:31:58Z xaotuk joined #lisp
2015-11-07T09:32:57Z pt1 quit
2015-11-07T09:37:52Z Ven quit (Read error: Connection reset by peer)
2015-11-07T09:42:43Z Ven joined #lisp
2015-11-07T09:42:58Z johann_ quit (Remote host closed the connection)
2015-11-07T09:46:15Z mishoo quit (Ping timeout: 252 seconds)
2015-11-07T09:50:38Z MoALTz quit (Quit: Leaving)
2015-11-07T09:51:22Z mishoo joined #lisp
2015-11-07T09:52:12Z Ven quit (Read error: Connection reset by peer)
2015-11-07T09:52:19Z gingerale quit (Remote host closed the connection)
2015-11-07T09:52:21Z ASau quit (Remote host closed the connection)
2015-11-07T09:52:30Z quasus quit (Ping timeout: 240 seconds)
2015-11-07T09:52:49Z ASau joined #lisp
2015-11-07T09:52:51Z Ven joined #lisp
2015-11-07T09:54:49Z pocket joined #lisp
2015-11-07T09:55:06Z EvW joined #lisp
2015-11-07T09:59:26Z EvW quit (Ping timeout: 240 seconds)
2015-11-07T10:01:50Z pocket quit (Ping timeout: 260 seconds)
2015-11-07T10:03:27Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-07T10:03:32Z defaultxr quit (Quit: gnight)
2015-11-07T10:05:25Z Guest14 joined #lisp
2015-11-07T10:05:28Z stepnem joined #lisp
2015-11-07T10:06:04Z constantine joined #lisp
2015-11-07T10:09:38Z HDurer quit (Ping timeout: 260 seconds)
2015-11-07T10:10:55Z vydd joined #lisp
2015-11-07T10:11:39Z lnostdal quit (Ping timeout: 240 seconds)
2015-11-07T10:14:28Z halfcrazy joined #lisp
2015-11-07T10:15:01Z pocket joined #lisp
2015-11-07T10:16:24Z futpib joined #lisp
2015-11-07T10:18:02Z HDurer joined #lisp
2015-11-07T10:18:06Z preacherAKAnd quit (Remote host closed the connection)
2015-11-07T10:18:16Z halfcrazy quit (Client Quit)
2015-11-07T10:18:28Z pocket quit (Remote host closed the connection)
2015-11-07T10:20:05Z phoe_krk joined #lisp
2015-11-07T10:24:39Z lnostdal joined #lisp
2015-11-07T10:28:26Z edgar-rft joined #lisp
2015-11-07T10:28:58Z rsm joined #lisp
2015-11-07T10:31:02Z hardenedapple joined #lisp
2015-11-07T10:31:12Z rsm quit (Client Quit)
2015-11-07T10:34:22Z tessier quit (Ping timeout: 260 seconds)
2015-11-07T10:36:47Z MaggieAndEazar joined #lisp
2015-11-07T10:37:59Z eazar001 quit (Ping timeout: 264 seconds)
2015-11-07T10:38:33Z preacherAKAnd joined #lisp
2015-11-07T10:38:34Z mishoo quit (Read error: Connection reset by peer)
2015-11-07T10:43:49Z johann_ joined #lisp
2015-11-07T10:47:44Z Ven quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-11-07T10:48:26Z johann_ quit (Ping timeout: 244 seconds)
2015-11-07T10:50:35Z constantine quit (Ping timeout: 264 seconds)
2015-11-07T10:51:11Z sulky quit (Ping timeout: 260 seconds)
2015-11-07T10:54:12Z mishoo joined #lisp
2015-11-07T10:56:21Z moei quit (Quit: Leaving...)
2015-11-07T11:01:11Z moei joined #lisp
2015-11-07T11:03:46Z josteink quit (Remote host closed the connection)
2015-11-07T11:08:45Z Guest14 quit (Quit: Textual IRC Client: www.textualapp.com)
2015-11-07T11:18:13Z preacherAKAnd quit (Quit: Konversation terminated!)
2015-11-07T11:24:28Z Bahman quit (Quit: Ave atque vale)
2015-11-07T11:26:06Z xaotuk quit (Ping timeout: 246 seconds)
2015-11-07T11:27:45Z preacherAKAnd joined #lisp
2015-11-07T11:30:15Z Nikotiini joined #lisp
2015-11-07T11:33:19Z LilSusieCrabCake quit (Ping timeout: 240 seconds)
2015-11-07T11:34:40Z Nikotiini quit (Remote host closed the connection)
2015-11-07T11:34:47Z remi`bd joined #lisp
2015-11-07T11:36:32Z Nikotiini joined #lisp
2015-11-07T11:38:38Z sulky joined #lisp
2015-11-07T11:38:42Z Karl_Dscc joined #lisp
2015-11-07T11:40:08Z Ven joined #lisp
2015-11-07T11:42:35Z hardenedapple quit (Quit: Gotta go on non-proxied VPN -- bye)
2015-11-07T11:44:36Z johann_ joined #lisp
2015-11-07T11:46:56Z cadadar quit (Quit: Leaving.)
2015-11-07T11:47:26Z tharugrim joined #lisp
2015-11-07T11:48:22Z Ven quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-11-07T11:48:46Z Ethan- joined #lisp
2015-11-07T11:49:18Z johann_ quit (Ping timeout: 255 seconds)
2015-11-07T11:56:05Z mea-culpa left #lisp
2015-11-07T11:56:42Z EvW joined #lisp
2015-11-07T12:00:20Z xaotuk joined #lisp
2015-11-07T12:01:09Z EvW quit (Ping timeout: 265 seconds)
2015-11-07T12:02:39Z faalentijn quit (Ping timeout: 240 seconds)
2015-11-07T12:05:02Z mishoo_ joined #lisp
2015-11-07T12:06:24Z mishoo quit (Ping timeout: 255 seconds)
2015-11-07T12:08:15Z jathd quit (Ping timeout: 250 seconds)
2015-11-07T12:10:16Z nowhere_man_ joined #lisp
2015-11-07T12:10:49Z nowhere_man quit (Ping timeout: 265 seconds)
2015-11-07T12:10:50Z pjb quit (Ping timeout: 240 seconds)
2015-11-07T12:13:28Z Karl_Dscc quit (Remote host closed the connection)
2015-11-07T12:13:37Z wtbrk joined #lisp
2015-11-07T12:13:56Z fikusz joined #lisp
2015-11-07T12:17:14Z Vulfe joined #lisp
2015-11-07T12:17:23Z Vulfe quit (Remote host closed the connection)
2015-11-07T12:17:39Z Vulfe joined #lisp
2015-11-07T12:19:46Z tokik quit (Ping timeout: 272 seconds)
2015-11-07T12:20:02Z tsoutseki joined #lisp
2015-11-07T12:21:00Z Vulfe quit (Remote host closed the connection)
2015-11-07T12:21:15Z tokik joined #lisp
2015-11-07T12:21:24Z Vulfe joined #lisp
2015-11-07T12:21:41Z scymtym_ quit (Ping timeout: 250 seconds)
2015-11-07T12:22:31Z pjb joined #lisp
2015-11-07T12:24:54Z xaotuk quit (Ping timeout: 246 seconds)
2015-11-07T12:26:03Z netrobyatmobile quit (Quit: Connection closed for inactivity)
2015-11-07T12:26:50Z Ven joined #lisp
2015-11-07T12:28:45Z faalentijn joined #lisp
2015-11-07T12:29:43Z hardenedapple joined #lisp
2015-11-07T12:33:29Z wildlander quit (Quit: Saliendo)
2015-11-07T12:37:35Z Ven quit (Read error: Connection reset by peer)
2015-11-07T12:39:02Z Ven joined #lisp
2015-11-07T12:41:21Z cadadar joined #lisp
2015-11-07T12:45:21Z johann_ joined #lisp
2015-11-07T12:45:48Z xrash joined #lisp
2015-11-07T12:48:18Z psy_ quit (Ping timeout: 244 seconds)
2015-11-07T12:49:46Z johann_ quit (Ping timeout: 240 seconds)
2015-11-07T12:50:51Z asipper joined #lisp
2015-11-07T12:51:17Z Vulfe_ joined #lisp
2015-11-07T12:51:32Z Vulfe quit (Read error: Connection reset by peer)
2015-11-07T12:53:07Z Ven quit (Read error: Connection reset by peer)
2015-11-07T12:53:52Z asipper quit (Quit: rcirc on GNU Emacs 24.5.1)
2015-11-07T12:53:56Z Ven joined #lisp
2015-11-07T12:55:00Z grouzen joined #lisp
2015-11-07T12:55:33Z Vulfe_ quit (Read error: Connection reset by peer)
2015-11-07T12:59:13Z MaggieAndEazar quit (Quit: Connection closed for inactivity)
2015-11-07T13:00:52Z xaotuk joined #lisp
2015-11-07T13:01:20Z otjura joined #lisp
2015-11-07T13:05:10Z Vulfe joined #lisp
2015-11-07T13:05:18Z leafybas_ joined #lisp
2015-11-07T13:06:10Z snv quit (Read error: Connection reset by peer)
2015-11-07T13:06:10Z snv1 joined #lisp
2015-11-07T13:06:54Z Beetny quit (Ping timeout: 246 seconds)
2015-11-07T13:06:54Z snv1 quit (Read error: Connection reset by peer)
2015-11-07T13:07:09Z snv joined #lisp
2015-11-07T13:08:23Z preacherAKAnd quit (Remote host closed the connection)
2015-11-07T13:08:32Z preacher-aka-nd joined #lisp
2015-11-07T13:11:09Z shka joined #lisp
2015-11-07T13:11:15Z Mon_Ouie joined #lisp
2015-11-07T13:12:51Z tsoutseki quit (Quit: Leaving)
2015-11-07T13:13:02Z attila_lendvai joined #lisp
2015-11-07T13:13:02Z attila_lendvai quit (Changing host)
2015-11-07T13:13:02Z attila_lendvai joined #lisp
2015-11-07T13:13:06Z xaotuk quit (Ping timeout: 244 seconds)
2015-11-07T13:14:56Z Ven quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-11-07T13:16:27Z Ven joined #lisp
2015-11-07T13:24:24Z Cymew quit (Ping timeout: 250 seconds)
2015-11-07T13:27:54Z jason_m joined #lisp
2015-11-07T13:28:16Z ekinmur joined #lisp
2015-11-07T13:30:59Z tsoutseki joined #lisp
2015-11-07T13:31:23Z kyfho joined #lisp
2015-11-07T13:31:24Z kyfho quit (Read error: Connection reset by peer)
2015-11-07T13:31:36Z kyfho joined #lisp
2015-11-07T13:32:02Z kyfho: what are some interesting alternatives to postgresql in lisp?
2015-11-07T13:32:09Z kyfho: I heard of something called manardb
2015-11-07T13:32:43Z kyfho: I want to use lisp to solve problems and help people.
2015-11-07T13:34:06Z pjb: http://cliki.net/Database
2015-11-07T13:34:08Z jackdaniel: there is postmodern library to manage postgresql
2015-11-07T13:34:19Z pocket joined #lisp
2015-11-07T13:35:13Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-07T13:35:20Z atgreen joined #lisp
2015-11-07T13:36:20Z Vulfe quit (Read error: Connection reset by peer)
2015-11-07T13:38:26Z Ven quit (Read error: Connection reset by peer)
2015-11-07T13:39:24Z Ven joined #lisp
2015-11-07T13:43:02Z tankfeeder joined #lisp
2015-11-07T13:43:49Z tankfeeder left #lisp
2015-11-07T13:44:40Z tsoutseki quit (Remote host closed the connection)
2015-11-07T13:46:05Z johann_ joined #lisp
2015-11-07T13:46:26Z Vulfe joined #lisp
2015-11-07T13:48:41Z cmoney joined #lisp
2015-11-07T13:49:16Z pocket quit (Remote host closed the connection)
2015-11-07T13:50:24Z k-stz joined #lisp
2015-11-07T13:50:31Z johann_ quit (Ping timeout: 250 seconds)
2015-11-07T13:53:38Z Ven quit (Read error: Connection reset by peer)
2015-11-07T13:58:36Z EvW joined #lisp
2015-11-07T13:58:58Z Ven joined #lisp
2015-11-07T13:59:30Z erjoalgo joined #lisp
2015-11-07T14:02:50Z EvW quit (Ping timeout: 240 seconds)
2015-11-07T14:02:59Z kyfho: :)
2015-11-07T14:03:18Z Guest14 joined #lisp
2015-11-07T14:08:06Z otjura quit (Remote host closed the connection)
2015-11-07T14:08:35Z Ven quit (Read error: Connection reset by peer)
2015-11-07T14:09:05Z Ven joined #lisp
2015-11-07T14:10:29Z otjura joined #lisp
2015-11-07T14:10:49Z Ukari joined #lisp
2015-11-07T14:12:19Z Vulfe quit (Read error: Connection reset by peer)
2015-11-07T14:13:21Z quazimodo joined #lisp
2015-11-07T14:15:02Z Mon_Ouie quit (Ping timeout: 265 seconds)
2015-11-07T14:15:19Z hardenedapple quit (Remote host closed the connection)
2015-11-07T14:16:31Z xrash quit (Remote host closed the connection)
2015-11-07T14:16:40Z CharlesN joined #lisp
2015-11-07T14:18:16Z Guest14 quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-07T14:19:07Z faalentijn quit (Ping timeout: 250 seconds)
2015-11-07T14:20:56Z NeverDie_ quit (Quit: http://radiux.io/)
2015-11-07T14:21:18Z NeverDie joined #lisp
2015-11-07T14:22:41Z Vulfe joined #lisp
2015-11-07T14:23:02Z faalentijn joined #lisp
2015-11-07T14:27:52Z LiamH joined #lisp
2015-11-07T14:30:39Z Guest14 joined #lisp
2015-11-07T14:30:51Z TMM quit (Remote host closed the connection)
2015-11-07T14:30:55Z Guest14 quit (Client Quit)
2015-11-07T14:33:29Z haom joined #lisp
2015-11-07T14:33:34Z Vulfe quit (Remote host closed the connection)
2015-11-07T14:34:24Z hardenedapple joined #lisp
2015-11-07T14:37:52Z faheem__ joined #lisp
2015-11-07T14:38:32Z smokeink quit (Remote host closed the connection)
2015-11-07T14:41:27Z cmoney quit (Remote host closed the connection)
2015-11-07T14:45:08Z Vulfe joined #lisp
2015-11-07T14:46:48Z johann_ joined #lisp
2015-11-07T14:50:35Z Vulfe quit (Read error: Connection reset by peer)
2015-11-07T14:50:50Z johann_ quit (Ping timeout: 240 seconds)
2015-11-07T14:51:04Z dkcl joined #lisp
2015-11-07T14:52:46Z erjoalgo quit (Ping timeout: 240 seconds)
2015-11-07T14:53:23Z eldariof joined #lisp
2015-11-07T14:54:04Z happy-dude joined #lisp
2015-11-07T14:54:08Z constantine joined #lisp
2015-11-07T14:57:05Z mrSpec joined #lisp
2015-11-07T14:57:27Z badkins joined #lisp
2015-11-07T14:58:09Z isBEKaml joined #lisp
2015-11-07T15:00:13Z eldariof quit
2015-11-07T15:00:30Z kobain joined #lisp
2015-11-07T15:02:07Z Ethan- quit (Ping timeout: 244 seconds)
2015-11-07T15:02:21Z Vulfe joined #lisp
2015-11-07T15:03:14Z varjag joined #lisp
2015-11-07T15:03:46Z cpc26_ joined #lisp
2015-11-07T15:04:30Z cpc26 quit (Ping timeout: 246 seconds)
2015-11-07T15:06:35Z josteink joined #lisp
2015-11-07T15:12:25Z EvW joined #lisp
2015-11-07T15:13:37Z Ven quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-11-07T15:15:45Z jason_m quit (Quit: Leaving)
2015-11-07T15:18:22Z josteink quit (Remote host closed the connection)
2015-11-07T15:23:01Z pocket joined #lisp
2015-11-07T15:23:47Z s00pcan joined #lisp
2015-11-07T15:24:01Z s00pcan quit (Remote host closed the connection)
2015-11-07T15:24:22Z varjag quit (Remote host closed the connection)
2015-11-07T15:24:48Z s00pcan joined #lisp
2015-11-07T15:26:49Z johann_ joined #lisp
2015-11-07T15:29:14Z josteink joined #lisp
2015-11-07T15:30:12Z pocket quit (Remote host closed the connection)
2015-11-07T15:30:55Z Vulfe quit (Read error: Connection reset by peer)
2015-11-07T15:33:47Z BitPuffin|osx joined #lisp
2015-11-07T15:36:16Z isBEKaml quit (Quit: leaving)
2015-11-07T15:40:13Z hiroakip joined #lisp
2015-11-07T15:41:46Z Vulfe joined #lisp
2015-11-07T15:42:10Z ebrasca joined #lisp
2015-11-07T15:43:19Z constantine quit (Ping timeout: 240 seconds)
2015-11-07T15:52:19Z hiroakip quit (Ping timeout: 240 seconds)
2015-11-07T15:52:29Z varjag joined #lisp
2015-11-07T15:54:14Z dkcl quit (Remote host closed the connection)
2015-11-07T15:55:10Z DeadTrickster: so why sbcl needs interpreter?
2015-11-07T15:55:32Z preacher-aka-nd quit (Quit: Konversation terminated!)
2015-11-07T15:59:50Z varjag quit (Remote host closed the connection)
2015-11-07T16:04:37Z Vulfe quit (Remote host closed the connection)
2015-11-07T16:06:15Z ozihcs joined #lisp
2015-11-07T16:07:28Z hiroakip joined #lisp
2015-11-07T16:10:46Z Ven joined #lisp
2015-11-07T16:11:07Z ajf- joined #lisp
2015-11-07T16:11:14Z LiamH: I find it handy for debugging
2015-11-07T16:19:45Z EvW quit (Ping timeout: 246 seconds)
2015-11-07T16:20:29Z ozihcs quit (Quit: q)
2015-11-07T16:21:48Z constantine joined #lisp
2015-11-07T16:23:57Z Ven quit (Read error: Connection reset by peer)
2015-11-07T16:26:45Z Ven joined #lisp
2015-11-07T16:27:06Z funnel quit (Ping timeout: 246 seconds)
2015-11-07T16:27:39Z funnel joined #lisp
2015-11-07T16:31:40Z tsoutseki joined #lisp
2015-11-07T16:35:37Z jasom quit (Ping timeout: 250 seconds)
2015-11-07T16:37:27Z reggy quit (Quit: Leaving)
2015-11-07T16:38:19Z Xach: Is it really?
2015-11-07T16:38:38Z Xach: When I asked, I was explicitly told it didn't help debugging...in what way do you find it helpful?
2015-11-07T16:38:43Z Xach: DeadTrickster: It is faster than the compiler at certain things.
2015-11-07T16:39:27Z LiamH: Better frame information than the compiler. Even when set to (debug 3), there are frames and frame variables that are elided in the compiler.
2015-11-07T16:39:57Z Xach: interesting
2015-11-07T16:40:44Z LiamH: In fact, it is sometimes painfully literal on every frame, it is necessary to wade through a lot.
2015-11-07T16:41:05Z zadock joined #lisp
2015-11-07T16:42:13Z DeadTrickster: I think (debug 4) would be more helpful than entirely new contrib, but luckily I'm not the one who makes decisions :-)
2015-11-07T16:44:48Z dkcl joined #lisp
2015-11-07T16:47:22Z CharlesN quit (Ping timeout: 260 seconds)
2015-11-07T16:48:41Z Big_G joined #lisp
2015-11-07T16:48:57Z psy_ joined #lisp
2015-11-07T16:49:26Z duggiefresh joined #lisp
2015-11-07T16:53:23Z dkcl quit (Remote host closed the connection)
2015-11-07T16:53:51Z scymtym: Xach: it also helps when hacking on the compiler
2015-11-07T16:54:16Z knicklux joined #lisp
2015-11-07T16:54:34Z zadock quit (Quit: Leaving)
2015-11-07T16:57:53Z jewel joined #lisp
2015-11-07T17:00:04Z CharlesN joined #lisp
2015-11-07T17:02:20Z Xach: scymtym: how so?
2015-11-07T17:02:52Z Ukari quit (Ping timeout: 272 seconds)
2015-11-07T17:03:06Z scymtym: Xach: you can redefine (and inevitably break) things in the compiler without rendering your session unusable
2015-11-07T17:03:28Z Xach: cool
2015-11-07T17:03:36Z scymtym: for SBCL, testing things without doing a full rebuild makes a huge difference (seconds vs. minutes)
2015-11-07T17:03:46Z lisse joined #lisp
2015-11-07T17:04:01Z scymtym: does not work for all changes, of course
2015-11-07T17:05:30Z hardenedapple quit (Quit: WeeChat 1.3)
2015-11-07T17:06:17Z Vulfe joined #lisp
2015-11-07T17:07:36Z jleija joined #lisp
2015-11-07T17:07:43Z resttime joined #lisp
2015-11-07T17:08:19Z fikusz quit (Quit: Leaving)
2015-11-07T17:10:38Z Karl_Dscc joined #lisp
2015-11-07T17:13:21Z Vulfe quit (Ping timeout: 244 seconds)
2015-11-07T17:17:41Z eazar001 joined #lisp
2015-11-07T17:18:13Z Vulfe joined #lisp
2015-11-07T17:18:15Z Vulfe quit (Client Quit)
2015-11-07T17:20:17Z fantazo joined #lisp
2015-11-07T17:25:24Z cadadar quit (Quit: Leaving.)
2015-11-07T17:27:01Z zacts quit (Read error: Connection reset by peer)
2015-11-07T17:28:49Z tsoutseki quit (Read error: Connection reset by peer)
2015-11-07T17:29:45Z Ven quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-11-07T17:32:39Z Mon_Ouie joined #lisp
2015-11-07T17:32:46Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-07T17:33:44Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-07T17:33:58Z zacts joined #lisp
2015-11-07T17:34:00Z nyef: Seconds vs. minutes? Hah! A full-cycle SBCL build on some of my hardware takes about an hour.
2015-11-07T17:37:06Z lnostdal quit (Ping timeout: 246 seconds)
2015-11-07T17:37:17Z tsoutseki joined #lisp
2015-11-07T17:39:26Z DeadTrickster: btw I'm seeing interesting glitch while using sb-concurrency mailbox. receive-message accepts timeout and if I throw something more than 0.1 sec semaphore enters endless loop
2015-11-07T17:39:40Z DeadTrickster: condition-wait basically returns T T each 0.5 sec
2015-11-07T17:40:52Z mathrick quit (Ping timeout: 272 seconds)
2015-11-07T17:41:30Z EvW joined #lisp
2015-11-07T17:41:34Z kyfho quit (Quit: Lost terminal)
2015-11-07T17:43:25Z mathrick joined #lisp
2015-11-07T17:44:04Z dkcl joined #lisp
2015-11-07T17:45:45Z quasus joined #lisp
2015-11-07T17:49:31Z tsoutseki quit (Ping timeout: 252 seconds)
2015-11-07T17:49:44Z mathrick quit (Remote host closed the connection)
2015-11-07T17:49:56Z scymtym: DeadTrickster: could you paste a recipe for reproducing the issue?
2015-11-07T17:50:16Z lnostdal joined #lisp
2015-11-07T17:50:30Z Devon joined #lisp
2015-11-07T17:51:10Z DeadTrickster: scymtym, sadly no, from repl everything works as expected, but fails in my code. it's buggy and I'd like to investigate more
2015-11-07T17:51:17Z tsoutseki joined #lisp
2015-11-07T17:52:12Z mathrick joined #lisp
2015-11-07T17:52:52Z scymtym: DeadTrickster: ok, thanks
2015-11-07T17:53:07Z csziacobus joined #lisp
2015-11-07T17:53:14Z UtkarshRay joined #lisp
2015-11-07T17:54:09Z lisse joined #lisp
2015-11-07T17:54:26Z mathrick quit (Remote host closed the connection)
2015-11-07T17:54:37Z vlatkoB quit (Remote host closed the connection)
2015-11-07T17:55:37Z mathrick joined #lisp
2015-11-07T17:55:54Z tsoutseki quit (Read error: Connection reset by peer)
2015-11-07T17:56:16Z Jesin quit (Quit: Leaving)
2015-11-07T17:59:06Z tsoutseki joined #lisp
2015-11-07T18:10:26Z atgreen quit (Ping timeout: 252 seconds)
2015-11-07T18:13:10Z jleija quit (Quit: leaving)
2015-11-07T18:13:46Z duggiefresh quit (Remote host closed the connection)
2015-11-07T18:15:07Z duggiefresh joined #lisp
2015-11-07T18:17:11Z Draz joined #lisp
2015-11-07T18:17:13Z Ven_ joined #lisp
2015-11-07T18:18:09Z knicklux quit (Remote host closed the connection)
2015-11-07T18:19:37Z duggiefresh quit (Ping timeout: 250 seconds)
2015-11-07T18:20:03Z lisse quit (Ping timeout: 250 seconds)
2015-11-07T18:21:19Z briantrice joined #lisp
2015-11-07T18:21:34Z lisse joined #lisp
2015-11-07T18:24:02Z mea-culp` joined #lisp
2015-11-07T18:24:25Z Ven_ quit (Read error: Connection reset by peer)
2015-11-07T18:26:00Z Ven_ joined #lisp
2015-11-07T18:28:48Z attila_lendvai joined #lisp
2015-11-07T18:28:48Z attila_lendvai quit (Changing host)
2015-11-07T18:28:48Z attila_lendvai joined #lisp
2015-11-07T18:33:41Z cpc26 joined #lisp
2015-11-07T18:34:19Z jasom joined #lisp
2015-11-07T18:34:59Z cpc26_ quit (Ping timeout: 240 seconds)
2015-11-07T18:36:04Z Ven_ quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-11-07T18:36:43Z ozihcs joined #lisp
2015-11-07T18:37:26Z Ven_ joined #lisp
2015-11-07T18:38:53Z varjag joined #lisp
2015-11-07T18:39:08Z Jesin joined #lisp
2015-11-07T18:39:11Z Ven_ quit (Read error: Connection reset by peer)
2015-11-07T18:40:48Z duggiefresh joined #lisp
2015-11-07T18:41:30Z Ven_ joined #lisp
2015-11-07T18:43:32Z dkcl quit (Remote host closed the connection)
2015-11-07T18:45:42Z vydd quit (Ping timeout: 246 seconds)
2015-11-07T18:51:40Z moei quit (Quit: Leaving...)
2015-11-07T18:53:29Z tessier joined #lisp
2015-11-07T18:57:27Z ozihcs quit (Quit: q)
2015-11-07T18:59:23Z broken_clock quit (Quit: leaving)
2015-11-07T18:59:28Z duggiefresh quit
2015-11-07T18:59:52Z cmoney joined #lisp
2015-11-07T19:01:37Z quiles joined #lisp
2015-11-07T19:06:26Z quiles quit (Ping timeout: 260 seconds)
2015-11-07T19:06:48Z meiji11 joined #lisp
2015-11-07T19:07:12Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-07T19:07:35Z lisse joined #lisp
2015-11-07T19:08:25Z defaultxr joined #lisp
2015-11-07T19:08:51Z mvilleneuve joined #lisp
2015-11-07T19:10:23Z atgnag quit (Ping timeout: 264 seconds)
2015-11-07T19:12:22Z HDurer quit (Ping timeout: 250 seconds)
2015-11-07T19:13:04Z atgnag joined #lisp
2015-11-07T19:13:44Z mvilleneuve quit (Ping timeout: 265 seconds)
2015-11-07T19:21:48Z tsoutseki quit (Quit: Leaving)
2015-11-07T19:22:46Z constantine quit (Ping timeout: 250 seconds)
2015-11-07T19:22:53Z HDurer joined #lisp
2015-11-07T19:24:14Z tsoutseki joined #lisp
2015-11-07T19:24:29Z Ven_ quit (Read error: Connection reset by peer)
2015-11-07T19:24:30Z fantazo quit (Ping timeout: 260 seconds)
2015-11-07T19:25:51Z Ven joined #lisp
2015-11-07T19:27:27Z xyh joined #lisp
2015-11-07T19:27:55Z xyh: that is common to function has prefix 'call-with-' ?
2015-11-07T19:28:49Z xyh: * what is common to function has prefix 'call-with-' ?
2015-11-07T19:29:35Z physixer joined #lisp
2015-11-07T19:31:41Z physixer: Sussman, Graham say programming in lisp/scheme helps a natural DSL emerge out of it, that's well and good, but that helps with the code generation end. What if you have to parse an exisitng DSL into your "natural DSL" instead of programming in your natural DSL by hand.
2015-11-07T19:32:42Z cmoney quit (Remote host closed the connection)
2015-11-07T19:32:45Z FreeBirdLjj quit (Remote host closed the connection)
2015-11-07T19:32:58Z physixer: In other words we have the Parse->Process->Generate idiom so prevalent in programming, is lisp/scheme superior for the whole idiom or just the 2nd half? (...Process->Generate)
2015-11-07T19:33:06Z jewel quit (Ping timeout: 240 seconds)
2015-11-07T19:33:52Z physixer: or Input->Process->Output
2015-11-07T19:33:57Z p_l: physixer: often you can just translate the forms into S-Expression format, then use that to quickly handle the implementation
2015-11-07T19:35:40Z physixer: I think an argument could be made that I'm supposed to look at it from a different level of abstraction, i.e. I have to look at how "Input" is related to "Output", express it in my language, and then there shoud be some automated way to perform the conversion?
2015-11-07T19:36:51Z zm1 joined #lisp
2015-11-07T19:39:55Z Ven quit (Read error: Connection reset by peer)
2015-11-07T19:40:14Z preacherAKAnd joined #lisp
2015-11-07T19:40:28Z Ven joined #lisp
2015-11-07T19:41:31Z halfcrazy joined #lisp
2015-11-07T19:42:31Z preacherAKAnd quit (Remote host closed the connection)
2015-11-07T19:42:34Z pjb: physixer: 1- watch Alan Kay "Programming and Scaling" 2011 http://www.tele-task.de/archive/video/flash/14029/ https://www.youtube.com/watch?v=gZmcmdsoAXU https://www.youtube.com/watch?v=-UOmItPa4iA https://www.youtube.com/watch?v=QlPavndhYxQ https://www.youtube.com/watch?v=y9xLi0iJg1g https://vimeo.com/82301919
2015-11-07T19:43:33Z pjb: physixer: 2- checkout cl-ometa https://github.com/thiago-silva/cl-ometa
2015-11-07T19:43:49Z scymtym_ joined #lisp
2015-11-07T19:44:33Z pjb: physixer: 3- lisp is superior for the whole, in that it allows to embed your DSL into lisp and vice-versa.
2015-11-07T19:47:00Z pjb: notably using reader macros in CL, you can add syntaxes different from the s-exps, when it's required. And macro expanding to lisp code let the DSL be compiled by the CL compiler and be fully integrated with CL.
2015-11-07T19:48:06Z jackdaniel: good example would be cl-python
2015-11-07T19:48:18Z pjb: or Vacietis
2015-11-07T19:48:21Z jackdaniel: yes
2015-11-07T19:48:30Z pjb: but they're extreme examples since they provide a whole new language.
2015-11-07T19:48:38Z jackdaniel: pjb: did you manage to build ecl for android after the clarification on the ml?
2015-11-07T19:49:35Z pjb: A better example of DSL, could be Objective-C where we introduce a few reader macros @[…] @"…" and […] to provide an Objective-C like syntax for the Objective-C bridge.
2015-11-07T19:50:15Z pjb: jackdaniel: nope. Still fails on win32.c
2015-11-07T19:51:35Z jackdaniel: uhm :|
2015-11-07T19:53:43Z halfcrazy quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-07T19:55:17Z pjb: jackdaniel: http://paste.lisp.org/+3EHI
2015-11-07T19:55:26Z constantine joined #lisp
2015-11-07T19:55:36Z Ven quit (Read error: Connection reset by peer)
2015-11-07T19:56:14Z Ven joined #lisp
2015-11-07T19:57:00Z dstatyvka joined #lisp
2015-11-07T19:58:21Z jackdaniel: pjb: it looks like libffi m32 abi problem on darwin. This won't be a problem when I'll do cross-cc framework - cross compilation will be possible from any ECL (not necessarily 32 bit with specific flags)
2015-11-07T19:59:21Z jackdaniel: you may try to add the flag --with-dffi=no , but not sure if it will help. libffi is also used for the closures
2015-11-07T20:01:58Z Karl_Dscc quit (Remote host closed the connection)
2015-11-07T20:04:59Z shka quit (Quit: Konversation terminated!)
2015-11-07T20:05:18Z shka joined #lisp
2015-11-07T20:06:01Z pyon quit (Quit: Angels fall, all for you, heretic! Demon heart, bleed for us! (My soul is yours, Dark Master. I will fight for you.))
2015-11-07T20:07:51Z halfcrazy joined #lisp
2015-11-07T20:08:28Z dmv is now known as vhost-
2015-11-07T20:08:42Z haom left #lisp
2015-11-07T20:10:00Z Ven quit (Read error: Connection reset by peer)
2015-11-07T20:11:02Z Ven joined #lisp
2015-11-07T20:11:28Z snv quit (Quit: Leaving.)
2015-11-07T20:13:43Z nyef: pjb: How about xml-mixed-mode?
2015-11-07T20:14:33Z pjb: jackdaniel: ok, this allows the host ecl to be compiled. Unfortunately, the next configure fails with: http://paste.lisp.org/+3EHI/1
2015-11-07T20:14:38Z pjb: nyef: I don't know it. Perhaps.
2015-11-07T20:15:57Z cmoney joined #lisp
2015-11-07T20:16:13Z nyef: pjb: It was a reader hack for #\< with explicit recognition of the symbols < and <= but otherwise creating XML structures.
2015-11-07T20:16:20Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-07T20:17:39Z jackdaniel: pjb: did you "make install"?
2015-11-07T20:17:55Z pjb: Yes, it's in the script.
2015-11-07T20:18:00Z Alfr joined #lisp
2015-11-07T20:19:04Z pjb: But the executable produces the error. eg. ~/opt/toolchains/ecl-android-host/bin/ecl  --version ==> Got signal before environment was installed on our thread ;;; 0   libecl.16.1.dylib                   0x001b38ad si_dump_c_backtrace + 45  Abort trap: 6
2015-11-07T20:19:12Z lispyone joined #lisp
2015-11-07T20:19:34Z shka quit (Quit: Konversation terminated!)
2015-11-07T20:20:32Z jfe` is now known as jfe
2015-11-07T20:21:03Z lispyone quit (Remote host closed the connection)
2015-11-07T20:21:38Z lispyone joined #lisp
2015-11-07T20:21:47Z xificurC joined #lisp
2015-11-07T20:21:56Z pjb: jackdaniel: ok, it looks like I'm using gcc5 from MacPort. Perhaps I should use Apple's gcc?
2015-11-07T20:23:12Z jackdaniel: pjb: I don't know - never used OSX
2015-11-07T20:24:50Z Ven quit (Read error: Connection reset by peer)
2015-11-07T20:25:21Z Yuuhi quit (Remote host closed the connection)
2015-11-07T20:29:16Z tsoutseki quit (Quit: Leaving)
2015-11-07T20:30:46Z ryu0: pjb: i thought newer macs had switched to clang?
2015-11-07T20:30:46Z mea-culp` quit (Read error: Connection reset by peer)
2015-11-07T20:31:13Z Ven joined #lisp
2015-11-07T20:31:33Z remi`bd quit (Quit: leaving)
2015-11-07T20:32:17Z zm1 quit (Quit: jmIrc destroyed by the OS)
2015-11-07T20:34:02Z pjb: jackdaniel: ok, so you can put in the README that ecl shall be compiled with Apple's compiler, not with gcc 5 (from MacPort)   ~/opt/toolchains/ecl-android-host/bin/ecl  --version --> ECL 16.1.0 ; using the MacPort command: sudo port select --set gcc none
2015-11-07T20:34:19Z tmtwd joined #lisp
2015-11-07T20:35:03Z pjb: jackdaniel: but now the last configure: checking how to define a 32-bit word... configure: error: cannot determine how to define a 32-bit word / error: Failed to configure the GMP library.
2015-11-07T20:35:16Z schoppenhauer: hi. is there an smtp and imap library for common lisp?
2015-11-07T20:35:25Z jackdaniel: schoppenhauer: check out the mel-base
2015-11-07T20:35:26Z pjb: Yes. at least a couple of them.
2015-11-07T20:35:32Z pjb: use cliki.net
2015-11-07T20:36:17Z jackdaniel: pjb: ok, I'll add it. After switching the gcc did you come back to the original configure form the instructions?
2015-11-07T20:37:39Z DeadTrickster: scymtym, I isolated that problem
2015-11-07T20:37:51Z DeadTrickster: scymtym, will try to write short example
2015-11-07T20:39:20Z schoppenhauer: jackdaniel: hm, the links from mel-base on clicki do not work
2015-11-07T20:39:27Z Jesin quit (Quit: Leaving)
2015-11-07T20:39:46Z jackdaniel: last time I've used it I think I downloaded it from the quicklisp
2015-11-07T20:39:50Z jackdaniel: but not sure
2015-11-07T20:40:00Z Ven quit (Read error: Connection reset by peer)
2015-11-07T20:40:35Z Ven joined #lisp
2015-11-07T20:40:39Z xificurC quit (Ping timeout: 240 seconds)
2015-11-07T20:40:58Z pjb: jackdaniel: yes, I reran all the configure.
2015-11-07T20:44:16Z OrangeShark joined #lisp
2015-11-07T20:45:10Z hiroakip quit (Ping timeout: 272 seconds)
2015-11-07T20:45:51Z jackdaniel: pjb: you may try --with-C-gmp=yes , then GMP will try to build itself with the portable C. Maybe that will mitigate this problem
2015-11-07T20:46:53Z fiddlerwoaroof: Is it possible to modify what happens when a particular CLOS slot is SETFed?
2015-11-07T20:46:58Z scymtym_: DeadTrickster: thanks
2015-11-07T20:47:10Z fiddlerwoaroof: hmm, wrong phrasing
2015-11-07T20:47:10Z pjb: jackdaniel: no, same result. uppercase C ?
2015-11-07T20:47:18Z jackdaniel: I believe so
2015-11-07T20:47:26Z fiddlerwoaroof: I need to think about this again :)
2015-11-07T20:47:46Z jackdaniel: did configure detect correctly arm-linux-androideabi-* things?
2015-11-07T20:48:16Z pjb: Seems so, I have lines like: checking if arm-linux-androideabi-gcc -fPIC -std=gnu99 supports -c -o file.o... (cached) yes
2015-11-07T20:48:55Z schoppenhauer: ok. it seems like mel-base is a sophisticated library.
2015-11-07T20:48:58Z schoppenhauer: I will look into it.
2015-11-07T20:49:35Z jackdaniel: yes, that looks OK
2015-11-07T20:50:04Z jackdaniel: it works fine on linux. The only thing what comes to my mind is to replace the GMP with the upstream version
2015-11-07T20:50:59Z pjb: I have this warning: Cannot determine global symbol prefix. nm output doesn't contain a global data symbol. Will proceed with no underscore. If this is wrong then you'll get link errors referring to ___gmpn_add_n (note three underscores). In this case do a fresh build with an override, ./configure gmp_cv_asm_underscore=yes
2015-11-07T20:51:03Z pjb: from configure.
2015-11-07T20:51:55Z jackdaniel: arguments to gmp configure are passed via --with-gmp=args
2015-11-07T20:56:04Z pjb: There's this warning: configure: Configuring included GMP library: configure: WARNING: you should use --build, --host, --target
2015-11-07T20:56:04Z pjb:  
2015-11-07T20:56:11Z nyef quit (Quit: Shutting down, back late tonight or tomorrow)
2015-11-07T20:56:54Z Alfr quit (Quit: Leaving)
2015-11-07T20:58:30Z jackdaniel: hm, maybe add ABI=32 in the second configure too?
2015-11-07T20:59:08Z jackdaniel: here is something similar to your problem http://stackoverflow.com/questions/24988221/gmp-compilation-for-ndk-error-oops-mp-limb-t-is-64-bits-but-the-assembler-cod
2015-11-07T20:59:56Z colorbodn joined #lisp
2015-11-07T21:00:43Z pjb: Nope: configure: error: ABI=32 is not among the following valid choices: standard
2015-11-07T21:01:11Z pjb: (while configuring GMP).
2015-11-07T21:01:20Z xificurC joined #lisp
2015-11-07T21:01:42Z jackdaniel: or add -m32 to CFLAGS
2015-11-07T21:01:48Z lispyone quit (Remote host closed the connection)
2015-11-07T21:01:51Z pjb: Tried, not supported.
2015-11-07T21:02:01Z jackdaniel: uhm
2015-11-07T21:02:27Z pjb: by the cross compiler. It was given in the host compiler configuraiton.
2015-11-07T21:02:30Z colorbodn: hello. I have a task of creating a particle simulation like this https://www.youtube.com/watch?v=XLMU6o7n4E4 in common lisp and I do not know how to go about it. I have gone through the Practical Lisp book and think i understand the basics of the language. I have not much programming experience, just a few months of making text based games in C and Javascript.
2015-11-07T21:02:54Z Davidbrcz quit (Ping timeout: 246 seconds)
2015-11-07T21:03:13Z jackdaniel: pjb: do you use the cross compiler produced by make-standalone-toolchain.sh ?
2015-11-07T21:03:44Z pjb: checking whether we are cross compiling... yes
2015-11-07T21:03:44Z pjb:  
2015-11-07T21:03:46Z pjb: it seems so.
2015-11-07T21:04:30Z DeadTrickster: scymtym, http://pastebin.com/UPYubKZK
2015-11-07T21:04:58Z scymtym_: DeadTrickster: thanks, i will have a look
2015-11-07T21:05:22Z jackdaniel: idk then what the problem might be. As mentioned earlier you may try replacing bundled gmp with the upstream version - maybe it is already fixed bug
2015-11-07T21:06:08Z DeadTrickster: scymtym, I ended up in target thread somewhere in %decrement-semaphore (os something like that)  and condition-wait always returned T
2015-11-07T21:06:12Z Davidbrcz joined #lisp
2015-11-07T21:06:20Z DeadTrickster: target-thread.lisp
2015-11-07T21:06:29Z pjb: jackdaniel: ok, I'll try that tomorrow. Thanks.
2015-11-07T21:06:39Z _sjs quit (Ping timeout: 240 seconds)
2015-11-07T21:06:45Z xyh quit (Ping timeout: 246 seconds)
2015-11-07T21:06:53Z jackdaniel: sure.
2015-11-07T21:07:24Z scymtym_: DeadTrickster: noted, thanks. i will try to reproduce the issue, but not right now
2015-11-07T21:07:48Z gravicappa quit (Ping timeout: 265 seconds)
2015-11-07T21:08:20Z DeadTrickster: scymtym, also I forgot to mention consequences of commenting eventfd.read - basically eventfd become always readable and :read callback fired in the loop
2015-11-07T21:08:36Z DeadTrickster: on every iteration
2015-11-07T21:09:22Z DeadTrickster: each
2015-11-07T21:10:00Z DeadTrickster: anyway I tried to reproduce with just thread flood - no luck
2015-11-07T21:10:10Z Ven quit (Read error: Connection reset by peer)
2015-11-07T21:11:24Z Ven joined #lisp
2015-11-07T21:17:27Z vert2 quit (Ping timeout: 260 seconds)
2015-11-07T21:17:28Z Tordek quit (Ping timeout: 265 seconds)
2015-11-07T21:20:21Z s00pcan quit (Ping timeout: 255 seconds)
2015-11-07T21:20:28Z colorbodn quit
2015-11-07T21:21:42Z happy-dude quit (Quit: Connection closed for inactivity)
2015-11-07T21:23:44Z lisse joined #lisp
2015-11-07T21:24:42Z hiroakip joined #lisp
2015-11-07T21:25:02Z Lord_of_Life joined #lisp
2015-11-07T21:25:19Z Ven quit (Read error: Connection reset by peer)
2015-11-07T21:25:38Z joshee joined #lisp
2015-11-07T21:26:08Z Ven joined #lisp
2015-11-07T21:26:19Z cmoney quit (Read error: Connection reset by peer)
2015-11-07T21:26:19Z joshe quit (Ping timeout: 264 seconds)
2015-11-07T21:27:27Z s00pcan joined #lisp
2015-11-07T21:28:24Z moei joined #lisp
2015-11-07T21:28:35Z emlow quit (Ping timeout: 264 seconds)
2015-11-07T21:29:30Z cyphase quit (Ping timeout: 246 seconds)
2015-11-07T21:32:37Z constantinexvi quit (Ping timeout: 264 seconds)
2015-11-07T21:32:37Z oskarth quit (Ping timeout: 264 seconds)
2015-11-07T21:33:01Z oskarth joined #lisp
2015-11-07T21:33:11Z danlentz quit (Ping timeout: 264 seconds)
2015-11-07T21:33:36Z constantinexvi joined #lisp
2015-11-07T21:33:45Z jperkin13 joined #lisp
2015-11-07T21:35:26Z ekinmur joined #lisp
2015-11-07T21:35:44Z danlentz joined #lisp
2015-11-07T21:36:17Z atgreen joined #lisp
2015-11-07T21:36:39Z erjoalgo joined #lisp
2015-11-07T21:38:12Z constantine`` joined #lisp
2015-11-07T21:38:24Z GUEST_4567345 joined #lisp
2015-11-07T21:39:30Z constantine quit (Ping timeout: 260 seconds)
2015-11-07T21:41:22Z eazar001 is now known as dkilometers_afk
2015-11-07T21:41:28Z dkilometers_afk is now known as eazar001
2015-11-07T21:41:32Z jperkin13: Hi!  I am new to the world of lisp, and looking to learn a lisp dialect to improve my understanding of the functional language paradigm (and hopefully ease the transition between languages like lisp, clojure, ocaml, f#, etc.).
2015-11-07T21:41:35Z Draz quit (Ping timeout: 264 seconds)
2015-11-07T21:41:43Z jperkin13: I am considering learning scheme, but was wondering if common lisp would be better.  I don't have much experience with lisp, but I've read that scheme is "minimal" compared to common lisp.  Hopefully someone here can shed some light on whether I would learn just as much in scheme than common lisp.
2015-11-07T21:42:25Z Xach: common lisp is the best
2015-11-07T21:42:30Z GUEST_4567345 quit (Client Quit)
2015-11-07T21:42:40Z Xach: (this is a channel devoted to only common lisp)
2015-11-07T21:42:53Z Draz joined #lisp
2015-11-07T21:42:56Z jleija joined #lisp
2015-11-07T21:43:23Z d4gg4d quit (Ping timeout: 264 seconds)
2015-11-07T21:44:06Z otwieracz: As a fan of common lisp, I'd suggest common lisp.
2015-11-07T21:44:23Z Xach: the situation is similar between both dialects. when you look at an actual implementation, it probably has everything you would want to use for real, interesting projects. one difference between scheme and CL is where the standard stops and the implementation begins.
2015-11-07T21:44:29Z d4gg4d joined #lisp
2015-11-07T21:46:04Z jperkin13: If I were to learn CL, then I imagine that it would ease the transition to learning other lisp dialects because they all pretty much inherit from CL, right?  The same could be said about languages that support the functional paradigm like ocaml/f#, right?
2015-11-07T21:46:24Z Tordek joined #lisp
2015-11-07T21:46:27Z vert2 joined #lisp
2015-11-07T21:46:44Z rtoym quit (Quit: ChatZilla 0.9.92 [Firefox 41.0/20150917150946])
2015-11-07T21:46:55Z p_l: not really. What you *will* gain, though, is exposure to certain ideas that will make understanding other languages easier, even if they do it completely differently
2015-11-07T21:47:28Z Xach: jperkin13: no.
2015-11-07T21:47:42Z constantine`` left #lisp
2015-11-07T21:48:23Z otwieracz: And after long-time exposure to CL, you'll find yourself taking completetly different approach to programming in other languages.
2015-11-07T21:48:44Z p_l: jperkin13: generally, no matter what language, I recommend you try ones from wide variety of kinds - try CL, try scheme (more functionally-oriented and minimialistic compared to CL's industrial heritage), try Haskell, try OCaml (or other ML-family languages like SML), try Smalltalk, try Erlang, try Prolog
2015-11-07T21:49:46Z erjoalgo quit (Ping timeout: 240 seconds)
2015-11-07T21:52:51Z atgnag: I'd like to try using common lisp as assembler by essentially implementing assembly language as a DSL. Any resources you can suggest on this?
2015-11-07T21:53:49Z emlow joined #lisp
2015-11-07T21:55:21Z Ven quit (Read error: Connection reset by peer)
2015-11-07T21:55:26Z josteink quit (Quit: leaving)
2015-11-07T21:55:42Z Ven joined #lisp
2015-11-07T21:56:40Z Xach: atgnag: there are many existing assemblers you can learn from. the one that comes from movitz is interesting.
2015-11-07T21:58:43Z atgnag: All right. I'll take a look at that.
2015-11-07T21:58:57Z arrubin quit
2015-11-07T21:59:26Z atgnag: I have seen a few, but I've only ones for old architectures thus far.
2015-11-07T22:00:07Z cyphase joined #lisp
2015-11-07T22:02:23Z lispyone joined #lisp
2015-11-07T22:04:03Z PuercoPop: atgnag: You may find  https://github.com/jaoswald/cl-comfy-6502/ interesting (and the texts from Baker it references)
2015-11-07T22:04:03Z Whymind quit (Read error: Connection reset by peer)
2015-11-07T22:06:20Z atgnag: PuercoPop: Thanks.
2015-11-07T22:07:01Z p_l: also, there are some weird examples of using SBCL's compile innards to generate code
2015-11-07T22:07:02Z lispyone quit (Ping timeout: 260 seconds)
2015-11-07T22:08:29Z atgnag: Neat. I just discovered it's dissassemble function, so I wonder what else it has.
2015-11-07T22:09:57Z jperkin13 left #lisp
2015-11-07T22:10:51Z Ven quit (Read error: Connection reset by peer)
2015-11-07T22:11:25Z tharu joined #lisp
2015-11-07T22:11:46Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-07T22:12:27Z Ven joined #lisp
2015-11-07T22:13:58Z attila_lendvai joined #lisp
2015-11-07T22:14:10Z tharugrim quit (Ping timeout: 240 seconds)
2015-11-07T22:14:37Z otjura quit (Quit: Leaving)
2015-11-07T22:15:52Z ekinmur quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-07T22:17:21Z tharu quit (Quit: WeeChat 1.3)
2015-11-07T22:17:32Z Whymind joined #lisp
2015-11-07T22:17:33Z josteink joined #lisp
2015-11-07T22:18:28Z joshee is now known as joshe
2015-11-07T22:25:15Z Xach: atgnag: nearly all implementations compile to native code, so you can look at how they do it for ideas.
2015-11-07T22:25:48Z Ven quit (Read error: Connection reset by peer)
2015-11-07T22:26:30Z Pierre-Jean joined #lisp
2015-11-07T22:27:10Z eazar001 is now known as variabletine
2015-11-07T22:27:12Z Pierre-Jean left #lisp
2015-11-07T22:27:15Z variabletine is now known as eazar001
2015-11-07T22:27:36Z eazar001 is now known as variableine
2015-11-07T22:27:39Z variableine is now known as eazar001
2015-11-07T22:28:04Z Ven joined #lisp
2015-11-07T22:32:12Z White_Flame: atgnag: is the point to run a DSL at native speed? then you don't really need to build an assembler, just transform your DSL to Lisp and have it compile
2015-11-07T22:33:13Z White_Flame: if the assembler itself is the project, do you want to build binary executable, or run the code within the lisp image?
2015-11-07T22:35:06Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-07T22:36:47Z hiroakip quit (Ping timeout: 264 seconds)
2015-11-07T22:38:42Z jurov: if i have 'function bound to a symbol like (let (var 'func), how can pass var to apply?
2015-11-07T22:39:01Z jurov: straight (apply var () fails
2015-11-07T22:39:51Z jason_m joined #lisp
2015-11-07T22:40:22Z resttime: jurov: 'func means (quote func) I believe you want #'func which means (function func)
2015-11-07T22:40:23Z Ven quit (Read error: Connection reset by peer)
2015-11-07T22:40:35Z jurov: where? in apply?
2015-11-07T22:40:46Z Xach: resttime is off base.
2015-11-07T22:41:07Z Xach: jurov: (let (var func) ...) means (let ((var nil) (quote func)) ...), so var is NIL, which does not name a function.
2015-11-07T22:41:14Z Xach: sorry, (let (var 'func) ...)
2015-11-07T22:41:17Z Xach: it is bad LET syntax.
2015-11-07T22:41:24Z Xach: not bad, but misleading...
2015-11-07T22:41:46Z jurov: yes i meant (let ((var 'func)...
2015-11-07T22:42:32Z alexherbo2 quit (Quit: WeeChat 1.3)
2015-11-07T22:42:37Z jurov: i can print var inside the let expression and it prints FUNC.. but can't find out how to call it
2015-11-07T22:43:50Z jurov: like, i succeeded doing: (let ((var "FUNC")) (apply
2015-11-07T22:43:54Z Ven joined #lisp
2015-11-07T22:43:58Z Xach: jurov: does FUNC name a global function?
2015-11-07T22:44:08Z jurov: (let ((var "FUNC")) (apply (intern var) (params)))
2015-11-07T22:44:23Z jurov: it's in same package
2015-11-07T22:44:40Z Xach: jurov: what is the actual name of the function? I'm guessing not FUNC?
2015-11-07T22:44:45Z jurov: ^ now i'm curious how to do it without using the string
2015-11-07T22:44:56Z jurov: yes, just a minimal example
2015-11-07T22:44:57Z mrSpec quit (Remote host closed the connection)
2015-11-07T22:46:18Z jurov: what i want: (let ((var 'func)) (apply (something var) (params)))
2015-11-07T22:46:28Z jurov: what's the "something" here?
2015-11-07T22:48:56Z jurov: concrete example: (let ((var 'length)) (apply var ("abc"))) says "illegal function call"
2015-11-07T22:49:46Z resttime: Oh interesting didn't know APPLY and such could take a symbol as the function designator.
2015-11-07T22:49:55Z oleo_: try (let ((var (function 'length))).....
2015-11-07T22:50:01Z resttime: jurov: '("abc")
2015-11-07T22:50:37Z resttime: The argument you give APPLY must be a list, it's trying to evaluating ("abc")
2015-11-07T22:50:39Z oleo_: ah yes
2015-11-07T22:50:55Z jurov: oh, with quote it works
2015-11-07T22:51:39Z oleo_: you don't need the () there
2015-11-07T22:51:49Z oleo_: (lenght "abc") -> 3
2015-11-07T22:52:08Z oleo_: apply var "abc" does it too
2015-11-07T22:54:22Z resttime: oleo_: (apply #'length "abc") does not work unless I'm misinterpreting something
2015-11-07T22:55:04Z jurov: heh thanks
2015-11-07T22:55:28Z oleo_: jep
2015-11-07T22:55:31Z otwieracz: (or use (funcall #'length "abc"))
2015-11-07T22:55:41Z oleo_: it's (funcall #'length "abc")
2015-11-07T22:55:47Z oleo_: == (length "abc")
2015-11-07T22:55:52Z otwieracz: yep.
2015-11-07T22:55:55Z otwieracz: Good night!
2015-11-07T22:56:22Z oleo_: apply awaits a list as it's second argument.....
2015-11-07T22:56:45Z oleo_: so it has to be (apply #'length '("abc"))
2015-11-07T22:57:05Z oleo_: funcall does not have that restriction
2015-11-07T22:57:58Z Ethan- joined #lisp
2015-11-07T23:03:16Z resttime: Ah whoops, more specifically the args for APPLY must be a "spreadable argument list designator"
2015-11-07T23:03:24Z resttime: http://clhs.lisp.se/Body/f_apply.htm
2015-11-07T23:04:17Z resttime: (apply '+ 1 2 '(3 4)) -> 10
2015-11-07T23:04:59Z EvW quit (Ping timeout: 240 seconds)
2015-11-07T23:05:23Z oleo_: 1 2 '(3 4) in that case is seen as '(1 2 3 4)
2015-11-07T23:07:07Z dkcl joined #lisp
2015-11-07T23:09:49Z edgar-rft quit (Quit: edgar-rft)
2015-11-07T23:10:59Z Ven quit (Read error: Connection reset by peer)
2015-11-07T23:12:06Z oleo__ joined #lisp
2015-11-07T23:14:02Z Ven joined #lisp
2015-11-07T23:15:06Z oleo_ quit (Ping timeout: 255 seconds)
2015-11-07T23:16:26Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-07T23:17:41Z dkcl quit (Remote host closed the connection)
2015-11-07T23:18:06Z varjag quit (Ping timeout: 240 seconds)
2015-11-07T23:19:25Z broken_clock joined #lisp
2015-11-07T23:21:05Z dkcl joined #lisp
2015-11-07T23:22:33Z cagmz joined #lisp
2015-11-07T23:23:44Z oleo__ quit (Quit: Verlassend)
2015-11-07T23:24:28Z oleo joined #lisp
2015-11-07T23:26:02Z Ven quit (Read error: Connection reset by peer)
2015-11-07T23:29:55Z cagmz quit (Remote host closed the connection)
2015-11-07T23:30:13Z Ven joined #lisp
2015-11-07T23:30:46Z cagmz joined #lisp
2015-11-07T23:37:53Z Shinmera quit (Quit: しつれいしなければならないんです。)
2015-11-07T23:41:53Z Ven quit (Read error: Connection reset by peer)
2015-11-07T23:41:58Z Ven_ joined #lisp
2015-11-07T23:42:01Z pjb quit (Ping timeout: 250 seconds)
2015-11-07T23:42:21Z bb010g joined #lisp
2015-11-07T23:44:19Z kobain quit (Quit: KVIrc 4.1.3 Equilibrium http://www.kvirc.net/)
2015-11-07T23:45:15Z easye: "Just because you're paranoid // doesn't mean they're not after you.
2015-11-07T23:46:13Z easye: "
2015-11-07T23:46:23Z easye excuses itself.
2015-11-07T23:47:34Z ASau quit (Ping timeout: 244 seconds)
2015-11-07T23:48:25Z s00pcan quit (Remote host closed the connection)
2015-11-07T23:49:14Z s00pcan joined #lisp
2015-11-07T23:52:07Z Jesin joined #lisp
2015-11-07T23:55:47Z Ven_ quit (Read error: Connection reset by peer)
2015-11-07T23:57:14Z Ven joined #lisp
2015-11-07T23:59:43Z briantrice quit (Quit: briantrice)
2015-11-08T00:01:47Z briantrice joined #lisp
2015-11-08T00:04:44Z Petit_Dejeuner quit (Read error: Connection reset by peer)
2015-11-08T00:06:12Z ajf- quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-08T00:06:58Z ajf- joined #lisp
2015-11-08T00:08:14Z phoe_krk: (in-package :scotland)
2015-11-08T00:08:20Z phoe_krk: (proclaim 'independence)
2015-11-08T00:09:02Z oleo: (in-package :scotland)
2015-11-08T00:09:13Z oleo: (square (the yard))
2015-11-08T00:09:58Z oleo: (in-package :scotland)
2015-11-08T00:10:29Z oleo: (push 'kilt 'down)
2015-11-08T00:10:35Z oleo: lol
2015-11-08T00:11:15Z Ven quit (Read error: Connection reset by peer)
2015-11-08T00:11:22Z resttime: (push 'down 'kilt)
2015-11-08T00:11:57Z Ven joined #lisp
2015-11-08T00:14:35Z Yuuhi joined #lisp
2015-11-08T00:16:42Z nydel joined #lisp
2015-11-08T00:17:14Z attila_lendvai joined #lisp
2015-11-08T00:17:14Z attila_lendvai quit (Changing host)
2015-11-08T00:17:14Z attila_lendvai joined #lisp
2015-11-08T00:17:52Z antonv joined #lisp
2015-11-08T00:18:32Z p_l: http://www.bbc.com/news/uk-scotland-edinburgh-east-fife-34748795
2015-11-08T00:22:14Z physixer quit (Quit: leaving)
2015-11-08T00:24:35Z danlentz_ joined #lisp
2015-11-08T00:26:04Z Ven quit (Read error: Connection reset by peer)
2015-11-08T00:28:46Z dkcl quit (Remote host closed the connection)
2015-11-08T00:29:30Z cadadar joined #lisp
2015-11-08T00:33:53Z Ven joined #lisp
2015-11-08T00:35:54Z badkins quit
2015-11-08T00:37:31Z briantrice quit (Quit: briantrice)
2015-11-08T00:39:15Z anderoonies joined #lisp
2015-11-08T00:40:38Z cagmz quit
2015-11-08T00:41:43Z Ven quit (Read error: Connection reset by peer)
2015-11-08T00:43:54Z Jubb joined #lisp
2015-11-08T00:44:56Z danlentz_ quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-08T00:45:41Z futpib quit (Ping timeout: 252 seconds)
2015-11-08T00:46:07Z anderoonies quit (Quit: Textual IRC Client: www.textualapp.com)
2015-11-08T00:47:46Z Ven joined #lisp
2015-11-08T00:50:30Z Mon_Ouie quit (Ping timeout: 240 seconds)
2015-11-08T00:51:26Z attila_lendvai quit (Ping timeout: 240 seconds)
2015-11-08T00:56:01Z papachan: i want to export all my symbols from my package but i dont know where i have to add this line?
2015-11-08T00:56:04Z papachan: (do-all-symbols (sym (find-package :duras)) (export sym))
2015-11-08T00:59:18Z EvW joined #lisp
2015-11-08T00:59:50Z Ven quit (Read error: Connection reset by peer)
2015-11-08T00:59:54Z ebrasca left #lisp
2015-11-08T01:01:24Z Ven joined #lisp
2015-11-08T01:04:48Z ovidnis joined #lisp
2015-11-08T01:05:22Z |3b|: papachan: you usually don't want to export /all/ symbols from a package, since that includes things like the names of local variables, loop keywords, etc, and will probably eventually lead to problems for anyone who tries to :use your package
2015-11-08T01:05:58Z smokeink joined #lisp
2015-11-08T01:07:02Z papachan: |3b|: well i need to acces his symbols from my tests
2015-11-08T01:07:12Z papachan: maybe i am doing the wrong way
2015-11-08T01:07:13Z |3b|: papachan: in slime, you can export the symbol under the cursor with C-c x
2015-11-08T01:07:50Z |3b|: for testing, i'd probably just use a package prefix with :: if you really need to access internal symbols
2015-11-08T01:09:30Z papachan: ah :)
2015-11-08T01:09:31Z papachan: nice
2015-11-08T01:10:19Z mac_ified joined #lisp
2015-11-08T01:10:38Z |3b|: i think you can also use IMPORT-FROM to import unexported symbols if you really want to, but i'd still be worried about importing them all to avoid risk of test modifying the code being tested (for example overwriting a helper function) and either getting false positive or negatives
2015-11-08T01:11:07Z ASau joined #lisp
2015-11-08T01:11:20Z resttime: I guess a quick way is just to include your test with the project temporarily in another file, then when you're done testing export the proper functions and move the tests into a different system.
2015-11-08T01:11:31Z Ven quit (Read error: Connection reset by peer)
2015-11-08T01:11:53Z resttime: Err the different system having a package which inherits these functions.
2015-11-08T01:12:13Z cadadar quit (Quit: Leaving.)
2015-11-08T01:13:44Z Ven joined #lisp
2015-11-08T01:13:56Z eazar001 is now known as dmiles_atk
2015-11-08T01:13:56Z White_Flame: for testing behind the publi API, I think that package::symbol is appropriate
2015-11-08T01:14:00Z White_Flame: *public
2015-11-08T01:14:15Z papachan: |3b|: trying with (:import-from package-name {symbol-name}*)
2015-11-08T01:14:30Z dmiles_atk is now known as eazar001
2015-11-08T01:15:23Z Nikotiin` joined #lisp
2015-11-08T01:15:36Z quasus quit (Ping timeout: 246 seconds)
2015-11-08T01:15:45Z quazimodo quit (Ping timeout: 252 seconds)
2015-11-08T01:16:29Z Jubb quit (Quit: Jubb)
2015-11-08T01:16:46Z Nikotiini quit (Ping timeout: 240 seconds)
2015-11-08T01:16:51Z Big_G quit (Quit: Leaving)
2015-11-08T01:16:57Z Jubb joined #lisp
2015-11-08T01:19:16Z pillton quit (Quit: ERC (IRC client for Emacs 24.5.1))
2015-11-08T01:24:11Z ASau quit (Ping timeout: 244 seconds)
2015-11-08T01:26:40Z Ven quit (Read error: Connection reset by peer)
2015-11-08T01:26:43Z Lord_of_Life quit (Excess Flood)
2015-11-08T01:28:45Z ASau joined #lisp
2015-11-08T01:29:05Z Ven joined #lisp
2015-11-08T01:29:59Z Lord_of_- joined #lisp
2015-11-08T01:31:10Z vlnx quit (Read error: Connection reset by peer)
2015-11-08T01:31:48Z vlnx joined #lisp
2015-11-08T01:33:47Z ASau quit (Ping timeout: 264 seconds)
2015-11-08T01:34:26Z Uroboros is now known as aiwaz
2015-11-08T01:34:35Z lisse joined #lisp
2015-11-08T01:37:13Z axion: what's the easiest way (without LOOP) to return just the values of a plist?
2015-11-08T01:38:18Z ovidnis quit (Ping timeout: 260 seconds)
2015-11-08T01:38:46Z NeverDie quit (Ping timeout: 240 seconds)
2015-11-08T01:39:10Z Bike: use loop. otherwise it's probably some crap with do, or maybe some other weirdness
2015-11-08T01:39:36Z Nikotiin` is now known as Nikotiini
2015-11-08T01:39:46Z EvW quit (Ping timeout: 240 seconds)
2015-11-08T01:40:53Z Xach: DO would be the next-easiest
2015-11-08T01:40:56Z Bike: (let (values) (do ((list (cdr plist) (cddr list))) ((null list) values) (push (car list) values)))) or something. (loop for value in (cdr plist) by #'cddr collect value)
2015-11-08T01:41:27Z Ven quit (Read error: Connection reset by peer)
2015-11-08T01:42:16Z Xach: you can stick the values in the DO binding list, too.
2015-11-08T01:42:25Z Xach: you could do everything in the bindings, really
2015-11-08T01:43:08Z Big_G joined #lisp
2015-11-08T01:43:20Z ryu0: Bike: did you notice he had that qualifier "without LOOP" in there? o.O
2015-11-08T01:43:29Z Bike: i did
2015-11-08T01:43:34Z ryu0: okay. just checking.
2015-11-08T01:43:46Z resttime: TCO version http://paste.lisp.org/display/158776
2015-11-08T01:44:34Z Ven joined #lisp
2015-11-08T01:46:02Z NeverDie joined #lisp
2015-11-08T01:47:11Z axion: thanks
2015-11-08T01:47:30Z EvW joined #lisp
2015-11-08T01:48:33Z mishoo_ quit (Ping timeout: 255 seconds)
2015-11-08T01:48:52Z scymtym_ quit (Ping timeout: 250 seconds)
2015-11-08T01:56:59Z Ven quit (Read error: Connection reset by peer)
2015-11-08T01:59:26Z Ven joined #lisp
2015-11-08T02:04:34Z |3b|: for easy, and if using libs counts as "without loop", (mapcar 'cdr (alexandria:plist-alist ...))
2015-11-08T02:04:46Z |3b| wonders why alexandria doesn't hand plist-values to match hash-table-values
2015-11-08T02:06:03Z |3b|: *have
2015-11-08T02:08:58Z aiwaz quit (Max SendQ exceeded)
2015-11-08T02:09:16Z aiwaz joined #lisp
2015-11-08T02:11:55Z Ven quit (Read error: Connection reset by peer)
2015-11-08T02:13:37Z Ven joined #lisp
2015-11-08T02:17:50Z ovidnis joined #lisp
2015-11-08T02:18:52Z mrcom joined #lisp
2015-11-08T02:20:46Z lispyone joined #lisp
2015-11-08T02:26:34Z Ven quit (Read error: Connection reset by peer)
2015-11-08T02:27:01Z leafybas_ quit (Remote host closed the connection)
2015-11-08T02:27:08Z pillton joined #lisp
2015-11-08T02:29:12Z Ven joined #lisp
2015-11-08T02:32:09Z Jesin quit (Read error: Connection reset by peer)
2015-11-08T02:32:12Z ajf- quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-11-08T02:34:10Z Jesin joined #lisp
2015-11-08T02:35:09Z vsync___ quit (Quit: ircII EPIC4-2.10.1 -- Are we there yet?)
2015-11-08T02:36:11Z vsync_ is now known as vsync
2015-11-08T02:36:29Z aap_ joined #lisp
2015-11-08T02:36:34Z Ven quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-11-08T02:38:20Z axion: hmm i'm trying to understand why my slime indents loop wrongly
2015-11-08T02:39:21Z EvW quit (Ping timeout: 252 seconds)
2015-11-08T02:39:37Z aap quit (Ping timeout: 244 seconds)
2015-11-08T02:40:45Z ahungry joined #lisp
2015-11-08T02:40:50Z pocket joined #lisp
2015-11-08T02:41:00Z yrdz quit (Read error: Connection reset by peer)
2015-11-08T02:41:17Z yrdz joined #lisp
2015-11-08T02:41:39Z drmeister quit (Remote host closed the connection)
2015-11-08T02:41:39Z CEnnis91 quit (Remote host closed the connection)
2015-11-08T02:43:46Z axion: if i have an 'unless' clause before 'do', then 'do' is indented more. i have never seen this before or know what has changed with slime/emacs for it to do this
2015-11-08T02:45:17Z White_Flame: I've always seen loop indent strangely.  It's just an artifact of being a sub-language, if I were to guess
2015-11-08T02:45:47Z White_Flame: it doesn't have the explicit AST built in, as sexprs do
2015-11-08T02:45:50Z axion: maybe i'm just used to slimv doing it right
2015-11-08T02:46:08Z axion: i don't know if i ever noticed slime doing this before, as i've only been using emacs for a couple weeks
2015-11-08T02:47:57Z Ukari joined #lisp
2015-11-08T02:48:03Z Karl_Dscc joined #lisp
2015-11-08T02:54:21Z Nikotiini quit (Read error: Connection reset by peer)
2015-11-08T02:54:38Z Nikotiini joined #lisp
2015-11-08T02:54:51Z Zabriskie joined #lisp
2015-11-08T02:57:28Z mrcom quit (Quit: This computer has gone to sleep)
2015-11-08T03:03:49Z rhg135 joined #lisp
2015-11-08T03:04:46Z |3b|: what's wrong with indenting the loop clauses affected by the conditional?
2015-11-08T03:05:17Z |3b| wouldn't complain about not doing it, but it seems like a reasonable thing to do
2015-11-08T03:05:43Z |3b|: i think that might be one of the things the slime-indentation contrib handles though, so might look there for a way to configure it if you don't like it
2015-11-08T03:06:33Z lisse quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-11-08T03:13:46Z lisse joined #lisp
2015-11-08T03:17:08Z ryu0: huh.
2015-11-08T03:17:31Z ryu0: imagine that. there's an ISO standard for Lisp. I thought ANSI CL was it.
2015-11-08T03:17:41Z ryu0: https://en.wikipedia.org/wiki/ISLISP
2015-11-08T03:18:03Z Bike: ansi and iso are different organizations, though standards organizations are really boring and mixing them up is understandable
2015-11-08T03:18:21Z pocket quit (Quit: Leaving...)
2015-11-08T03:18:37Z ryu0: Bike: i realize that. it's just sometimes i've seen ISO takes ANSI standards and take them further.
2015-11-08T03:19:06Z ryu0: iirc, ANSI C eventually became a basis for ISO C standard for example?
2015-11-08T03:19:19Z ryu0: hm.
2015-11-08T03:19:22Z lisse quit (Quit: Textual IRC Client: www.textualapp.com)
2015-11-08T03:20:00Z ryu0: maybe i'm mistaken but this is what i thought...
2015-11-08T03:21:02Z Bike: iso c90 is almost identical to ansi c89, says wikipedia.
2015-11-08T03:21:21Z Bike: ok, this is pretty funny actually.
2015-11-08T03:21:55Z Bike: iso c95 is an extension to ansi c89, and then ansi c99 is an iso standard?
2015-11-08T03:22:14Z ryu0: i thought ANSI C was only for the c89 standard.
2015-11-08T03:22:31Z GGMethos quit (Quit: WeeChat 1.3-dev)
2015-11-08T03:23:08Z ryu0: In March 2000, ANSI adopted the ISO/IEC 9899:1999 standard.
2015-11-08T03:23:17Z ryu0: so it appears ISO took over after that.
2015-11-08T03:24:00Z Whymind quit (Remote host closed the connection)
2015-11-08T03:24:19Z ryu0: Bike: any idea if this ISO ISLISP has any relevance? it seems to be somewhat like the failed ISO Pascal standard. were there any real implementations of it?
2015-11-08T03:24:22Z LiamH quit (Quit: Leaving.)
2015-11-08T03:24:22Z ryu0 ponders.
2015-11-08T03:24:56Z lokulin joined #lisp
2015-11-08T03:25:00Z Bike: the only thing i consistently remember about islisp is that CL has lambda forms because of it.
2015-11-08T03:25:15Z ryu0: ah.
2015-11-08T03:25:38Z ryu0: https://en.wikipedia.org/wiki/OpenLisp
2015-11-08T03:25:49Z ryu0: "License: Proprietary license"
2015-11-08T03:26:03Z Whymind joined #lisp
2015-11-08T03:26:05Z ryu0: the irony. called open lisp but has a restrictive license. XD
2015-11-08T03:27:00Z ryu0: oh, "open system"
2015-11-08T03:27:02Z ryu0 facepalms.
2015-11-08T03:27:39Z Bike: words betray
2015-11-08T03:29:56Z GGMethos joined #lisp
